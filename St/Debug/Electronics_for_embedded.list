
Electronics_for_embedded.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004c24  08000110  08000110  00010110  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000003e4  08004d38  08004d38  00014d38  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800511c  0800511c  000201dc  2**0
                  CONTENTS
  4 .ARM          00000000  0800511c  0800511c  000201dc  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800511c  0800511c  000201dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800511c  0800511c  0001511c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08005120  08005120  00015120  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001dc  20000000  08005124  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000044  200001dc  08005300  000201dc  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000220  08005300  00020220  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000201dc  2**0
                  CONTENTS, READONLY
 12 .debug_info   000022d2  00000000  00000000  00020205  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000af4  00000000  00000000  000224d7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000200  00000000  00000000  00022fd0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000178  00000000  00000000  000231d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00011d8c  00000000  00000000  00023348  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00003f3a  00000000  00000000  000350d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000594da  00000000  00000000  0003900e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000924e8  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001964  00000000  00000000  00092538  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .stab         000000b4  00000000  00000000  00093e9c  2**2
                  CONTENTS, READONLY, DEBUGGING
 22 .stabstr      00000183  00000000  00000000  00093f50  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	; (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	; (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	; (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	200001dc 	.word	0x200001dc
 800012c:	00000000 	.word	0x00000000
 8000130:	08004d1c 	.word	0x08004d1c

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	; (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	; (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	200001e0 	.word	0x200001e0
 800014c:	08004d1c 	.word	0x08004d1c

08000150 <strlen>:
 8000150:	4603      	mov	r3, r0
 8000152:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000156:	2a00      	cmp	r2, #0
 8000158:	d1fb      	bne.n	8000152 <strlen+0x2>
 800015a:	1a18      	subs	r0, r3, r0
 800015c:	3801      	subs	r0, #1
 800015e:	4770      	bx	lr

08000160 <__aeabi_drsub>:
 8000160:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000164:	e002      	b.n	800016c <__adddf3>
 8000166:	bf00      	nop

08000168 <__aeabi_dsub>:
 8000168:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800016c <__adddf3>:
 800016c:	b530      	push	{r4, r5, lr}
 800016e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000172:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000176:	ea94 0f05 	teq	r4, r5
 800017a:	bf08      	it	eq
 800017c:	ea90 0f02 	teqeq	r0, r2
 8000180:	bf1f      	itttt	ne
 8000182:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000186:	ea55 0c02 	orrsne.w	ip, r5, r2
 800018a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800018e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000192:	f000 80e2 	beq.w	800035a <__adddf3+0x1ee>
 8000196:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800019a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800019e:	bfb8      	it	lt
 80001a0:	426d      	neglt	r5, r5
 80001a2:	dd0c      	ble.n	80001be <__adddf3+0x52>
 80001a4:	442c      	add	r4, r5
 80001a6:	ea80 0202 	eor.w	r2, r0, r2
 80001aa:	ea81 0303 	eor.w	r3, r1, r3
 80001ae:	ea82 0000 	eor.w	r0, r2, r0
 80001b2:	ea83 0101 	eor.w	r1, r3, r1
 80001b6:	ea80 0202 	eor.w	r2, r0, r2
 80001ba:	ea81 0303 	eor.w	r3, r1, r3
 80001be:	2d36      	cmp	r5, #54	; 0x36
 80001c0:	bf88      	it	hi
 80001c2:	bd30      	pophi	{r4, r5, pc}
 80001c4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80001c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001cc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80001d0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001d4:	d002      	beq.n	80001dc <__adddf3+0x70>
 80001d6:	4240      	negs	r0, r0
 80001d8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001dc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80001e0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80001e4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80001e8:	d002      	beq.n	80001f0 <__adddf3+0x84>
 80001ea:	4252      	negs	r2, r2
 80001ec:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80001f0:	ea94 0f05 	teq	r4, r5
 80001f4:	f000 80a7 	beq.w	8000346 <__adddf3+0x1da>
 80001f8:	f1a4 0401 	sub.w	r4, r4, #1
 80001fc:	f1d5 0e20 	rsbs	lr, r5, #32
 8000200:	db0d      	blt.n	800021e <__adddf3+0xb2>
 8000202:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000206:	fa22 f205 	lsr.w	r2, r2, r5
 800020a:	1880      	adds	r0, r0, r2
 800020c:	f141 0100 	adc.w	r1, r1, #0
 8000210:	fa03 f20e 	lsl.w	r2, r3, lr
 8000214:	1880      	adds	r0, r0, r2
 8000216:	fa43 f305 	asr.w	r3, r3, r5
 800021a:	4159      	adcs	r1, r3
 800021c:	e00e      	b.n	800023c <__adddf3+0xd0>
 800021e:	f1a5 0520 	sub.w	r5, r5, #32
 8000222:	f10e 0e20 	add.w	lr, lr, #32
 8000226:	2a01      	cmp	r2, #1
 8000228:	fa03 fc0e 	lsl.w	ip, r3, lr
 800022c:	bf28      	it	cs
 800022e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000232:	fa43 f305 	asr.w	r3, r3, r5
 8000236:	18c0      	adds	r0, r0, r3
 8000238:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800023c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000240:	d507      	bpl.n	8000252 <__adddf3+0xe6>
 8000242:	f04f 0e00 	mov.w	lr, #0
 8000246:	f1dc 0c00 	rsbs	ip, ip, #0
 800024a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800024e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000252:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000256:	d31b      	bcc.n	8000290 <__adddf3+0x124>
 8000258:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800025c:	d30c      	bcc.n	8000278 <__adddf3+0x10c>
 800025e:	0849      	lsrs	r1, r1, #1
 8000260:	ea5f 0030 	movs.w	r0, r0, rrx
 8000264:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000268:	f104 0401 	add.w	r4, r4, #1
 800026c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000270:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000274:	f080 809a 	bcs.w	80003ac <__adddf3+0x240>
 8000278:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800027c:	bf08      	it	eq
 800027e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000282:	f150 0000 	adcs.w	r0, r0, #0
 8000286:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800028a:	ea41 0105 	orr.w	r1, r1, r5
 800028e:	bd30      	pop	{r4, r5, pc}
 8000290:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000294:	4140      	adcs	r0, r0
 8000296:	eb41 0101 	adc.w	r1, r1, r1
 800029a:	3c01      	subs	r4, #1
 800029c:	bf28      	it	cs
 800029e:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80002a2:	d2e9      	bcs.n	8000278 <__adddf3+0x10c>
 80002a4:	f091 0f00 	teq	r1, #0
 80002a8:	bf04      	itt	eq
 80002aa:	4601      	moveq	r1, r0
 80002ac:	2000      	moveq	r0, #0
 80002ae:	fab1 f381 	clz	r3, r1
 80002b2:	bf08      	it	eq
 80002b4:	3320      	addeq	r3, #32
 80002b6:	f1a3 030b 	sub.w	r3, r3, #11
 80002ba:	f1b3 0220 	subs.w	r2, r3, #32
 80002be:	da0c      	bge.n	80002da <__adddf3+0x16e>
 80002c0:	320c      	adds	r2, #12
 80002c2:	dd08      	ble.n	80002d6 <__adddf3+0x16a>
 80002c4:	f102 0c14 	add.w	ip, r2, #20
 80002c8:	f1c2 020c 	rsb	r2, r2, #12
 80002cc:	fa01 f00c 	lsl.w	r0, r1, ip
 80002d0:	fa21 f102 	lsr.w	r1, r1, r2
 80002d4:	e00c      	b.n	80002f0 <__adddf3+0x184>
 80002d6:	f102 0214 	add.w	r2, r2, #20
 80002da:	bfd8      	it	le
 80002dc:	f1c2 0c20 	rsble	ip, r2, #32
 80002e0:	fa01 f102 	lsl.w	r1, r1, r2
 80002e4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002e8:	bfdc      	itt	le
 80002ea:	ea41 010c 	orrle.w	r1, r1, ip
 80002ee:	4090      	lslle	r0, r2
 80002f0:	1ae4      	subs	r4, r4, r3
 80002f2:	bfa2      	ittt	ge
 80002f4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80002f8:	4329      	orrge	r1, r5
 80002fa:	bd30      	popge	{r4, r5, pc}
 80002fc:	ea6f 0404 	mvn.w	r4, r4
 8000300:	3c1f      	subs	r4, #31
 8000302:	da1c      	bge.n	800033e <__adddf3+0x1d2>
 8000304:	340c      	adds	r4, #12
 8000306:	dc0e      	bgt.n	8000326 <__adddf3+0x1ba>
 8000308:	f104 0414 	add.w	r4, r4, #20
 800030c:	f1c4 0220 	rsb	r2, r4, #32
 8000310:	fa20 f004 	lsr.w	r0, r0, r4
 8000314:	fa01 f302 	lsl.w	r3, r1, r2
 8000318:	ea40 0003 	orr.w	r0, r0, r3
 800031c:	fa21 f304 	lsr.w	r3, r1, r4
 8000320:	ea45 0103 	orr.w	r1, r5, r3
 8000324:	bd30      	pop	{r4, r5, pc}
 8000326:	f1c4 040c 	rsb	r4, r4, #12
 800032a:	f1c4 0220 	rsb	r2, r4, #32
 800032e:	fa20 f002 	lsr.w	r0, r0, r2
 8000332:	fa01 f304 	lsl.w	r3, r1, r4
 8000336:	ea40 0003 	orr.w	r0, r0, r3
 800033a:	4629      	mov	r1, r5
 800033c:	bd30      	pop	{r4, r5, pc}
 800033e:	fa21 f004 	lsr.w	r0, r1, r4
 8000342:	4629      	mov	r1, r5
 8000344:	bd30      	pop	{r4, r5, pc}
 8000346:	f094 0f00 	teq	r4, #0
 800034a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800034e:	bf06      	itte	eq
 8000350:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000354:	3401      	addeq	r4, #1
 8000356:	3d01      	subne	r5, #1
 8000358:	e74e      	b.n	80001f8 <__adddf3+0x8c>
 800035a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800035e:	bf18      	it	ne
 8000360:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000364:	d029      	beq.n	80003ba <__adddf3+0x24e>
 8000366:	ea94 0f05 	teq	r4, r5
 800036a:	bf08      	it	eq
 800036c:	ea90 0f02 	teqeq	r0, r2
 8000370:	d005      	beq.n	800037e <__adddf3+0x212>
 8000372:	ea54 0c00 	orrs.w	ip, r4, r0
 8000376:	bf04      	itt	eq
 8000378:	4619      	moveq	r1, r3
 800037a:	4610      	moveq	r0, r2
 800037c:	bd30      	pop	{r4, r5, pc}
 800037e:	ea91 0f03 	teq	r1, r3
 8000382:	bf1e      	ittt	ne
 8000384:	2100      	movne	r1, #0
 8000386:	2000      	movne	r0, #0
 8000388:	bd30      	popne	{r4, r5, pc}
 800038a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800038e:	d105      	bne.n	800039c <__adddf3+0x230>
 8000390:	0040      	lsls	r0, r0, #1
 8000392:	4149      	adcs	r1, r1
 8000394:	bf28      	it	cs
 8000396:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800039a:	bd30      	pop	{r4, r5, pc}
 800039c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80003a0:	bf3c      	itt	cc
 80003a2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80003a6:	bd30      	popcc	{r4, r5, pc}
 80003a8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003ac:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80003b0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80003b4:	f04f 0000 	mov.w	r0, #0
 80003b8:	bd30      	pop	{r4, r5, pc}
 80003ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003be:	bf1a      	itte	ne
 80003c0:	4619      	movne	r1, r3
 80003c2:	4610      	movne	r0, r2
 80003c4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003c8:	bf1c      	itt	ne
 80003ca:	460b      	movne	r3, r1
 80003cc:	4602      	movne	r2, r0
 80003ce:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003d2:	bf06      	itte	eq
 80003d4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003d8:	ea91 0f03 	teqeq	r1, r3
 80003dc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80003e0:	bd30      	pop	{r4, r5, pc}
 80003e2:	bf00      	nop

080003e4 <__aeabi_ui2d>:
 80003e4:	f090 0f00 	teq	r0, #0
 80003e8:	bf04      	itt	eq
 80003ea:	2100      	moveq	r1, #0
 80003ec:	4770      	bxeq	lr
 80003ee:	b530      	push	{r4, r5, lr}
 80003f0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80003f4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80003f8:	f04f 0500 	mov.w	r5, #0
 80003fc:	f04f 0100 	mov.w	r1, #0
 8000400:	e750      	b.n	80002a4 <__adddf3+0x138>
 8000402:	bf00      	nop

08000404 <__aeabi_i2d>:
 8000404:	f090 0f00 	teq	r0, #0
 8000408:	bf04      	itt	eq
 800040a:	2100      	moveq	r1, #0
 800040c:	4770      	bxeq	lr
 800040e:	b530      	push	{r4, r5, lr}
 8000410:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000414:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000418:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800041c:	bf48      	it	mi
 800041e:	4240      	negmi	r0, r0
 8000420:	f04f 0100 	mov.w	r1, #0
 8000424:	e73e      	b.n	80002a4 <__adddf3+0x138>
 8000426:	bf00      	nop

08000428 <__aeabi_f2d>:
 8000428:	0042      	lsls	r2, r0, #1
 800042a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800042e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000432:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000436:	bf1f      	itttt	ne
 8000438:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800043c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000440:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000444:	4770      	bxne	lr
 8000446:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800044a:	bf08      	it	eq
 800044c:	4770      	bxeq	lr
 800044e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000452:	bf04      	itt	eq
 8000454:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000458:	4770      	bxeq	lr
 800045a:	b530      	push	{r4, r5, lr}
 800045c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000460:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000464:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000468:	e71c      	b.n	80002a4 <__adddf3+0x138>
 800046a:	bf00      	nop

0800046c <__aeabi_ul2d>:
 800046c:	ea50 0201 	orrs.w	r2, r0, r1
 8000470:	bf08      	it	eq
 8000472:	4770      	bxeq	lr
 8000474:	b530      	push	{r4, r5, lr}
 8000476:	f04f 0500 	mov.w	r5, #0
 800047a:	e00a      	b.n	8000492 <__aeabi_l2d+0x16>

0800047c <__aeabi_l2d>:
 800047c:	ea50 0201 	orrs.w	r2, r0, r1
 8000480:	bf08      	it	eq
 8000482:	4770      	bxeq	lr
 8000484:	b530      	push	{r4, r5, lr}
 8000486:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800048a:	d502      	bpl.n	8000492 <__aeabi_l2d+0x16>
 800048c:	4240      	negs	r0, r0
 800048e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000492:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000496:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800049a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800049e:	f43f aed8 	beq.w	8000252 <__adddf3+0xe6>
 80004a2:	f04f 0203 	mov.w	r2, #3
 80004a6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004aa:	bf18      	it	ne
 80004ac:	3203      	addne	r2, #3
 80004ae:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004b2:	bf18      	it	ne
 80004b4:	3203      	addne	r2, #3
 80004b6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004ba:	f1c2 0320 	rsb	r3, r2, #32
 80004be:	fa00 fc03 	lsl.w	ip, r0, r3
 80004c2:	fa20 f002 	lsr.w	r0, r0, r2
 80004c6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004ca:	ea40 000e 	orr.w	r0, r0, lr
 80004ce:	fa21 f102 	lsr.w	r1, r1, r2
 80004d2:	4414      	add	r4, r2
 80004d4:	e6bd      	b.n	8000252 <__adddf3+0xe6>
 80004d6:	bf00      	nop

080004d8 <__aeabi_dmul>:
 80004d8:	b570      	push	{r4, r5, r6, lr}
 80004da:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80004de:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80004e2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80004e6:	bf1d      	ittte	ne
 80004e8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80004ec:	ea94 0f0c 	teqne	r4, ip
 80004f0:	ea95 0f0c 	teqne	r5, ip
 80004f4:	f000 f8de 	bleq	80006b4 <__aeabi_dmul+0x1dc>
 80004f8:	442c      	add	r4, r5
 80004fa:	ea81 0603 	eor.w	r6, r1, r3
 80004fe:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000502:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000506:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800050a:	bf18      	it	ne
 800050c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000510:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000514:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000518:	d038      	beq.n	800058c <__aeabi_dmul+0xb4>
 800051a:	fba0 ce02 	umull	ip, lr, r0, r2
 800051e:	f04f 0500 	mov.w	r5, #0
 8000522:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000526:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800052a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800052e:	f04f 0600 	mov.w	r6, #0
 8000532:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000536:	f09c 0f00 	teq	ip, #0
 800053a:	bf18      	it	ne
 800053c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000540:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000544:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000548:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800054c:	d204      	bcs.n	8000558 <__aeabi_dmul+0x80>
 800054e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000552:	416d      	adcs	r5, r5
 8000554:	eb46 0606 	adc.w	r6, r6, r6
 8000558:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800055c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000560:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000564:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000568:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800056c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000570:	bf88      	it	hi
 8000572:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000576:	d81e      	bhi.n	80005b6 <__aeabi_dmul+0xde>
 8000578:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800057c:	bf08      	it	eq
 800057e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000582:	f150 0000 	adcs.w	r0, r0, #0
 8000586:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800058a:	bd70      	pop	{r4, r5, r6, pc}
 800058c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000590:	ea46 0101 	orr.w	r1, r6, r1
 8000594:	ea40 0002 	orr.w	r0, r0, r2
 8000598:	ea81 0103 	eor.w	r1, r1, r3
 800059c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005a0:	bfc2      	ittt	gt
 80005a2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005a6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005aa:	bd70      	popgt	{r4, r5, r6, pc}
 80005ac:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005b0:	f04f 0e00 	mov.w	lr, #0
 80005b4:	3c01      	subs	r4, #1
 80005b6:	f300 80ab 	bgt.w	8000710 <__aeabi_dmul+0x238>
 80005ba:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80005be:	bfde      	ittt	le
 80005c0:	2000      	movle	r0, #0
 80005c2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80005c6:	bd70      	pople	{r4, r5, r6, pc}
 80005c8:	f1c4 0400 	rsb	r4, r4, #0
 80005cc:	3c20      	subs	r4, #32
 80005ce:	da35      	bge.n	800063c <__aeabi_dmul+0x164>
 80005d0:	340c      	adds	r4, #12
 80005d2:	dc1b      	bgt.n	800060c <__aeabi_dmul+0x134>
 80005d4:	f104 0414 	add.w	r4, r4, #20
 80005d8:	f1c4 0520 	rsb	r5, r4, #32
 80005dc:	fa00 f305 	lsl.w	r3, r0, r5
 80005e0:	fa20 f004 	lsr.w	r0, r0, r4
 80005e4:	fa01 f205 	lsl.w	r2, r1, r5
 80005e8:	ea40 0002 	orr.w	r0, r0, r2
 80005ec:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80005f0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005f4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80005f8:	fa21 f604 	lsr.w	r6, r1, r4
 80005fc:	eb42 0106 	adc.w	r1, r2, r6
 8000600:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000604:	bf08      	it	eq
 8000606:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800060a:	bd70      	pop	{r4, r5, r6, pc}
 800060c:	f1c4 040c 	rsb	r4, r4, #12
 8000610:	f1c4 0520 	rsb	r5, r4, #32
 8000614:	fa00 f304 	lsl.w	r3, r0, r4
 8000618:	fa20 f005 	lsr.w	r0, r0, r5
 800061c:	fa01 f204 	lsl.w	r2, r1, r4
 8000620:	ea40 0002 	orr.w	r0, r0, r2
 8000624:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000628:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800062c:	f141 0100 	adc.w	r1, r1, #0
 8000630:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000634:	bf08      	it	eq
 8000636:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800063a:	bd70      	pop	{r4, r5, r6, pc}
 800063c:	f1c4 0520 	rsb	r5, r4, #32
 8000640:	fa00 f205 	lsl.w	r2, r0, r5
 8000644:	ea4e 0e02 	orr.w	lr, lr, r2
 8000648:	fa20 f304 	lsr.w	r3, r0, r4
 800064c:	fa01 f205 	lsl.w	r2, r1, r5
 8000650:	ea43 0302 	orr.w	r3, r3, r2
 8000654:	fa21 f004 	lsr.w	r0, r1, r4
 8000658:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800065c:	fa21 f204 	lsr.w	r2, r1, r4
 8000660:	ea20 0002 	bic.w	r0, r0, r2
 8000664:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000668:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800066c:	bf08      	it	eq
 800066e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000672:	bd70      	pop	{r4, r5, r6, pc}
 8000674:	f094 0f00 	teq	r4, #0
 8000678:	d10f      	bne.n	800069a <__aeabi_dmul+0x1c2>
 800067a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800067e:	0040      	lsls	r0, r0, #1
 8000680:	eb41 0101 	adc.w	r1, r1, r1
 8000684:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000688:	bf08      	it	eq
 800068a:	3c01      	subeq	r4, #1
 800068c:	d0f7      	beq.n	800067e <__aeabi_dmul+0x1a6>
 800068e:	ea41 0106 	orr.w	r1, r1, r6
 8000692:	f095 0f00 	teq	r5, #0
 8000696:	bf18      	it	ne
 8000698:	4770      	bxne	lr
 800069a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800069e:	0052      	lsls	r2, r2, #1
 80006a0:	eb43 0303 	adc.w	r3, r3, r3
 80006a4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80006a8:	bf08      	it	eq
 80006aa:	3d01      	subeq	r5, #1
 80006ac:	d0f7      	beq.n	800069e <__aeabi_dmul+0x1c6>
 80006ae:	ea43 0306 	orr.w	r3, r3, r6
 80006b2:	4770      	bx	lr
 80006b4:	ea94 0f0c 	teq	r4, ip
 80006b8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006bc:	bf18      	it	ne
 80006be:	ea95 0f0c 	teqne	r5, ip
 80006c2:	d00c      	beq.n	80006de <__aeabi_dmul+0x206>
 80006c4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006c8:	bf18      	it	ne
 80006ca:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ce:	d1d1      	bne.n	8000674 <__aeabi_dmul+0x19c>
 80006d0:	ea81 0103 	eor.w	r1, r1, r3
 80006d4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006d8:	f04f 0000 	mov.w	r0, #0
 80006dc:	bd70      	pop	{r4, r5, r6, pc}
 80006de:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006e2:	bf06      	itte	eq
 80006e4:	4610      	moveq	r0, r2
 80006e6:	4619      	moveq	r1, r3
 80006e8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ec:	d019      	beq.n	8000722 <__aeabi_dmul+0x24a>
 80006ee:	ea94 0f0c 	teq	r4, ip
 80006f2:	d102      	bne.n	80006fa <__aeabi_dmul+0x222>
 80006f4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80006f8:	d113      	bne.n	8000722 <__aeabi_dmul+0x24a>
 80006fa:	ea95 0f0c 	teq	r5, ip
 80006fe:	d105      	bne.n	800070c <__aeabi_dmul+0x234>
 8000700:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000704:	bf1c      	itt	ne
 8000706:	4610      	movne	r0, r2
 8000708:	4619      	movne	r1, r3
 800070a:	d10a      	bne.n	8000722 <__aeabi_dmul+0x24a>
 800070c:	ea81 0103 	eor.w	r1, r1, r3
 8000710:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000714:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000718:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800071c:	f04f 0000 	mov.w	r0, #0
 8000720:	bd70      	pop	{r4, r5, r6, pc}
 8000722:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000726:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800072a:	bd70      	pop	{r4, r5, r6, pc}

0800072c <__aeabi_ddiv>:
 800072c:	b570      	push	{r4, r5, r6, lr}
 800072e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000732:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000736:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800073a:	bf1d      	ittte	ne
 800073c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000740:	ea94 0f0c 	teqne	r4, ip
 8000744:	ea95 0f0c 	teqne	r5, ip
 8000748:	f000 f8a7 	bleq	800089a <__aeabi_ddiv+0x16e>
 800074c:	eba4 0405 	sub.w	r4, r4, r5
 8000750:	ea81 0e03 	eor.w	lr, r1, r3
 8000754:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000758:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800075c:	f000 8088 	beq.w	8000870 <__aeabi_ddiv+0x144>
 8000760:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000764:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000768:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800076c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000770:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000774:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000778:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800077c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000780:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000784:	429d      	cmp	r5, r3
 8000786:	bf08      	it	eq
 8000788:	4296      	cmpeq	r6, r2
 800078a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 800078e:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000792:	d202      	bcs.n	800079a <__aeabi_ddiv+0x6e>
 8000794:	085b      	lsrs	r3, r3, #1
 8000796:	ea4f 0232 	mov.w	r2, r2, rrx
 800079a:	1ab6      	subs	r6, r6, r2
 800079c:	eb65 0503 	sbc.w	r5, r5, r3
 80007a0:	085b      	lsrs	r3, r3, #1
 80007a2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007a6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80007aa:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80007ae:	ebb6 0e02 	subs.w	lr, r6, r2
 80007b2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007b6:	bf22      	ittt	cs
 80007b8:	1ab6      	subcs	r6, r6, r2
 80007ba:	4675      	movcs	r5, lr
 80007bc:	ea40 000c 	orrcs.w	r0, r0, ip
 80007c0:	085b      	lsrs	r3, r3, #1
 80007c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007c6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ca:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ce:	bf22      	ittt	cs
 80007d0:	1ab6      	subcs	r6, r6, r2
 80007d2:	4675      	movcs	r5, lr
 80007d4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007d8:	085b      	lsrs	r3, r3, #1
 80007da:	ea4f 0232 	mov.w	r2, r2, rrx
 80007de:	ebb6 0e02 	subs.w	lr, r6, r2
 80007e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007e6:	bf22      	ittt	cs
 80007e8:	1ab6      	subcs	r6, r6, r2
 80007ea:	4675      	movcs	r5, lr
 80007ec:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80007f0:	085b      	lsrs	r3, r3, #1
 80007f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007fe:	bf22      	ittt	cs
 8000800:	1ab6      	subcs	r6, r6, r2
 8000802:	4675      	movcs	r5, lr
 8000804:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000808:	ea55 0e06 	orrs.w	lr, r5, r6
 800080c:	d018      	beq.n	8000840 <__aeabi_ddiv+0x114>
 800080e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000812:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000816:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800081a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800081e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000822:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000826:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800082a:	d1c0      	bne.n	80007ae <__aeabi_ddiv+0x82>
 800082c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000830:	d10b      	bne.n	800084a <__aeabi_ddiv+0x11e>
 8000832:	ea41 0100 	orr.w	r1, r1, r0
 8000836:	f04f 0000 	mov.w	r0, #0
 800083a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800083e:	e7b6      	b.n	80007ae <__aeabi_ddiv+0x82>
 8000840:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000844:	bf04      	itt	eq
 8000846:	4301      	orreq	r1, r0
 8000848:	2000      	moveq	r0, #0
 800084a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800084e:	bf88      	it	hi
 8000850:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000854:	f63f aeaf 	bhi.w	80005b6 <__aeabi_dmul+0xde>
 8000858:	ebb5 0c03 	subs.w	ip, r5, r3
 800085c:	bf04      	itt	eq
 800085e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000862:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000866:	f150 0000 	adcs.w	r0, r0, #0
 800086a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800086e:	bd70      	pop	{r4, r5, r6, pc}
 8000870:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000874:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000878:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800087c:	bfc2      	ittt	gt
 800087e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000882:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000886:	bd70      	popgt	{r4, r5, r6, pc}
 8000888:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800088c:	f04f 0e00 	mov.w	lr, #0
 8000890:	3c01      	subs	r4, #1
 8000892:	e690      	b.n	80005b6 <__aeabi_dmul+0xde>
 8000894:	ea45 0e06 	orr.w	lr, r5, r6
 8000898:	e68d      	b.n	80005b6 <__aeabi_dmul+0xde>
 800089a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800089e:	ea94 0f0c 	teq	r4, ip
 80008a2:	bf08      	it	eq
 80008a4:	ea95 0f0c 	teqeq	r5, ip
 80008a8:	f43f af3b 	beq.w	8000722 <__aeabi_dmul+0x24a>
 80008ac:	ea94 0f0c 	teq	r4, ip
 80008b0:	d10a      	bne.n	80008c8 <__aeabi_ddiv+0x19c>
 80008b2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008b6:	f47f af34 	bne.w	8000722 <__aeabi_dmul+0x24a>
 80008ba:	ea95 0f0c 	teq	r5, ip
 80008be:	f47f af25 	bne.w	800070c <__aeabi_dmul+0x234>
 80008c2:	4610      	mov	r0, r2
 80008c4:	4619      	mov	r1, r3
 80008c6:	e72c      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008c8:	ea95 0f0c 	teq	r5, ip
 80008cc:	d106      	bne.n	80008dc <__aeabi_ddiv+0x1b0>
 80008ce:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008d2:	f43f aefd 	beq.w	80006d0 <__aeabi_dmul+0x1f8>
 80008d6:	4610      	mov	r0, r2
 80008d8:	4619      	mov	r1, r3
 80008da:	e722      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008dc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008e0:	bf18      	it	ne
 80008e2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008e6:	f47f aec5 	bne.w	8000674 <__aeabi_dmul+0x19c>
 80008ea:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80008ee:	f47f af0d 	bne.w	800070c <__aeabi_dmul+0x234>
 80008f2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80008f6:	f47f aeeb 	bne.w	80006d0 <__aeabi_dmul+0x1f8>
 80008fa:	e712      	b.n	8000722 <__aeabi_dmul+0x24a>

080008fc <__gedf2>:
 80008fc:	f04f 3cff 	mov.w	ip, #4294967295
 8000900:	e006      	b.n	8000910 <__cmpdf2+0x4>
 8000902:	bf00      	nop

08000904 <__ledf2>:
 8000904:	f04f 0c01 	mov.w	ip, #1
 8000908:	e002      	b.n	8000910 <__cmpdf2+0x4>
 800090a:	bf00      	nop

0800090c <__cmpdf2>:
 800090c:	f04f 0c01 	mov.w	ip, #1
 8000910:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000914:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000918:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800091c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000920:	bf18      	it	ne
 8000922:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000926:	d01b      	beq.n	8000960 <__cmpdf2+0x54>
 8000928:	b001      	add	sp, #4
 800092a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800092e:	bf0c      	ite	eq
 8000930:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000934:	ea91 0f03 	teqne	r1, r3
 8000938:	bf02      	ittt	eq
 800093a:	ea90 0f02 	teqeq	r0, r2
 800093e:	2000      	moveq	r0, #0
 8000940:	4770      	bxeq	lr
 8000942:	f110 0f00 	cmn.w	r0, #0
 8000946:	ea91 0f03 	teq	r1, r3
 800094a:	bf58      	it	pl
 800094c:	4299      	cmppl	r1, r3
 800094e:	bf08      	it	eq
 8000950:	4290      	cmpeq	r0, r2
 8000952:	bf2c      	ite	cs
 8000954:	17d8      	asrcs	r0, r3, #31
 8000956:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800095a:	f040 0001 	orr.w	r0, r0, #1
 800095e:	4770      	bx	lr
 8000960:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000964:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000968:	d102      	bne.n	8000970 <__cmpdf2+0x64>
 800096a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800096e:	d107      	bne.n	8000980 <__cmpdf2+0x74>
 8000970:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000974:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000978:	d1d6      	bne.n	8000928 <__cmpdf2+0x1c>
 800097a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800097e:	d0d3      	beq.n	8000928 <__cmpdf2+0x1c>
 8000980:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000984:	4770      	bx	lr
 8000986:	bf00      	nop

08000988 <__aeabi_cdrcmple>:
 8000988:	4684      	mov	ip, r0
 800098a:	4610      	mov	r0, r2
 800098c:	4662      	mov	r2, ip
 800098e:	468c      	mov	ip, r1
 8000990:	4619      	mov	r1, r3
 8000992:	4663      	mov	r3, ip
 8000994:	e000      	b.n	8000998 <__aeabi_cdcmpeq>
 8000996:	bf00      	nop

08000998 <__aeabi_cdcmpeq>:
 8000998:	b501      	push	{r0, lr}
 800099a:	f7ff ffb7 	bl	800090c <__cmpdf2>
 800099e:	2800      	cmp	r0, #0
 80009a0:	bf48      	it	mi
 80009a2:	f110 0f00 	cmnmi.w	r0, #0
 80009a6:	bd01      	pop	{r0, pc}

080009a8 <__aeabi_dcmpeq>:
 80009a8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009ac:	f7ff fff4 	bl	8000998 <__aeabi_cdcmpeq>
 80009b0:	bf0c      	ite	eq
 80009b2:	2001      	moveq	r0, #1
 80009b4:	2000      	movne	r0, #0
 80009b6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ba:	bf00      	nop

080009bc <__aeabi_dcmplt>:
 80009bc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009c0:	f7ff ffea 	bl	8000998 <__aeabi_cdcmpeq>
 80009c4:	bf34      	ite	cc
 80009c6:	2001      	movcc	r0, #1
 80009c8:	2000      	movcs	r0, #0
 80009ca:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ce:	bf00      	nop

080009d0 <__aeabi_dcmple>:
 80009d0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009d4:	f7ff ffe0 	bl	8000998 <__aeabi_cdcmpeq>
 80009d8:	bf94      	ite	ls
 80009da:	2001      	movls	r0, #1
 80009dc:	2000      	movhi	r0, #0
 80009de:	f85d fb08 	ldr.w	pc, [sp], #8
 80009e2:	bf00      	nop

080009e4 <__aeabi_dcmpge>:
 80009e4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e8:	f7ff ffce 	bl	8000988 <__aeabi_cdrcmple>
 80009ec:	bf94      	ite	ls
 80009ee:	2001      	movls	r0, #1
 80009f0:	2000      	movhi	r0, #0
 80009f2:	f85d fb08 	ldr.w	pc, [sp], #8
 80009f6:	bf00      	nop

080009f8 <__aeabi_dcmpgt>:
 80009f8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009fc:	f7ff ffc4 	bl	8000988 <__aeabi_cdrcmple>
 8000a00:	bf34      	ite	cc
 8000a02:	2001      	movcc	r0, #1
 8000a04:	2000      	movcs	r0, #0
 8000a06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a0a:	bf00      	nop

08000a0c <__aeabi_dcmpun>:
 8000a0c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a14:	d102      	bne.n	8000a1c <__aeabi_dcmpun+0x10>
 8000a16:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a1a:	d10a      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a1c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a24:	d102      	bne.n	8000a2c <__aeabi_dcmpun+0x20>
 8000a26:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a2a:	d102      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a2c:	f04f 0000 	mov.w	r0, #0
 8000a30:	4770      	bx	lr
 8000a32:	f04f 0001 	mov.w	r0, #1
 8000a36:	4770      	bx	lr

08000a38 <__aeabi_d2iz>:
 8000a38:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a3c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a40:	d215      	bcs.n	8000a6e <__aeabi_d2iz+0x36>
 8000a42:	d511      	bpl.n	8000a68 <__aeabi_d2iz+0x30>
 8000a44:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a48:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a4c:	d912      	bls.n	8000a74 <__aeabi_d2iz+0x3c>
 8000a4e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a52:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a56:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a5a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000a5e:	fa23 f002 	lsr.w	r0, r3, r2
 8000a62:	bf18      	it	ne
 8000a64:	4240      	negne	r0, r0
 8000a66:	4770      	bx	lr
 8000a68:	f04f 0000 	mov.w	r0, #0
 8000a6c:	4770      	bx	lr
 8000a6e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a72:	d105      	bne.n	8000a80 <__aeabi_d2iz+0x48>
 8000a74:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000a78:	bf08      	it	eq
 8000a7a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000a7e:	4770      	bx	lr
 8000a80:	f04f 0000 	mov.w	r0, #0
 8000a84:	4770      	bx	lr
 8000a86:	bf00      	nop

08000a88 <__aeabi_frsub>:
 8000a88:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8000a8c:	e002      	b.n	8000a94 <__addsf3>
 8000a8e:	bf00      	nop

08000a90 <__aeabi_fsub>:
 8000a90:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000a94 <__addsf3>:
 8000a94:	0042      	lsls	r2, r0, #1
 8000a96:	bf1f      	itttt	ne
 8000a98:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000a9c:	ea92 0f03 	teqne	r2, r3
 8000aa0:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000aa4:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000aa8:	d06a      	beq.n	8000b80 <__addsf3+0xec>
 8000aaa:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000aae:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000ab2:	bfc1      	itttt	gt
 8000ab4:	18d2      	addgt	r2, r2, r3
 8000ab6:	4041      	eorgt	r1, r0
 8000ab8:	4048      	eorgt	r0, r1
 8000aba:	4041      	eorgt	r1, r0
 8000abc:	bfb8      	it	lt
 8000abe:	425b      	neglt	r3, r3
 8000ac0:	2b19      	cmp	r3, #25
 8000ac2:	bf88      	it	hi
 8000ac4:	4770      	bxhi	lr
 8000ac6:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000aca:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000ace:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8000ad2:	bf18      	it	ne
 8000ad4:	4240      	negne	r0, r0
 8000ad6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000ada:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8000ade:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8000ae2:	bf18      	it	ne
 8000ae4:	4249      	negne	r1, r1
 8000ae6:	ea92 0f03 	teq	r2, r3
 8000aea:	d03f      	beq.n	8000b6c <__addsf3+0xd8>
 8000aec:	f1a2 0201 	sub.w	r2, r2, #1
 8000af0:	fa41 fc03 	asr.w	ip, r1, r3
 8000af4:	eb10 000c 	adds.w	r0, r0, ip
 8000af8:	f1c3 0320 	rsb	r3, r3, #32
 8000afc:	fa01 f103 	lsl.w	r1, r1, r3
 8000b00:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000b04:	d502      	bpl.n	8000b0c <__addsf3+0x78>
 8000b06:	4249      	negs	r1, r1
 8000b08:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000b0c:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8000b10:	d313      	bcc.n	8000b3a <__addsf3+0xa6>
 8000b12:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8000b16:	d306      	bcc.n	8000b26 <__addsf3+0x92>
 8000b18:	0840      	lsrs	r0, r0, #1
 8000b1a:	ea4f 0131 	mov.w	r1, r1, rrx
 8000b1e:	f102 0201 	add.w	r2, r2, #1
 8000b22:	2afe      	cmp	r2, #254	; 0xfe
 8000b24:	d251      	bcs.n	8000bca <__addsf3+0x136>
 8000b26:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8000b2a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000b2e:	bf08      	it	eq
 8000b30:	f020 0001 	biceq.w	r0, r0, #1
 8000b34:	ea40 0003 	orr.w	r0, r0, r3
 8000b38:	4770      	bx	lr
 8000b3a:	0049      	lsls	r1, r1, #1
 8000b3c:	eb40 0000 	adc.w	r0, r0, r0
 8000b40:	3a01      	subs	r2, #1
 8000b42:	bf28      	it	cs
 8000b44:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8000b48:	d2ed      	bcs.n	8000b26 <__addsf3+0x92>
 8000b4a:	fab0 fc80 	clz	ip, r0
 8000b4e:	f1ac 0c08 	sub.w	ip, ip, #8
 8000b52:	ebb2 020c 	subs.w	r2, r2, ip
 8000b56:	fa00 f00c 	lsl.w	r0, r0, ip
 8000b5a:	bfaa      	itet	ge
 8000b5c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000b60:	4252      	neglt	r2, r2
 8000b62:	4318      	orrge	r0, r3
 8000b64:	bfbc      	itt	lt
 8000b66:	40d0      	lsrlt	r0, r2
 8000b68:	4318      	orrlt	r0, r3
 8000b6a:	4770      	bx	lr
 8000b6c:	f092 0f00 	teq	r2, #0
 8000b70:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000b74:	bf06      	itte	eq
 8000b76:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8000b7a:	3201      	addeq	r2, #1
 8000b7c:	3b01      	subne	r3, #1
 8000b7e:	e7b5      	b.n	8000aec <__addsf3+0x58>
 8000b80:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000b84:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000b88:	bf18      	it	ne
 8000b8a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000b8e:	d021      	beq.n	8000bd4 <__addsf3+0x140>
 8000b90:	ea92 0f03 	teq	r2, r3
 8000b94:	d004      	beq.n	8000ba0 <__addsf3+0x10c>
 8000b96:	f092 0f00 	teq	r2, #0
 8000b9a:	bf08      	it	eq
 8000b9c:	4608      	moveq	r0, r1
 8000b9e:	4770      	bx	lr
 8000ba0:	ea90 0f01 	teq	r0, r1
 8000ba4:	bf1c      	itt	ne
 8000ba6:	2000      	movne	r0, #0
 8000ba8:	4770      	bxne	lr
 8000baa:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8000bae:	d104      	bne.n	8000bba <__addsf3+0x126>
 8000bb0:	0040      	lsls	r0, r0, #1
 8000bb2:	bf28      	it	cs
 8000bb4:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000bb8:	4770      	bx	lr
 8000bba:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8000bbe:	bf3c      	itt	cc
 8000bc0:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000bc4:	4770      	bxcc	lr
 8000bc6:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000bca:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8000bce:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000bd2:	4770      	bx	lr
 8000bd4:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000bd8:	bf16      	itet	ne
 8000bda:	4608      	movne	r0, r1
 8000bdc:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000be0:	4601      	movne	r1, r0
 8000be2:	0242      	lsls	r2, r0, #9
 8000be4:	bf06      	itte	eq
 8000be6:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000bea:	ea90 0f01 	teqeq	r0, r1
 8000bee:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8000bf2:	4770      	bx	lr

08000bf4 <__aeabi_ui2f>:
 8000bf4:	f04f 0300 	mov.w	r3, #0
 8000bf8:	e004      	b.n	8000c04 <__aeabi_i2f+0x8>
 8000bfa:	bf00      	nop

08000bfc <__aeabi_i2f>:
 8000bfc:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8000c00:	bf48      	it	mi
 8000c02:	4240      	negmi	r0, r0
 8000c04:	ea5f 0c00 	movs.w	ip, r0
 8000c08:	bf08      	it	eq
 8000c0a:	4770      	bxeq	lr
 8000c0c:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8000c10:	4601      	mov	r1, r0
 8000c12:	f04f 0000 	mov.w	r0, #0
 8000c16:	e01c      	b.n	8000c52 <__aeabi_l2f+0x2a>

08000c18 <__aeabi_ul2f>:
 8000c18:	ea50 0201 	orrs.w	r2, r0, r1
 8000c1c:	bf08      	it	eq
 8000c1e:	4770      	bxeq	lr
 8000c20:	f04f 0300 	mov.w	r3, #0
 8000c24:	e00a      	b.n	8000c3c <__aeabi_l2f+0x14>
 8000c26:	bf00      	nop

08000c28 <__aeabi_l2f>:
 8000c28:	ea50 0201 	orrs.w	r2, r0, r1
 8000c2c:	bf08      	it	eq
 8000c2e:	4770      	bxeq	lr
 8000c30:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000c34:	d502      	bpl.n	8000c3c <__aeabi_l2f+0x14>
 8000c36:	4240      	negs	r0, r0
 8000c38:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000c3c:	ea5f 0c01 	movs.w	ip, r1
 8000c40:	bf02      	ittt	eq
 8000c42:	4684      	moveq	ip, r0
 8000c44:	4601      	moveq	r1, r0
 8000c46:	2000      	moveq	r0, #0
 8000c48:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8000c4c:	bf08      	it	eq
 8000c4e:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000c52:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8000c56:	fabc f28c 	clz	r2, ip
 8000c5a:	3a08      	subs	r2, #8
 8000c5c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000c60:	db10      	blt.n	8000c84 <__aeabi_l2f+0x5c>
 8000c62:	fa01 fc02 	lsl.w	ip, r1, r2
 8000c66:	4463      	add	r3, ip
 8000c68:	fa00 fc02 	lsl.w	ip, r0, r2
 8000c6c:	f1c2 0220 	rsb	r2, r2, #32
 8000c70:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000c74:	fa20 f202 	lsr.w	r2, r0, r2
 8000c78:	eb43 0002 	adc.w	r0, r3, r2
 8000c7c:	bf08      	it	eq
 8000c7e:	f020 0001 	biceq.w	r0, r0, #1
 8000c82:	4770      	bx	lr
 8000c84:	f102 0220 	add.w	r2, r2, #32
 8000c88:	fa01 fc02 	lsl.w	ip, r1, r2
 8000c8c:	f1c2 0220 	rsb	r2, r2, #32
 8000c90:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000c94:	fa21 f202 	lsr.w	r2, r1, r2
 8000c98:	eb43 0002 	adc.w	r0, r3, r2
 8000c9c:	bf08      	it	eq
 8000c9e:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000ca2:	4770      	bx	lr

08000ca4 <__aeabi_fmul>:
 8000ca4:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000ca8:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000cac:	bf1e      	ittt	ne
 8000cae:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000cb2:	ea92 0f0c 	teqne	r2, ip
 8000cb6:	ea93 0f0c 	teqne	r3, ip
 8000cba:	d06f      	beq.n	8000d9c <__aeabi_fmul+0xf8>
 8000cbc:	441a      	add	r2, r3
 8000cbe:	ea80 0c01 	eor.w	ip, r0, r1
 8000cc2:	0240      	lsls	r0, r0, #9
 8000cc4:	bf18      	it	ne
 8000cc6:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000cca:	d01e      	beq.n	8000d0a <__aeabi_fmul+0x66>
 8000ccc:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8000cd0:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000cd4:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000cd8:	fba0 3101 	umull	r3, r1, r0, r1
 8000cdc:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000ce0:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8000ce4:	bf3e      	ittt	cc
 8000ce6:	0049      	lslcc	r1, r1, #1
 8000ce8:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000cec:	005b      	lslcc	r3, r3, #1
 8000cee:	ea40 0001 	orr.w	r0, r0, r1
 8000cf2:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 8000cf6:	2afd      	cmp	r2, #253	; 0xfd
 8000cf8:	d81d      	bhi.n	8000d36 <__aeabi_fmul+0x92>
 8000cfa:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8000cfe:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000d02:	bf08      	it	eq
 8000d04:	f020 0001 	biceq.w	r0, r0, #1
 8000d08:	4770      	bx	lr
 8000d0a:	f090 0f00 	teq	r0, #0
 8000d0e:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000d12:	bf08      	it	eq
 8000d14:	0249      	lsleq	r1, r1, #9
 8000d16:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000d1a:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000d1e:	3a7f      	subs	r2, #127	; 0x7f
 8000d20:	bfc2      	ittt	gt
 8000d22:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000d26:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000d2a:	4770      	bxgt	lr
 8000d2c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000d30:	f04f 0300 	mov.w	r3, #0
 8000d34:	3a01      	subs	r2, #1
 8000d36:	dc5d      	bgt.n	8000df4 <__aeabi_fmul+0x150>
 8000d38:	f112 0f19 	cmn.w	r2, #25
 8000d3c:	bfdc      	itt	le
 8000d3e:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8000d42:	4770      	bxle	lr
 8000d44:	f1c2 0200 	rsb	r2, r2, #0
 8000d48:	0041      	lsls	r1, r0, #1
 8000d4a:	fa21 f102 	lsr.w	r1, r1, r2
 8000d4e:	f1c2 0220 	rsb	r2, r2, #32
 8000d52:	fa00 fc02 	lsl.w	ip, r0, r2
 8000d56:	ea5f 0031 	movs.w	r0, r1, rrx
 8000d5a:	f140 0000 	adc.w	r0, r0, #0
 8000d5e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000d62:	bf08      	it	eq
 8000d64:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000d68:	4770      	bx	lr
 8000d6a:	f092 0f00 	teq	r2, #0
 8000d6e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000d72:	bf02      	ittt	eq
 8000d74:	0040      	lsleq	r0, r0, #1
 8000d76:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000d7a:	3a01      	subeq	r2, #1
 8000d7c:	d0f9      	beq.n	8000d72 <__aeabi_fmul+0xce>
 8000d7e:	ea40 000c 	orr.w	r0, r0, ip
 8000d82:	f093 0f00 	teq	r3, #0
 8000d86:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000d8a:	bf02      	ittt	eq
 8000d8c:	0049      	lsleq	r1, r1, #1
 8000d8e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000d92:	3b01      	subeq	r3, #1
 8000d94:	d0f9      	beq.n	8000d8a <__aeabi_fmul+0xe6>
 8000d96:	ea41 010c 	orr.w	r1, r1, ip
 8000d9a:	e78f      	b.n	8000cbc <__aeabi_fmul+0x18>
 8000d9c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000da0:	ea92 0f0c 	teq	r2, ip
 8000da4:	bf18      	it	ne
 8000da6:	ea93 0f0c 	teqne	r3, ip
 8000daa:	d00a      	beq.n	8000dc2 <__aeabi_fmul+0x11e>
 8000dac:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000db0:	bf18      	it	ne
 8000db2:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000db6:	d1d8      	bne.n	8000d6a <__aeabi_fmul+0xc6>
 8000db8:	ea80 0001 	eor.w	r0, r0, r1
 8000dbc:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000dc0:	4770      	bx	lr
 8000dc2:	f090 0f00 	teq	r0, #0
 8000dc6:	bf17      	itett	ne
 8000dc8:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8000dcc:	4608      	moveq	r0, r1
 8000dce:	f091 0f00 	teqne	r1, #0
 8000dd2:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8000dd6:	d014      	beq.n	8000e02 <__aeabi_fmul+0x15e>
 8000dd8:	ea92 0f0c 	teq	r2, ip
 8000ddc:	d101      	bne.n	8000de2 <__aeabi_fmul+0x13e>
 8000dde:	0242      	lsls	r2, r0, #9
 8000de0:	d10f      	bne.n	8000e02 <__aeabi_fmul+0x15e>
 8000de2:	ea93 0f0c 	teq	r3, ip
 8000de6:	d103      	bne.n	8000df0 <__aeabi_fmul+0x14c>
 8000de8:	024b      	lsls	r3, r1, #9
 8000dea:	bf18      	it	ne
 8000dec:	4608      	movne	r0, r1
 8000dee:	d108      	bne.n	8000e02 <__aeabi_fmul+0x15e>
 8000df0:	ea80 0001 	eor.w	r0, r0, r1
 8000df4:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000df8:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000dfc:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000e00:	4770      	bx	lr
 8000e02:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000e06:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8000e0a:	4770      	bx	lr

08000e0c <__aeabi_fdiv>:
 8000e0c:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000e10:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000e14:	bf1e      	ittt	ne
 8000e16:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000e1a:	ea92 0f0c 	teqne	r2, ip
 8000e1e:	ea93 0f0c 	teqne	r3, ip
 8000e22:	d069      	beq.n	8000ef8 <__aeabi_fdiv+0xec>
 8000e24:	eba2 0203 	sub.w	r2, r2, r3
 8000e28:	ea80 0c01 	eor.w	ip, r0, r1
 8000e2c:	0249      	lsls	r1, r1, #9
 8000e2e:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000e32:	d037      	beq.n	8000ea4 <__aeabi_fdiv+0x98>
 8000e34:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8000e38:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000e3c:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000e40:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000e44:	428b      	cmp	r3, r1
 8000e46:	bf38      	it	cc
 8000e48:	005b      	lslcc	r3, r3, #1
 8000e4a:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8000e4e:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 8000e52:	428b      	cmp	r3, r1
 8000e54:	bf24      	itt	cs
 8000e56:	1a5b      	subcs	r3, r3, r1
 8000e58:	ea40 000c 	orrcs.w	r0, r0, ip
 8000e5c:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000e60:	bf24      	itt	cs
 8000e62:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000e66:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000e6a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000e6e:	bf24      	itt	cs
 8000e70:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000e74:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000e78:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000e7c:	bf24      	itt	cs
 8000e7e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000e82:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000e86:	011b      	lsls	r3, r3, #4
 8000e88:	bf18      	it	ne
 8000e8a:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000e8e:	d1e0      	bne.n	8000e52 <__aeabi_fdiv+0x46>
 8000e90:	2afd      	cmp	r2, #253	; 0xfd
 8000e92:	f63f af50 	bhi.w	8000d36 <__aeabi_fmul+0x92>
 8000e96:	428b      	cmp	r3, r1
 8000e98:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000e9c:	bf08      	it	eq
 8000e9e:	f020 0001 	biceq.w	r0, r0, #1
 8000ea2:	4770      	bx	lr
 8000ea4:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000ea8:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000eac:	327f      	adds	r2, #127	; 0x7f
 8000eae:	bfc2      	ittt	gt
 8000eb0:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000eb4:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000eb8:	4770      	bxgt	lr
 8000eba:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000ebe:	f04f 0300 	mov.w	r3, #0
 8000ec2:	3a01      	subs	r2, #1
 8000ec4:	e737      	b.n	8000d36 <__aeabi_fmul+0x92>
 8000ec6:	f092 0f00 	teq	r2, #0
 8000eca:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000ece:	bf02      	ittt	eq
 8000ed0:	0040      	lsleq	r0, r0, #1
 8000ed2:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000ed6:	3a01      	subeq	r2, #1
 8000ed8:	d0f9      	beq.n	8000ece <__aeabi_fdiv+0xc2>
 8000eda:	ea40 000c 	orr.w	r0, r0, ip
 8000ede:	f093 0f00 	teq	r3, #0
 8000ee2:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000ee6:	bf02      	ittt	eq
 8000ee8:	0049      	lsleq	r1, r1, #1
 8000eea:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000eee:	3b01      	subeq	r3, #1
 8000ef0:	d0f9      	beq.n	8000ee6 <__aeabi_fdiv+0xda>
 8000ef2:	ea41 010c 	orr.w	r1, r1, ip
 8000ef6:	e795      	b.n	8000e24 <__aeabi_fdiv+0x18>
 8000ef8:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000efc:	ea92 0f0c 	teq	r2, ip
 8000f00:	d108      	bne.n	8000f14 <__aeabi_fdiv+0x108>
 8000f02:	0242      	lsls	r2, r0, #9
 8000f04:	f47f af7d 	bne.w	8000e02 <__aeabi_fmul+0x15e>
 8000f08:	ea93 0f0c 	teq	r3, ip
 8000f0c:	f47f af70 	bne.w	8000df0 <__aeabi_fmul+0x14c>
 8000f10:	4608      	mov	r0, r1
 8000f12:	e776      	b.n	8000e02 <__aeabi_fmul+0x15e>
 8000f14:	ea93 0f0c 	teq	r3, ip
 8000f18:	d104      	bne.n	8000f24 <__aeabi_fdiv+0x118>
 8000f1a:	024b      	lsls	r3, r1, #9
 8000f1c:	f43f af4c 	beq.w	8000db8 <__aeabi_fmul+0x114>
 8000f20:	4608      	mov	r0, r1
 8000f22:	e76e      	b.n	8000e02 <__aeabi_fmul+0x15e>
 8000f24:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000f28:	bf18      	it	ne
 8000f2a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000f2e:	d1ca      	bne.n	8000ec6 <__aeabi_fdiv+0xba>
 8000f30:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8000f34:	f47f af5c 	bne.w	8000df0 <__aeabi_fmul+0x14c>
 8000f38:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 8000f3c:	f47f af3c 	bne.w	8000db8 <__aeabi_fmul+0x114>
 8000f40:	e75f      	b.n	8000e02 <__aeabi_fmul+0x15e>
 8000f42:	bf00      	nop

08000f44 <__NVIC_ClearPendingIRQ>:
  \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
 8000f44:	b480      	push	{r7}
 8000f46:	b083      	sub	sp, #12
 8000f48:	af00      	add	r7, sp, #0
 8000f4a:	4603      	mov	r3, r0
 8000f4c:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000f4e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000f52:	2b00      	cmp	r3, #0
 8000f54:	db0c      	blt.n	8000f70 <__NVIC_ClearPendingIRQ+0x2c>
  {
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000f56:	79fb      	ldrb	r3, [r7, #7]
 8000f58:	f003 021f 	and.w	r2, r3, #31
 8000f5c:	4907      	ldr	r1, [pc, #28]	; (8000f7c <__NVIC_ClearPendingIRQ+0x38>)
 8000f5e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000f62:	095b      	lsrs	r3, r3, #5
 8000f64:	2001      	movs	r0, #1
 8000f66:	fa00 f202 	lsl.w	r2, r0, r2
 8000f6a:	3360      	adds	r3, #96	; 0x60
 8000f6c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8000f70:	bf00      	nop
 8000f72:	370c      	adds	r7, #12
 8000f74:	46bd      	mov	sp, r7
 8000f76:	bc80      	pop	{r7}
 8000f78:	4770      	bx	lr
 8000f7a:	bf00      	nop
 8000f7c:	e000e100 	.word	0xe000e100

08000f80 <main>:
bool adcAW = false;
int emergency = 0;
float temp=0;
char data[]= "19.09*0*192";
int main(void)
{
 8000f80:	b580      	push	{r7, lr}
 8000f82:	b08a      	sub	sp, #40	; 0x28
 8000f84:	af00      	add	r7, sp, #0
	/*
	 * @brief Call functions
	 */
	rcc_HSE_config();
 8000f86:	f000 fc23 	bl	80017d0 <rcc_HSE_config>
	rcc_SysTick_config(72000);
 8000f8a:	486b      	ldr	r0, [pc, #428]	; (8001138 <main+0x1b8>)
 8000f8c:	f000 fca6 	bl	80018dc <rcc_SysTick_config>
	uart_UART_GPIO_config();
 8000f90:	f000 fd00 	bl	8001994 <uart_UART_GPIO_config>
	uart_UART1_config();
 8000f94:	f000 fd84 	bl	8001aa0 <uart_UART1_config>
	uart_UART3_config();
 8000f98:	f000 fe22 	bl	8001be0 <uart_UART3_config>
//	printf("Start up....!\n");
	gpio_LED_config();
 8000f9c:	f000 fb84 	bl	80016a8 <gpio_LED_config>
	gpio_LED_write(1);
 8000fa0:	2001      	movs	r0, #1
 8000fa2:	f000 fba3 	bl	80016ec <gpio_LED_write>
	adc_GPIO_config();
 8000fa6:	f000 f967 	bl	8001278 <adc_GPIO_config>
	adc_multiChannelConfig();
 8000faa:	f000 f9b1 	bl	8001310 <adc_multiChannelConfig>
	adc_multiChannel_DMA_config(AdcArray);
 8000fae:	4863      	ldr	r0, [pc, #396]	; (800113c <main+0x1bc>)
 8000fb0:	f000 fa2e 	bl	8001410 <adc_multiChannel_DMA_config>
	adc_AWD_Config(3,0,3700);
 8000fb4:	f640 6274 	movw	r2, #3700	; 0xe74
 8000fb8:	2100      	movs	r1, #0
 8000fba:	2003      	movs	r0, #3
 8000fbc:	f000 fa8a 	bl	80014d4 <adc_AWD_Config>
	adc_start();
 8000fc0:	f000 f98e 	bl	80012e0 <adc_start>
	//3000 ms delay
	rcc_msDelay(3000);
 8000fc4:	f640 30b8 	movw	r0, #3000	; 0xbb8
 8000fc8:	f000 fcc4 	bl	8001954 <rcc_msDelay>
//	//Define variable for data in memory
	char Mem_data[sizeof(data)];
//	//Reading data of memory at address 0x08007C00
	flash_read16(0x08007C00,(uint16_t *)Mem_data,sizeof(data));
 8000fcc:	f107 0318 	add.w	r3, r7, #24
 8000fd0:	220c      	movs	r2, #12
 8000fd2:	4619      	mov	r1, r3
 8000fd4:	485a      	ldr	r0, [pc, #360]	; (8001140 <main+0x1c0>)
 8000fd6:	f000 fb43 	bl	8001660 <flash_read16>
	//Sending the value of memory as initial value to ESP8266
	printf("%s\n",Mem_data);
 8000fda:	f107 0318 	add.w	r3, r7, #24
 8000fde:	4618      	mov	r0, r3
 8000fe0:	f001 fbbe 	bl	8002760 <puts>
	while(1){
		//if end of conversion flag is set
		if(adcEoc == true){
 8000fe4:	4b57      	ldr	r3, [pc, #348]	; (8001144 <main+0x1c4>)
 8000fe6:	781b      	ldrb	r3, [r3, #0]
 8000fe8:	2b00      	cmp	r3, #0
 8000fea:	f000 8095 	beq.w	8001118 <main+0x198>
			//clearing flag of EOC
			adcEoc = false;
 8000fee:	4b55      	ldr	r3, [pc, #340]	; (8001144 <main+0x1c4>)
 8000ff0:	2200      	movs	r2, #0
 8000ff2:	701a      	strb	r2, [r3, #0]
			//Converting input analog voltage of LM35 in temprature
			temp = (float)(AdcArray[1] * 3300) / (4096);
 8000ff4:	4b51      	ldr	r3, [pc, #324]	; (800113c <main+0x1bc>)
 8000ff6:	885b      	ldrh	r3, [r3, #2]
 8000ff8:	461a      	mov	r2, r3
 8000ffa:	f640 43e4 	movw	r3, #3300	; 0xce4
 8000ffe:	fb02 f303 	mul.w	r3, r2, r3
 8001002:	4618      	mov	r0, r3
 8001004:	f7ff fdfa 	bl	8000bfc <__aeabi_i2f>
 8001008:	4603      	mov	r3, r0
 800100a:	f04f 418b 	mov.w	r1, #1166016512	; 0x45800000
 800100e:	4618      	mov	r0, r3
 8001010:	f7ff fefc 	bl	8000e0c <__aeabi_fdiv>
 8001014:	4603      	mov	r3, r0
 8001016:	461a      	mov	r2, r3
 8001018:	4b4b      	ldr	r3, [pc, #300]	; (8001148 <main+0x1c8>)
 800101a:	601a      	str	r2, [r3, #0]
			temp /= 10;
 800101c:	4b4a      	ldr	r3, [pc, #296]	; (8001148 <main+0x1c8>)
 800101e:	681b      	ldr	r3, [r3, #0]
 8001020:	494a      	ldr	r1, [pc, #296]	; (800114c <main+0x1cc>)
 8001022:	4618      	mov	r0, r3
 8001024:	f7ff fef2 	bl	8000e0c <__aeabi_fdiv>
 8001028:	4603      	mov	r3, r0
 800102a:	461a      	mov	r2, r3
 800102c:	4b46      	ldr	r3, [pc, #280]	; (8001148 <main+0x1c8>)
 800102e:	601a      	str	r2, [r3, #0]
			temp-=273;
 8001030:	4b45      	ldr	r3, [pc, #276]	; (8001148 <main+0x1c8>)
 8001032:	681b      	ldr	r3, [r3, #0]
 8001034:	4946      	ldr	r1, [pc, #280]	; (8001150 <main+0x1d0>)
 8001036:	4618      	mov	r0, r3
 8001038:	f7ff fd2a 	bl	8000a90 <__aeabi_fsub>
 800103c:	4603      	mov	r3, r0
 800103e:	461a      	mov	r2, r3
 8001040:	4b41      	ldr	r3, [pc, #260]	; (8001148 <main+0x1c8>)
 8001042:	601a      	str	r2, [r3, #0]
			//Converting temp value in string with 2 fraction
			char Temp_buffer[5];
			sprintf (Temp_buffer, "%.2f", temp);
 8001044:	4b40      	ldr	r3, [pc, #256]	; (8001148 <main+0x1c8>)
 8001046:	681b      	ldr	r3, [r3, #0]
 8001048:	4618      	mov	r0, r3
 800104a:	f7ff f9ed 	bl	8000428 <__aeabi_f2d>
 800104e:	4602      	mov	r2, r0
 8001050:	460b      	mov	r3, r1
 8001052:	f107 0010 	add.w	r0, r7, #16
 8001056:	493f      	ldr	r1, [pc, #252]	; (8001154 <main+0x1d4>)
 8001058:	f001 fb8a 	bl	8002770 <siprintf>
			//printf("Temp value = %s\n",Temp_buffer);
			//Copy temp which is string now into data variable
			strcpy(data,Temp_buffer);
 800105c:	f107 0310 	add.w	r3, r7, #16
 8001060:	4619      	mov	r1, r3
 8001062:	483d      	ldr	r0, [pc, #244]	; (8001158 <main+0x1d8>)
 8001064:	f001 fbb3 	bl	80027ce <strcpy>
			//Adding a '*' at the end of the data
			char ch[2] = "*\0";
 8001068:	232a      	movs	r3, #42	; 0x2a
 800106a:	81bb      	strh	r3, [r7, #12]
			strcat(data,ch);
 800106c:	f107 030c 	add.w	r3, r7, #12
 8001070:	4619      	mov	r1, r3
 8001072:	4839      	ldr	r0, [pc, #228]	; (8001158 <main+0x1d8>)
 8001074:	f001 fb9c 	bl	80027b0 <strcat>
			//initialize the value of emergency alarm to 0
			emergency = 0;
 8001078:	4b38      	ldr	r3, [pc, #224]	; (800115c <main+0x1dc>)
 800107a:	2200      	movs	r2, #0
 800107c:	601a      	str	r2, [r3, #0]
			//in this part we check if we have interrupt of AW
			//set the value of emergency alarm to 1
			if(adcAW == true){
 800107e:	4b38      	ldr	r3, [pc, #224]	; (8001160 <main+0x1e0>)
 8001080:	781b      	ldrb	r3, [r3, #0]
 8001082:	2b00      	cmp	r3, #0
 8001084:	d005      	beq.n	8001092 <main+0x112>
				adcAW = false;
 8001086:	4b36      	ldr	r3, [pc, #216]	; (8001160 <main+0x1e0>)
 8001088:	2200      	movs	r2, #0
 800108a:	701a      	strb	r2, [r3, #0]
				emergency=1;
 800108c:	4b33      	ldr	r3, [pc, #204]	; (800115c <main+0x1dc>)
 800108e:	2201      	movs	r2, #1
 8001090:	601a      	str	r2, [r3, #0]
			}
			//Converting the bool value of emergency alaram into
			//char and add it to data varaiable
			char emergency_buffer[2];
			sprintf(emergency_buffer,"%d",emergency);
 8001092:	4b32      	ldr	r3, [pc, #200]	; (800115c <main+0x1dc>)
 8001094:	681a      	ldr	r2, [r3, #0]
 8001096:	f107 0308 	add.w	r3, r7, #8
 800109a:	4932      	ldr	r1, [pc, #200]	; (8001164 <main+0x1e4>)
 800109c:	4618      	mov	r0, r3
 800109e:	f001 fb67 	bl	8002770 <siprintf>
			strcat(data,emergency_buffer);
 80010a2:	f107 0308 	add.w	r3, r7, #8
 80010a6:	4619      	mov	r1, r3
 80010a8:	482b      	ldr	r0, [pc, #172]	; (8001158 <main+0x1d8>)
 80010aa:	f001 fb81 	bl	80027b0 <strcat>
			//Adding a '*' at the end of the data
			char ch2[2] = "*\0";
 80010ae:	232a      	movs	r3, #42	; 0x2a
 80010b0:	80bb      	strh	r3, [r7, #4]
			strcat(data,ch2);
 80010b2:	1d3b      	adds	r3, r7, #4
 80010b4:	4619      	mov	r1, r3
 80010b6:	4828      	ldr	r0, [pc, #160]	; (8001158 <main+0x1d8>)
 80010b8:	f001 fb7a 	bl	80027b0 <strcat>
			//Reading the value of pot
			//Converting it to a 8 bit value
			//add it to data variable
			//Sending 8 bit values through UART3 to FPGA
			uint8_t pot= (uint32_t)(AdcArray[0]*255)/4095;
 80010bc:	4b1f      	ldr	r3, [pc, #124]	; (800113c <main+0x1bc>)
 80010be:	881b      	ldrh	r3, [r3, #0]
 80010c0:	461a      	mov	r2, r3
 80010c2:	4613      	mov	r3, r2
 80010c4:	021b      	lsls	r3, r3, #8
 80010c6:	1a9b      	subs	r3, r3, r2
 80010c8:	461a      	mov	r2, r3
 80010ca:	4b27      	ldr	r3, [pc, #156]	; (8001168 <main+0x1e8>)
 80010cc:	fba3 1302 	umull	r1, r3, r3, r2
 80010d0:	1ad2      	subs	r2, r2, r3
 80010d2:	0852      	lsrs	r2, r2, #1
 80010d4:	4413      	add	r3, r2
 80010d6:	0adb      	lsrs	r3, r3, #11
 80010d8:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
			uint8_t pp=pot;
 80010dc:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80010e0:	70fb      	strb	r3, [r7, #3]
			uart_UART3_transmit((uint8_t *)&pp,sizeof(pp),5);
 80010e2:	1cfb      	adds	r3, r7, #3
 80010e4:	2205      	movs	r2, #5
 80010e6:	2101      	movs	r1, #1
 80010e8:	4618      	mov	r0, r3
 80010ea:	f000 fdd5 	bl	8001c98 <uart_UART3_transmit>
			char pot_buffer [3];
			sprintf (pot_buffer, "%d", pot);
 80010ee:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
 80010f2:	463b      	mov	r3, r7
 80010f4:	491b      	ldr	r1, [pc, #108]	; (8001164 <main+0x1e4>)
 80010f6:	4618      	mov	r0, r3
 80010f8:	f001 fb3a 	bl	8002770 <siprintf>
			strcat(data,pot_buffer);
 80010fc:	463b      	mov	r3, r7
 80010fe:	4619      	mov	r1, r3
 8001100:	4815      	ldr	r0, [pc, #84]	; (8001158 <main+0x1d8>)
 8001102:	f001 fb55 	bl	80027b0 <strcat>
			//Sending data variable to ESP8266
			printf("%s\n",data);
 8001106:	4814      	ldr	r0, [pc, #80]	; (8001158 <main+0x1d8>)
 8001108:	f001 fb2a 	bl	8002760 <puts>
			//Starting ADC
			adc_start();
 800110c:	f000 f8e8 	bl	80012e0 <adc_start>
			rcc_msDelay(1000);
 8001110:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001114:	f000 fc1e 	bl	8001954 <rcc_msDelay>
		}
		//Toggling the built-in LED
		gpio_LED_toggle();
 8001118:	f000 fb04 	bl	8001724 <gpio_LED_toggle>
		//Unlocking memory
		flash_unlock();
 800111c:	f000 fa16 	bl	800154c <flash_unlock>
		//Erasing it
		flash_erase(0x08007C00);
 8001120:	4807      	ldr	r0, [pc, #28]	; (8001140 <main+0x1c0>)
 8001122:	f000 fa39 	bl	8001598 <flash_erase>
		//Writing data variable into memory
		flash_write16(0x08007C00,(uint16_t *)data,sizeof(data));
 8001126:	220c      	movs	r2, #12
 8001128:	490b      	ldr	r1, [pc, #44]	; (8001158 <main+0x1d8>)
 800112a:	4805      	ldr	r0, [pc, #20]	; (8001140 <main+0x1c0>)
 800112c:	f000 fa62 	bl	80015f4 <flash_write16>
		//locking memory
		flash_lock();
 8001130:	f000 fa24 	bl	800157c <flash_lock>
		if(adcEoc == true){
 8001134:	e756      	b.n	8000fe4 <main+0x64>
 8001136:	bf00      	nop
 8001138:	00011940 	.word	0x00011940
 800113c:	200001f8 	.word	0x200001f8
 8001140:	08007c00 	.word	0x08007c00
 8001144:	200001fe 	.word	0x200001fe
 8001148:	20000204 	.word	0x20000204
 800114c:	41200000 	.word	0x41200000
 8001150:	43888000 	.word	0x43888000
 8001154:	08004d38 	.word	0x08004d38
 8001158:	20000000 	.word	0x20000000
 800115c:	20000200 	.word	0x20000200
 8001160:	200001ff 	.word	0x200001ff
 8001164:	08004d40 	.word	0x08004d40
 8001168:	00100101 	.word	0x00100101

0800116c <DMA1_Channel1_IRQHandler>:
	}
}


void DMA1_Channel1_IRQHandler(void){
 800116c:	b580      	push	{r7, lr}
 800116e:	af00      	add	r7, sp, #0
	//Check if transfer complete
	if(DMA1->ISR & DMA_ISR_TCIF1){
 8001170:	4b09      	ldr	r3, [pc, #36]	; (8001198 <DMA1_Channel1_IRQHandler+0x2c>)
 8001172:	681b      	ldr	r3, [r3, #0]
 8001174:	f003 0302 	and.w	r3, r3, #2
 8001178:	2b00      	cmp	r3, #0
 800117a:	d00b      	beq.n	8001194 <DMA1_Channel1_IRQHandler+0x28>
		//clear pending interrupt
		NVIC_ClearPendingIRQ(DMA1_Channel1_IRQn);
 800117c:	200b      	movs	r0, #11
 800117e:	f7ff fee1 	bl	8000f44 <__NVIC_ClearPendingIRQ>
		//clear interrupt tansfer flag
		DMA1->IFCR |= DMA_IFCR_CGIF1;
 8001182:	4b05      	ldr	r3, [pc, #20]	; (8001198 <DMA1_Channel1_IRQHandler+0x2c>)
 8001184:	685b      	ldr	r3, [r3, #4]
 8001186:	4a04      	ldr	r2, [pc, #16]	; (8001198 <DMA1_Channel1_IRQHandler+0x2c>)
 8001188:	f043 0301 	orr.w	r3, r3, #1
 800118c:	6053      	str	r3, [r2, #4]
		//Set bool variable
		adcEoc = true;
 800118e:	4b03      	ldr	r3, [pc, #12]	; (800119c <DMA1_Channel1_IRQHandler+0x30>)
 8001190:	2201      	movs	r2, #1
 8001192:	701a      	strb	r2, [r3, #0]
	}
}
 8001194:	bf00      	nop
 8001196:	bd80      	pop	{r7, pc}
 8001198:	40020000 	.word	0x40020000
 800119c:	200001fe 	.word	0x200001fe

080011a0 <ADC1_2_IRQHandler>:

void ADC1_2_IRQHandler(void){
 80011a0:	b580      	push	{r7, lr}
 80011a2:	af00      	add	r7, sp, #0
	//Checking AW flag
	if(ADC1->SR & ADC_SR_AWD){
 80011a4:	4b09      	ldr	r3, [pc, #36]	; (80011cc <ADC1_2_IRQHandler+0x2c>)
 80011a6:	681b      	ldr	r3, [r3, #0]
 80011a8:	f003 0301 	and.w	r3, r3, #1
 80011ac:	2b00      	cmp	r3, #0
 80011ae:	d008      	beq.n	80011c2 <ADC1_2_IRQHandler+0x22>
		//we clear the flag
		ADC1->SR &= ~(ADC_SR_AWD);
 80011b0:	4b06      	ldr	r3, [pc, #24]	; (80011cc <ADC1_2_IRQHandler+0x2c>)
 80011b2:	681b      	ldr	r3, [r3, #0]
 80011b4:	4a05      	ldr	r2, [pc, #20]	; (80011cc <ADC1_2_IRQHandler+0x2c>)
 80011b6:	f023 0301 	bic.w	r3, r3, #1
 80011ba:	6013      	str	r3, [r2, #0]
		//Set bool variable
		adcAW = true;
 80011bc:	4b04      	ldr	r3, [pc, #16]	; (80011d0 <ADC1_2_IRQHandler+0x30>)
 80011be:	2201      	movs	r2, #1
 80011c0:	701a      	strb	r2, [r3, #0]
	}
	//clear pending interrupt
	NVIC_ClearPendingIRQ(ADC1_IRQn);
 80011c2:	2012      	movs	r0, #18
 80011c4:	f7ff febe 	bl	8000f44 <__NVIC_ClearPendingIRQ>

}
 80011c8:	bf00      	nop
 80011ca:	bd80      	pop	{r7, pc}
 80011cc:	40012400 	.word	0x40012400
 80011d0:	200001ff 	.word	0x200001ff

080011d4 <__io_putchar>:
#include "uart.h"

int __io_putchar(int ch);
int _write(int file,char *ptr, int len);

int __io_putchar(int ch) {
 80011d4:	b580      	push	{r7, lr}
 80011d6:	b084      	sub	sp, #16
 80011d8:	af00      	add	r7, sp, #0
 80011da:	6078      	str	r0, [r7, #4]
	 uint8_t c[1];
	 c[0] = ch & 0x00FF;
 80011dc:	687b      	ldr	r3, [r7, #4]
 80011de:	b2db      	uxtb	r3, r3
 80011e0:	733b      	strb	r3, [r7, #12]
	 uart_UART1_transmit(&c[0], 1, 100);
 80011e2:	f107 030c 	add.w	r3, r7, #12
 80011e6:	2264      	movs	r2, #100	; 0x64
 80011e8:	2101      	movs	r1, #1
 80011ea:	4618      	mov	r0, r3
 80011ec:	f000 fcb4 	bl	8001b58 <uart_UART1_transmit>
 return ch;
 80011f0:	687b      	ldr	r3, [r7, #4]
}
 80011f2:	4618      	mov	r0, r3
 80011f4:	3710      	adds	r7, #16
 80011f6:	46bd      	mov	sp, r7
 80011f8:	bd80      	pop	{r7, pc}

080011fa <_write>:

int _write(int file,char *ptr, int len) {
 80011fa:	b580      	push	{r7, lr}
 80011fc:	b086      	sub	sp, #24
 80011fe:	af00      	add	r7, sp, #0
 8001200:	60f8      	str	r0, [r7, #12]
 8001202:	60b9      	str	r1, [r7, #8]
 8001204:	607a      	str	r2, [r7, #4]
 int DataIdx;
 for(DataIdx= 0; DataIdx< len; DataIdx++) {
 8001206:	2300      	movs	r3, #0
 8001208:	617b      	str	r3, [r7, #20]
 800120a:	e009      	b.n	8001220 <_write+0x26>
  __io_putchar(*ptr++);
 800120c:	68bb      	ldr	r3, [r7, #8]
 800120e:	1c5a      	adds	r2, r3, #1
 8001210:	60ba      	str	r2, [r7, #8]
 8001212:	781b      	ldrb	r3, [r3, #0]
 8001214:	4618      	mov	r0, r3
 8001216:	f7ff ffdd 	bl	80011d4 <__io_putchar>
 for(DataIdx= 0; DataIdx< len; DataIdx++) {
 800121a:	697b      	ldr	r3, [r7, #20]
 800121c:	3301      	adds	r3, #1
 800121e:	617b      	str	r3, [r7, #20]
 8001220:	697a      	ldr	r2, [r7, #20]
 8001222:	687b      	ldr	r3, [r7, #4]
 8001224:	429a      	cmp	r2, r3
 8001226:	dbf1      	blt.n	800120c <_write+0x12>
 }
 return len;
 8001228:	687b      	ldr	r3, [r7, #4]
}
 800122a:	4618      	mov	r0, r3
 800122c:	3718      	adds	r7, #24
 800122e:	46bd      	mov	sp, r7
 8001230:	bd80      	pop	{r7, pc}

08001232 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8001232:	b480      	push	{r7}
 8001234:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001236:	bf00      	nop
 8001238:	46bd      	mov	sp, r7
 800123a:	bc80      	pop	{r7}
 800123c:	4770      	bx	lr
	...

08001240 <__NVIC_EnableIRQ>:
{
 8001240:	b480      	push	{r7}
 8001242:	b083      	sub	sp, #12
 8001244:	af00      	add	r7, sp, #0
 8001246:	4603      	mov	r3, r0
 8001248:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800124a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800124e:	2b00      	cmp	r3, #0
 8001250:	db0b      	blt.n	800126a <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001252:	79fb      	ldrb	r3, [r7, #7]
 8001254:	f003 021f 	and.w	r2, r3, #31
 8001258:	4906      	ldr	r1, [pc, #24]	; (8001274 <__NVIC_EnableIRQ+0x34>)
 800125a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800125e:	095b      	lsrs	r3, r3, #5
 8001260:	2001      	movs	r0, #1
 8001262:	fa00 f202 	lsl.w	r2, r0, r2
 8001266:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800126a:	bf00      	nop
 800126c:	370c      	adds	r7, #12
 800126e:	46bd      	mov	sp, r7
 8001270:	bc80      	pop	{r7}
 8001272:	4770      	bx	lr
 8001274:	e000e100 	.word	0xe000e100

08001278 <adc_GPIO_config>:
#include "adc.h"
/**
 * @brief ADC channels GPIO configuration
 */
void adc_GPIO_config(void)
{
 8001278:	b480      	push	{r7}
 800127a:	af00      	add	r7, sp, #0
  //Enable port A clock
  RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;
 800127c:	4b16      	ldr	r3, [pc, #88]	; (80012d8 <adc_GPIO_config+0x60>)
 800127e:	699b      	ldr	r3, [r3, #24]
 8001280:	4a15      	ldr	r2, [pc, #84]	; (80012d8 <adc_GPIO_config+0x60>)
 8001282:	f043 0304 	orr.w	r3, r3, #4
 8001286:	6193      	str	r3, [r2, #24]
  //ADC pins; PA1
  //Mode: Analog
  GPIOA->CRL &= ~(GPIO_CRL_MODE1);
 8001288:	4b14      	ldr	r3, [pc, #80]	; (80012dc <adc_GPIO_config+0x64>)
 800128a:	681b      	ldr	r3, [r3, #0]
 800128c:	4a13      	ldr	r2, [pc, #76]	; (80012dc <adc_GPIO_config+0x64>)
 800128e:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 8001292:	6013      	str	r3, [r2, #0]
  GPIOA->CRL &= ~(GPIO_CRL_CNF1);
 8001294:	4b11      	ldr	r3, [pc, #68]	; (80012dc <adc_GPIO_config+0x64>)
 8001296:	681b      	ldr	r3, [r3, #0]
 8001298:	4a10      	ldr	r2, [pc, #64]	; (80012dc <adc_GPIO_config+0x64>)
 800129a:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 800129e:	6013      	str	r3, [r2, #0]
  //ADC pins; PA2
  //Mode: Analog
  GPIOA->CRL &= ~(GPIO_CRL_MODE2);
 80012a0:	4b0e      	ldr	r3, [pc, #56]	; (80012dc <adc_GPIO_config+0x64>)
 80012a2:	681b      	ldr	r3, [r3, #0]
 80012a4:	4a0d      	ldr	r2, [pc, #52]	; (80012dc <adc_GPIO_config+0x64>)
 80012a6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80012aa:	6013      	str	r3, [r2, #0]
  GPIOA->CRL &= ~(GPIO_CRL_CNF2);
 80012ac:	4b0b      	ldr	r3, [pc, #44]	; (80012dc <adc_GPIO_config+0x64>)
 80012ae:	681b      	ldr	r3, [r3, #0]
 80012b0:	4a0a      	ldr	r2, [pc, #40]	; (80012dc <adc_GPIO_config+0x64>)
 80012b2:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 80012b6:	6013      	str	r3, [r2, #0]
  //ADC pins; PA3
  //Mode: Analog
  GPIOA->CRL &= ~(GPIO_CRL_MODE3);
 80012b8:	4b08      	ldr	r3, [pc, #32]	; (80012dc <adc_GPIO_config+0x64>)
 80012ba:	681b      	ldr	r3, [r3, #0]
 80012bc:	4a07      	ldr	r2, [pc, #28]	; (80012dc <adc_GPIO_config+0x64>)
 80012be:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 80012c2:	6013      	str	r3, [r2, #0]
  GPIOA->CRL &= ~(GPIO_CRL_CNF3);
 80012c4:	4b05      	ldr	r3, [pc, #20]	; (80012dc <adc_GPIO_config+0x64>)
 80012c6:	681b      	ldr	r3, [r3, #0]
 80012c8:	4a04      	ldr	r2, [pc, #16]	; (80012dc <adc_GPIO_config+0x64>)
 80012ca:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 80012ce:	6013      	str	r3, [r2, #0]
}
 80012d0:	bf00      	nop
 80012d2:	46bd      	mov	sp, r7
 80012d4:	bc80      	pop	{r7}
 80012d6:	4770      	bx	lr
 80012d8:	40021000 	.word	0x40021000
 80012dc:	40010800 	.word	0x40010800

080012e0 <adc_start>:

/**
 * @brief ADC Start
 */
void adc_start(void)
{
 80012e0:	b480      	push	{r7}
 80012e2:	af00      	add	r7, sp, #0
  ADC1->SR = 0;
 80012e4:	4b09      	ldr	r3, [pc, #36]	; (800130c <adc_start+0x2c>)
 80012e6:	2200      	movs	r2, #0
 80012e8:	601a      	str	r2, [r3, #0]
  ADC1->CR2 |= (1UL << 22);
 80012ea:	4b08      	ldr	r3, [pc, #32]	; (800130c <adc_start+0x2c>)
 80012ec:	689b      	ldr	r3, [r3, #8]
 80012ee:	4a07      	ldr	r2, [pc, #28]	; (800130c <adc_start+0x2c>)
 80012f0:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80012f4:	6093      	str	r3, [r2, #8]
  ADC1->CR2 |= (1UL << 0); //Page 218
 80012f6:	4b05      	ldr	r3, [pc, #20]	; (800130c <adc_start+0x2c>)
 80012f8:	689b      	ldr	r3, [r3, #8]
 80012fa:	4a04      	ldr	r2, [pc, #16]	; (800130c <adc_start+0x2c>)
 80012fc:	f043 0301 	orr.w	r3, r3, #1
 8001300:	6093      	str	r3, [r2, #8]
}
 8001302:	bf00      	nop
 8001304:	46bd      	mov	sp, r7
 8001306:	bc80      	pop	{r7}
 8001308:	4770      	bx	lr
 800130a:	bf00      	nop
 800130c:	40012400 	.word	0x40012400

08001310 <adc_multiChannelConfig>:

/**
 * @brief ADC Multi-channel
 */
void adc_multiChannelConfig(void)
{
 8001310:	b480      	push	{r7}
 8001312:	b083      	sub	sp, #12
 8001314:	af00      	add	r7, sp, #0
  //Enable ADC clock
  RCC->APB2ENR |= RCC_APB2ENR_ADC1EN;
 8001316:	4b3c      	ldr	r3, [pc, #240]	; (8001408 <adc_multiChannelConfig+0xf8>)
 8001318:	699b      	ldr	r3, [r3, #24]
 800131a:	4a3b      	ldr	r2, [pc, #236]	; (8001408 <adc_multiChannelConfig+0xf8>)
 800131c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001320:	6193      	str	r3, [r2, #24]
  //Right Align DR
  ADC1->CR2 &= ~(ADC_CR2_ALIGN);
 8001322:	4b3a      	ldr	r3, [pc, #232]	; (800140c <adc_multiChannelConfig+0xfc>)
 8001324:	689b      	ldr	r3, [r3, #8]
 8001326:	4a39      	ldr	r2, [pc, #228]	; (800140c <adc_multiChannelConfig+0xfc>)
 8001328:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800132c:	6093      	str	r3, [r2, #8]
  //Sample time to 28 Cycles = (12 + 28)/12MHz = 3.3us
  ADC1->SMPR2 &= ~(7UL << 3); //Rank1
 800132e:	4b37      	ldr	r3, [pc, #220]	; (800140c <adc_multiChannelConfig+0xfc>)
 8001330:	691b      	ldr	r3, [r3, #16]
 8001332:	4a36      	ldr	r2, [pc, #216]	; (800140c <adc_multiChannelConfig+0xfc>)
 8001334:	f023 0338 	bic.w	r3, r3, #56	; 0x38
 8001338:	6113      	str	r3, [r2, #16]
  ADC1->SMPR2 |= (3UL << 3);
 800133a:	4b34      	ldr	r3, [pc, #208]	; (800140c <adc_multiChannelConfig+0xfc>)
 800133c:	691b      	ldr	r3, [r3, #16]
 800133e:	4a33      	ldr	r2, [pc, #204]	; (800140c <adc_multiChannelConfig+0xfc>)
 8001340:	f043 0318 	orr.w	r3, r3, #24
 8001344:	6113      	str	r3, [r2, #16]
  ADC1->SMPR2 &= ~(7UL << 6); //Rank2
 8001346:	4b31      	ldr	r3, [pc, #196]	; (800140c <adc_multiChannelConfig+0xfc>)
 8001348:	691b      	ldr	r3, [r3, #16]
 800134a:	4a30      	ldr	r2, [pc, #192]	; (800140c <adc_multiChannelConfig+0xfc>)
 800134c:	f423 73e0 	bic.w	r3, r3, #448	; 0x1c0
 8001350:	6113      	str	r3, [r2, #16]
  ADC1->SMPR2 |= (3UL << 6);
 8001352:	4b2e      	ldr	r3, [pc, #184]	; (800140c <adc_multiChannelConfig+0xfc>)
 8001354:	691b      	ldr	r3, [r3, #16]
 8001356:	4a2d      	ldr	r2, [pc, #180]	; (800140c <adc_multiChannelConfig+0xfc>)
 8001358:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 800135c:	6113      	str	r3, [r2, #16]
  ADC1->SMPR2 &= ~(7UL << 9); //Rank3
 800135e:	4b2b      	ldr	r3, [pc, #172]	; (800140c <adc_multiChannelConfig+0xfc>)
 8001360:	691b      	ldr	r3, [r3, #16]
 8001362:	4a2a      	ldr	r2, [pc, #168]	; (800140c <adc_multiChannelConfig+0xfc>)
 8001364:	f423 6360 	bic.w	r3, r3, #3584	; 0xe00
 8001368:	6113      	str	r3, [r2, #16]
  ADC1->SMPR2 |= (3UL << 9);
 800136a:	4b28      	ldr	r3, [pc, #160]	; (800140c <adc_multiChannelConfig+0xfc>)
 800136c:	691b      	ldr	r3, [r3, #16]
 800136e:	4a27      	ldr	r2, [pc, #156]	; (800140c <adc_multiChannelConfig+0xfc>)
 8001370:	f443 63c0 	orr.w	r3, r3, #1536	; 0x600
 8001374:	6113      	str	r3, [r2, #16]
  //Software trigger (SWSTART)
  ADC1->CR2 |= (ADC_CR2_EXTSEL);
 8001376:	4b25      	ldr	r3, [pc, #148]	; (800140c <adc_multiChannelConfig+0xfc>)
 8001378:	689b      	ldr	r3, [r3, #8]
 800137a:	4a24      	ldr	r2, [pc, #144]	; (800140c <adc_multiChannelConfig+0xfc>)
 800137c:	f443 2360 	orr.w	r3, r3, #917504	; 0xe0000
 8001380:	6093      	str	r3, [r2, #8]
  //Sequencer
  ADC1->SQR3 = (1UL << 0*5); //Rank 1 --> PA1, Channel1
 8001382:	4b22      	ldr	r3, [pc, #136]	; (800140c <adc_multiChannelConfig+0xfc>)
 8001384:	2201      	movs	r2, #1
 8001386:	635a      	str	r2, [r3, #52]	; 0x34
  ADC1->SQR3 |= (2UL << 1*5); //Rank 2 --> PA2, Channel2
 8001388:	4b20      	ldr	r3, [pc, #128]	; (800140c <adc_multiChannelConfig+0xfc>)
 800138a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800138c:	4a1f      	ldr	r2, [pc, #124]	; (800140c <adc_multiChannelConfig+0xfc>)
 800138e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001392:	6353      	str	r3, [r2, #52]	; 0x34
  ADC1->SQR3 |= (3UL << 2*5); //Rank 3 --> PA3, Channel3
 8001394:	4b1d      	ldr	r3, [pc, #116]	; (800140c <adc_multiChannelConfig+0xfc>)
 8001396:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001398:	4a1c      	ldr	r2, [pc, #112]	; (800140c <adc_multiChannelConfig+0xfc>)
 800139a:	f443 6340 	orr.w	r3, r3, #3072	; 0xc00
 800139e:	6353      	str	r3, [r2, #52]	; 0x34
  //No. of conversion = 3
  ADC1->SQR1 &= ~(ADC_SQR1_L);
 80013a0:	4b1a      	ldr	r3, [pc, #104]	; (800140c <adc_multiChannelConfig+0xfc>)
 80013a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80013a4:	4a19      	ldr	r2, [pc, #100]	; (800140c <adc_multiChannelConfig+0xfc>)
 80013a6:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 80013aa:	62d3      	str	r3, [r2, #44]	; 0x2c
  ADC1->SQR1 |= (2UL << 20);//2: 3 Conversions
 80013ac:	4b17      	ldr	r3, [pc, #92]	; (800140c <adc_multiChannelConfig+0xfc>)
 80013ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80013b0:	4a16      	ldr	r2, [pc, #88]	; (800140c <adc_multiChannelConfig+0xfc>)
 80013b2:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80013b6:	62d3      	str	r3, [r2, #44]	; 0x2c

  //Enable Scan mode
  ADC1->CR1 |= (ADC_CR1_SCAN);
 80013b8:	4b14      	ldr	r3, [pc, #80]	; (800140c <adc_multiChannelConfig+0xfc>)
 80013ba:	685b      	ldr	r3, [r3, #4]
 80013bc:	4a13      	ldr	r2, [pc, #76]	; (800140c <adc_multiChannelConfig+0xfc>)
 80013be:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80013c2:	6053      	str	r3, [r2, #4]
  //Enable DMA
  ADC1->CR2 |= (ADC_CR2_DMA);
 80013c4:	4b11      	ldr	r3, [pc, #68]	; (800140c <adc_multiChannelConfig+0xfc>)
 80013c6:	689b      	ldr	r3, [r3, #8]
 80013c8:	4a10      	ldr	r2, [pc, #64]	; (800140c <adc_multiChannelConfig+0xfc>)
 80013ca:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80013ce:	6093      	str	r3, [r2, #8]
  //Enable ADC Single conversion cycle
  ADC1->CR2 &= ~(ADC_CR2_CONT);
 80013d0:	4b0e      	ldr	r3, [pc, #56]	; (800140c <adc_multiChannelConfig+0xfc>)
 80013d2:	689b      	ldr	r3, [r3, #8]
 80013d4:	4a0d      	ldr	r2, [pc, #52]	; (800140c <adc_multiChannelConfig+0xfc>)
 80013d6:	f023 0302 	bic.w	r3, r3, #2
 80013da:	6093      	str	r3, [r2, #8]
  //Power up ADC
  ADC1->CR2 |= (ADC_CR2_ADON);
 80013dc:	4b0b      	ldr	r3, [pc, #44]	; (800140c <adc_multiChannelConfig+0xfc>)
 80013de:	689b      	ldr	r3, [r3, #8]
 80013e0:	4a0a      	ldr	r2, [pc, #40]	; (800140c <adc_multiChannelConfig+0xfc>)
 80013e2:	f043 0301 	orr.w	r3, r3, #1
 80013e6:	6093      	str	r3, [r2, #8]
  //Wait for ADC clock to stabilise (couple micro seconds)
  for(uint16_t i=0; i<36;i++); //72 cycles = 1uSec, for loop 4 cycles each, 72*2/4 = 36
 80013e8:	2300      	movs	r3, #0
 80013ea:	80fb      	strh	r3, [r7, #6]
 80013ec:	e002      	b.n	80013f4 <adc_multiChannelConfig+0xe4>
 80013ee:	88fb      	ldrh	r3, [r7, #6]
 80013f0:	3301      	adds	r3, #1
 80013f2:	80fb      	strh	r3, [r7, #6]
 80013f4:	88fb      	ldrh	r3, [r7, #6]
 80013f6:	2b23      	cmp	r3, #35	; 0x23
 80013f8:	d9f9      	bls.n	80013ee <adc_multiChannelConfig+0xde>
}
 80013fa:	bf00      	nop
 80013fc:	bf00      	nop
 80013fe:	370c      	adds	r7, #12
 8001400:	46bd      	mov	sp, r7
 8001402:	bc80      	pop	{r7}
 8001404:	4770      	bx	lr
 8001406:	bf00      	nop
 8001408:	40021000 	.word	0x40021000
 800140c:	40012400 	.word	0x40012400

08001410 <adc_multiChannel_DMA_config>:

void adc_multiChannel_DMA_config(uint16_t *pAdcBuffer)
{
 8001410:	b580      	push	{r7, lr}
 8001412:	b082      	sub	sp, #8
 8001414:	af00      	add	r7, sp, #0
 8001416:	6078      	str	r0, [r7, #4]
  //Enable DMA1 Clock
  RCC->AHBENR |= (RCC_AHBENR_DMA1EN);
 8001418:	4b2a      	ldr	r3, [pc, #168]	; (80014c4 <adc_multiChannel_DMA_config+0xb4>)
 800141a:	695b      	ldr	r3, [r3, #20]
 800141c:	4a29      	ldr	r2, [pc, #164]	; (80014c4 <adc_multiChannel_DMA_config+0xb4>)
 800141e:	f043 0301 	orr.w	r3, r3, #1
 8001422:	6153      	str	r3, [r2, #20]

  //DMA1_Channel1 clear flags
  DMA1->IFCR = 0xF;
 8001424:	4b28      	ldr	r3, [pc, #160]	; (80014c8 <adc_multiChannel_DMA_config+0xb8>)
 8001426:	220f      	movs	r2, #15
 8001428:	605a      	str	r2, [r3, #4]

  //Peripheral address
  DMA1_Channel1->CPAR = (uint32_t)(&(ADC1->DR)); //address 32bit adc register data
 800142a:	4b28      	ldr	r3, [pc, #160]	; (80014cc <adc_multiChannel_DMA_config+0xbc>)
 800142c:	4a28      	ldr	r2, [pc, #160]	; (80014d0 <adc_multiChannel_DMA_config+0xc0>)
 800142e:	609a      	str	r2, [r3, #8]
  //Memory address
  DMA1_Channel1->CMAR = (uint32_t)pAdcBuffer;
 8001430:	4a26      	ldr	r2, [pc, #152]	; (80014cc <adc_multiChannel_DMA_config+0xbc>)
 8001432:	687b      	ldr	r3, [r7, #4]
 8001434:	60d3      	str	r3, [r2, #12]
  //no. of transfers baraye ma 3ta
  DMA1_Channel1->CNDTR = 3;
 8001436:	4b25      	ldr	r3, [pc, #148]	; (80014cc <adc_multiChannel_DMA_config+0xbc>)
 8001438:	2203      	movs	r2, #3
 800143a:	605a      	str	r2, [r3, #4]
  //Circular data az 0 ta 2 miravad va sepas reset mishavad agar normal bashad edame miyabad ta reset konim
  DMA1_Channel1->CCR |= (DMA_CCR_CIRC);
 800143c:	4b23      	ldr	r3, [pc, #140]	; (80014cc <adc_multiChannel_DMA_config+0xbc>)
 800143e:	681b      	ldr	r3, [r3, #0]
 8001440:	4a22      	ldr	r2, [pc, #136]	; (80014cc <adc_multiChannel_DMA_config+0xbc>)
 8001442:	f043 0320 	orr.w	r3, r3, #32
 8001446:	6013      	str	r3, [r2, #0]
  //Enable memory increment yani array 0 bad 1 bad 2 hey increment mikonad
  DMA1_Channel1->CCR |= (DMA_CCR_MINC);
 8001448:	4b20      	ldr	r3, [pc, #128]	; (80014cc <adc_multiChannel_DMA_config+0xbc>)
 800144a:	681b      	ldr	r3, [r3, #0]
 800144c:	4a1f      	ldr	r2, [pc, #124]	; (80014cc <adc_multiChannel_DMA_config+0xbc>)
 800144e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001452:	6013      	str	r3, [r2, #0]
  //Disable Peripheral increment chon y adc darim increment pheripheral nadarim
  DMA1_Channel1->CCR &= ~(DMA_CCR_PINC);
 8001454:	4b1d      	ldr	r3, [pc, #116]	; (80014cc <adc_multiChannel_DMA_config+0xbc>)
 8001456:	681b      	ldr	r3, [r3, #0]
 8001458:	4a1c      	ldr	r2, [pc, #112]	; (80014cc <adc_multiChannel_DMA_config+0xbc>)
 800145a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800145e:	6013      	str	r3, [r2, #0]
  //Set peripheral data size to 16
  DMA1_Channel1->CCR &= ~(DMA_CCR_PSIZE);
 8001460:	4b1a      	ldr	r3, [pc, #104]	; (80014cc <adc_multiChannel_DMA_config+0xbc>)
 8001462:	681b      	ldr	r3, [r3, #0]
 8001464:	4a19      	ldr	r2, [pc, #100]	; (80014cc <adc_multiChannel_DMA_config+0xbc>)
 8001466:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800146a:	6013      	str	r3, [r2, #0]
  DMA1_Channel1->CCR |= (DMA_CCR_PSIZE);
 800146c:	4b17      	ldr	r3, [pc, #92]	; (80014cc <adc_multiChannel_DMA_config+0xbc>)
 800146e:	681b      	ldr	r3, [r3, #0]
 8001470:	4a16      	ldr	r2, [pc, #88]	; (80014cc <adc_multiChannel_DMA_config+0xbc>)
 8001472:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 8001476:	6013      	str	r3, [r2, #0]
  //Set Memory data size to 16
  DMA1_Channel1->CCR &= ~(DMA_CCR_MSIZE);
 8001478:	4b14      	ldr	r3, [pc, #80]	; (80014cc <adc_multiChannel_DMA_config+0xbc>)
 800147a:	681b      	ldr	r3, [r3, #0]
 800147c:	4a13      	ldr	r2, [pc, #76]	; (80014cc <adc_multiChannel_DMA_config+0xbc>)
 800147e:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 8001482:	6013      	str	r3, [r2, #0]
  DMA1_Channel1->CCR |= (DMA_CCR_MSIZE_0);
 8001484:	4b11      	ldr	r3, [pc, #68]	; (80014cc <adc_multiChannel_DMA_config+0xbc>)
 8001486:	681b      	ldr	r3, [r3, #0]
 8001488:	4a10      	ldr	r2, [pc, #64]	; (80014cc <adc_multiChannel_DMA_config+0xbc>)
 800148a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800148e:	6013      	str	r3, [r2, #0]
  //Direction = Periph to Mem
  DMA1_Channel1->CCR &= ~(DMA_CCR_DIR);
 8001490:	4b0e      	ldr	r3, [pc, #56]	; (80014cc <adc_multiChannel_DMA_config+0xbc>)
 8001492:	681b      	ldr	r3, [r3, #0]
 8001494:	4a0d      	ldr	r2, [pc, #52]	; (80014cc <adc_multiChannel_DMA_config+0xbc>)
 8001496:	f023 0310 	bic.w	r3, r3, #16
 800149a:	6013      	str	r3, [r2, #0]
  //Enable DMA Channel
  DMA1_Channel1->CCR |= (DMA_CCR_EN);
 800149c:	4b0b      	ldr	r3, [pc, #44]	; (80014cc <adc_multiChannel_DMA_config+0xbc>)
 800149e:	681b      	ldr	r3, [r3, #0]
 80014a0:	4a0a      	ldr	r2, [pc, #40]	; (80014cc <adc_multiChannel_DMA_config+0xbc>)
 80014a2:	f043 0301 	orr.w	r3, r3, #1
 80014a6:	6013      	str	r3, [r2, #0]

  /** Enable Transfer Complete Interrupt **/
  DMA1_Channel1->CCR |= DMA_CCR_TCIE;
 80014a8:	4b08      	ldr	r3, [pc, #32]	; (80014cc <adc_multiChannel_DMA_config+0xbc>)
 80014aa:	681b      	ldr	r3, [r3, #0]
 80014ac:	4a07      	ldr	r2, [pc, #28]	; (80014cc <adc_multiChannel_DMA_config+0xbc>)
 80014ae:	f043 0302 	orr.w	r3, r3, #2
 80014b2:	6013      	str	r3, [r2, #0]
  NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 80014b4:	200b      	movs	r0, #11
 80014b6:	f7ff fec3 	bl	8001240 <__NVIC_EnableIRQ>
}
 80014ba:	bf00      	nop
 80014bc:	3708      	adds	r7, #8
 80014be:	46bd      	mov	sp, r7
 80014c0:	bd80      	pop	{r7, pc}
 80014c2:	bf00      	nop
 80014c4:	40021000 	.word	0x40021000
 80014c8:	40020000 	.word	0x40020000
 80014cc:	40020008 	.word	0x40020008
 80014d0:	4001244c 	.word	0x4001244c

080014d4 <adc_AWD_Config>:

/**
 * @brief ADC analog watchdog configure
 */
void adc_AWD_Config(uint8_t channel, uint16_t lowThreshold, uint16_t highThreshold)
{
 80014d4:	b580      	push	{r7, lr}
 80014d6:	b082      	sub	sp, #8
 80014d8:	af00      	add	r7, sp, #0
 80014da:	4603      	mov	r3, r0
 80014dc:	71fb      	strb	r3, [r7, #7]
 80014de:	460b      	mov	r3, r1
 80014e0:	80bb      	strh	r3, [r7, #4]
 80014e2:	4613      	mov	r3, r2
 80014e4:	807b      	strh	r3, [r7, #2]
  //Set AWD Low Threshold
  ADC1->LTR = lowThreshold;
 80014e6:	4a18      	ldr	r2, [pc, #96]	; (8001548 <adc_AWD_Config+0x74>)
 80014e8:	88bb      	ldrh	r3, [r7, #4]
 80014ea:	6293      	str	r3, [r2, #40]	; 0x28
  //Set AWD High Threshold
  ADC1->HTR = highThreshold;
 80014ec:	4a16      	ldr	r2, [pc, #88]	; (8001548 <adc_AWD_Config+0x74>)
 80014ee:	887b      	ldrh	r3, [r7, #2]
 80014f0:	6253      	str	r3, [r2, #36]	; 0x24
  //Select AWD channel
  ADC1->CR1 &= ~(0x0000001F);
 80014f2:	4b15      	ldr	r3, [pc, #84]	; (8001548 <adc_AWD_Config+0x74>)
 80014f4:	685b      	ldr	r3, [r3, #4]
 80014f6:	4a14      	ldr	r2, [pc, #80]	; (8001548 <adc_AWD_Config+0x74>)
 80014f8:	f023 031f 	bic.w	r3, r3, #31
 80014fc:	6053      	str	r3, [r2, #4]
  ADC1->CR1 |= (channel << 0);
 80014fe:	4b12      	ldr	r3, [pc, #72]	; (8001548 <adc_AWD_Config+0x74>)
 8001500:	685a      	ldr	r2, [r3, #4]
 8001502:	79fb      	ldrb	r3, [r7, #7]
 8001504:	4910      	ldr	r1, [pc, #64]	; (8001548 <adc_AWD_Config+0x74>)
 8001506:	4313      	orrs	r3, r2
 8001508:	604b      	str	r3, [r1, #4]
  //Enable AWDIE Interrupt
  ADC1->CR1 |= ADC_CR1_AWDIE;
 800150a:	4b0f      	ldr	r3, [pc, #60]	; (8001548 <adc_AWD_Config+0x74>)
 800150c:	685b      	ldr	r3, [r3, #4]
 800150e:	4a0e      	ldr	r2, [pc, #56]	; (8001548 <adc_AWD_Config+0x74>)
 8001510:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001514:	6053      	str	r3, [r2, #4]
  //AWD on Single Channel
  ADC1->CR1 |= ADC_CR1_AWDSGL;
 8001516:	4b0c      	ldr	r3, [pc, #48]	; (8001548 <adc_AWD_Config+0x74>)
 8001518:	685b      	ldr	r3, [r3, #4]
 800151a:	4a0b      	ldr	r2, [pc, #44]	; (8001548 <adc_AWD_Config+0x74>)
 800151c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001520:	6053      	str	r3, [r2, #4]
  //Disable Injected
  ADC1->CR1 &= ~(ADC_CR1_JAWDEN);
 8001522:	4b09      	ldr	r3, [pc, #36]	; (8001548 <adc_AWD_Config+0x74>)
 8001524:	685b      	ldr	r3, [r3, #4]
 8001526:	4a08      	ldr	r2, [pc, #32]	; (8001548 <adc_AWD_Config+0x74>)
 8001528:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 800152c:	6053      	str	r3, [r2, #4]
  //Enable Regular Channel AWD
  ADC1->CR1 |= ADC_CR1_AWDEN;
 800152e:	4b06      	ldr	r3, [pc, #24]	; (8001548 <adc_AWD_Config+0x74>)
 8001530:	685b      	ldr	r3, [r3, #4]
 8001532:	4a05      	ldr	r2, [pc, #20]	; (8001548 <adc_AWD_Config+0x74>)
 8001534:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001538:	6053      	str	r3, [r2, #4]
  NVIC_EnableIRQ(ADC1_IRQn);
 800153a:	2012      	movs	r0, #18
 800153c:	f7ff fe80 	bl	8001240 <__NVIC_EnableIRQ>
}
 8001540:	bf00      	nop
 8001542:	3708      	adds	r7, #8
 8001544:	46bd      	mov	sp, r7
 8001546:	bd80      	pop	{r7, pc}
 8001548:	40012400 	.word	0x40012400

0800154c <flash_unlock>:

/**
 * Flash Unlock function
 */
void flash_unlock(void)
{
 800154c:	b480      	push	{r7}
 800154e:	af00      	add	r7, sp, #0
  if(FLASH->CR & FLASH_CR_LOCK)
 8001550:	4b07      	ldr	r3, [pc, #28]	; (8001570 <flash_unlock+0x24>)
 8001552:	691b      	ldr	r3, [r3, #16]
 8001554:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001558:	2b00      	cmp	r3, #0
 800155a:	d005      	beq.n	8001568 <flash_unlock+0x1c>
  {
    FLASH->KEYR = 0x45670123U;
 800155c:	4b04      	ldr	r3, [pc, #16]	; (8001570 <flash_unlock+0x24>)
 800155e:	4a05      	ldr	r2, [pc, #20]	; (8001574 <flash_unlock+0x28>)
 8001560:	605a      	str	r2, [r3, #4]
    FLASH->KEYR = 0xCDEF89ABU;
 8001562:	4b03      	ldr	r3, [pc, #12]	; (8001570 <flash_unlock+0x24>)
 8001564:	4a04      	ldr	r2, [pc, #16]	; (8001578 <flash_unlock+0x2c>)
 8001566:	605a      	str	r2, [r3, #4]
  }
}
 8001568:	bf00      	nop
 800156a:	46bd      	mov	sp, r7
 800156c:	bc80      	pop	{r7}
 800156e:	4770      	bx	lr
 8001570:	40022000 	.word	0x40022000
 8001574:	45670123 	.word	0x45670123
 8001578:	cdef89ab 	.word	0xcdef89ab

0800157c <flash_lock>:

/**
 * Flash Lock function
 */
void flash_lock(void)
{
 800157c:	b480      	push	{r7}
 800157e:	af00      	add	r7, sp, #0
  FLASH->CR |= FLASH_CR_LOCK;
 8001580:	4b04      	ldr	r3, [pc, #16]	; (8001594 <flash_lock+0x18>)
 8001582:	691b      	ldr	r3, [r3, #16]
 8001584:	4a03      	ldr	r2, [pc, #12]	; (8001594 <flash_lock+0x18>)
 8001586:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800158a:	6113      	str	r3, [r2, #16]
}
 800158c:	bf00      	nop
 800158e:	46bd      	mov	sp, r7
 8001590:	bc80      	pop	{r7}
 8001592:	4770      	bx	lr
 8001594:	40022000 	.word	0x40022000

08001598 <flash_erase>:

/**
 * Flash erase sector
 */
void flash_erase(uint32_t pageAddrs)
{
 8001598:	b480      	push	{r7}
 800159a:	b083      	sub	sp, #12
 800159c:	af00      	add	r7, sp, #0
 800159e:	6078      	str	r0, [r7, #4]
  //Wait for BSY flag to be idle
  while(READ_BIT(FLASH->SR, FLASH_SR_BSY));
 80015a0:	bf00      	nop
 80015a2:	4b13      	ldr	r3, [pc, #76]	; (80015f0 <flash_erase+0x58>)
 80015a4:	68db      	ldr	r3, [r3, #12]
 80015a6:	f003 0301 	and.w	r3, r3, #1
 80015aa:	2b00      	cmp	r3, #0
 80015ac:	d1f9      	bne.n	80015a2 <flash_erase+0xa>
  //Enable PER bit for Page Erase
  FLASH->CR |= FLASH_CR_PER;
 80015ae:	4b10      	ldr	r3, [pc, #64]	; (80015f0 <flash_erase+0x58>)
 80015b0:	691b      	ldr	r3, [r3, #16]
 80015b2:	4a0f      	ldr	r2, [pc, #60]	; (80015f0 <flash_erase+0x58>)
 80015b4:	f043 0302 	orr.w	r3, r3, #2
 80015b8:	6113      	str	r3, [r2, #16]
  //Page Address to Erase
  FLASH->AR = pageAddrs;
 80015ba:	4a0d      	ldr	r2, [pc, #52]	; (80015f0 <flash_erase+0x58>)
 80015bc:	687b      	ldr	r3, [r7, #4]
 80015be:	6153      	str	r3, [r2, #20]
  //Star Erase
  FLASH->CR |= FLASH_CR_STRT;
 80015c0:	4b0b      	ldr	r3, [pc, #44]	; (80015f0 <flash_erase+0x58>)
 80015c2:	691b      	ldr	r3, [r3, #16]
 80015c4:	4a0a      	ldr	r2, [pc, #40]	; (80015f0 <flash_erase+0x58>)
 80015c6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80015ca:	6113      	str	r3, [r2, #16]
  //Wait for BSY flag to be idle
  while(READ_BIT(FLASH->SR, FLASH_SR_BSY));
 80015cc:	bf00      	nop
 80015ce:	4b08      	ldr	r3, [pc, #32]	; (80015f0 <flash_erase+0x58>)
 80015d0:	68db      	ldr	r3, [r3, #12]
 80015d2:	f003 0301 	and.w	r3, r3, #1
 80015d6:	2b00      	cmp	r3, #0
 80015d8:	d1f9      	bne.n	80015ce <flash_erase+0x36>
  //Disable PER bit
  CLEAR_BIT(FLASH->CR, FLASH_CR_PER);
 80015da:	4b05      	ldr	r3, [pc, #20]	; (80015f0 <flash_erase+0x58>)
 80015dc:	691b      	ldr	r3, [r3, #16]
 80015de:	4a04      	ldr	r2, [pc, #16]	; (80015f0 <flash_erase+0x58>)
 80015e0:	f023 0302 	bic.w	r3, r3, #2
 80015e4:	6113      	str	r3, [r2, #16]
}
 80015e6:	bf00      	nop
 80015e8:	370c      	adds	r7, #12
 80015ea:	46bd      	mov	sp, r7
 80015ec:	bc80      	pop	{r7}
 80015ee:	4770      	bx	lr
 80015f0:	40022000 	.word	0x40022000

080015f4 <flash_write16>:

/**
 * Flash Write-16
 */
void flash_write16(uint32_t addrs, uint16_t *wr16, uint32_t len)
{
 80015f4:	b480      	push	{r7}
 80015f6:	b087      	sub	sp, #28
 80015f8:	af00      	add	r7, sp, #0
 80015fa:	60f8      	str	r0, [r7, #12]
 80015fc:	60b9      	str	r1, [r7, #8]
 80015fe:	607a      	str	r2, [r7, #4]
  //Write data in 16-bit at a time
  uint32_t tempAddrs = addrs;
 8001600:	68fb      	ldr	r3, [r7, #12]
 8001602:	617b      	str	r3, [r7, #20]
  for(uint32_t i=0; i<len; i++)
 8001604:	2300      	movs	r3, #0
 8001606:	613b      	str	r3, [r7, #16]
 8001608:	e012      	b.n	8001630 <flash_write16+0x3c>
  {
    //Set PG bit
    FLASH->CR |= FLASH_CR_PG;
 800160a:	4b14      	ldr	r3, [pc, #80]	; (800165c <flash_write16+0x68>)
 800160c:	691b      	ldr	r3, [r3, #16]
 800160e:	4a13      	ldr	r2, [pc, #76]	; (800165c <flash_write16+0x68>)
 8001610:	f043 0301 	orr.w	r3, r3, #1
 8001614:	6113      	str	r3, [r2, #16]
    //PAGE0_BASE_ADDRESS is an integer value; the subexpression (__IO uint16_t*)PAGE0_BASE_ADDRESS) expands to (volatile uint16_t*)PAGE0_BASE_ADDRESS),
    //which casts the integer to a volatile pointer to 16-bit unsigned integer.
    *(__IO uint16_t*) tempAddrs = wr16[i];
 8001616:	693b      	ldr	r3, [r7, #16]
 8001618:	005b      	lsls	r3, r3, #1
 800161a:	68ba      	ldr	r2, [r7, #8]
 800161c:	441a      	add	r2, r3
 800161e:	697b      	ldr	r3, [r7, #20]
 8001620:	8812      	ldrh	r2, [r2, #0]
 8001622:	801a      	strh	r2, [r3, #0]
    tempAddrs+=2;
 8001624:	697b      	ldr	r3, [r7, #20]
 8001626:	3302      	adds	r3, #2
 8001628:	617b      	str	r3, [r7, #20]
  for(uint32_t i=0; i<len; i++)
 800162a:	693b      	ldr	r3, [r7, #16]
 800162c:	3301      	adds	r3, #1
 800162e:	613b      	str	r3, [r7, #16]
 8001630:	693a      	ldr	r2, [r7, #16]
 8001632:	687b      	ldr	r3, [r7, #4]
 8001634:	429a      	cmp	r2, r3
 8001636:	d3e8      	bcc.n	800160a <flash_write16+0x16>
  }
  //Wait for BSY flag to be idle
  while(READ_BIT(FLASH->SR, FLASH_SR_BSY));
 8001638:	bf00      	nop
 800163a:	4b08      	ldr	r3, [pc, #32]	; (800165c <flash_write16+0x68>)
 800163c:	68db      	ldr	r3, [r3, #12]
 800163e:	f003 0301 	and.w	r3, r3, #1
 8001642:	2b00      	cmp	r3, #0
 8001644:	d1f9      	bne.n	800163a <flash_write16+0x46>
  //Disable PG bit
  CLEAR_BIT(FLASH->CR, FLASH_CR_PG);
 8001646:	4b05      	ldr	r3, [pc, #20]	; (800165c <flash_write16+0x68>)
 8001648:	691b      	ldr	r3, [r3, #16]
 800164a:	4a04      	ldr	r2, [pc, #16]	; (800165c <flash_write16+0x68>)
 800164c:	f023 0301 	bic.w	r3, r3, #1
 8001650:	6113      	str	r3, [r2, #16]
}
 8001652:	bf00      	nop
 8001654:	371c      	adds	r7, #28
 8001656:	46bd      	mov	sp, r7
 8001658:	bc80      	pop	{r7}
 800165a:	4770      	bx	lr
 800165c:	40022000 	.word	0x40022000

08001660 <flash_read16>:

/**
 * Flash Read-16
 */
void flash_read16(uint32_t addrs, uint16_t *rd16, uint32_t len)
{
 8001660:	b480      	push	{r7}
 8001662:	b087      	sub	sp, #28
 8001664:	af00      	add	r7, sp, #0
 8001666:	60f8      	str	r0, [r7, #12]
 8001668:	60b9      	str	r1, [r7, #8]
 800166a:	607a      	str	r2, [r7, #4]
  //Read data can be accessed straight away
  uint32_t tempAddrs = addrs;
 800166c:	68fb      	ldr	r3, [r7, #12]
 800166e:	617b      	str	r3, [r7, #20]
  for(uint32_t i=0; i<len; i++)
 8001670:	2300      	movs	r3, #0
 8001672:	613b      	str	r3, [r7, #16]
 8001674:	e00d      	b.n	8001692 <flash_read16+0x32>
  {
    rd16[i] = *(__IO uint16_t*) tempAddrs;
 8001676:	697a      	ldr	r2, [r7, #20]
 8001678:	693b      	ldr	r3, [r7, #16]
 800167a:	005b      	lsls	r3, r3, #1
 800167c:	68b9      	ldr	r1, [r7, #8]
 800167e:	440b      	add	r3, r1
 8001680:	8812      	ldrh	r2, [r2, #0]
 8001682:	b292      	uxth	r2, r2
 8001684:	801a      	strh	r2, [r3, #0]
    tempAddrs+=2;
 8001686:	697b      	ldr	r3, [r7, #20]
 8001688:	3302      	adds	r3, #2
 800168a:	617b      	str	r3, [r7, #20]
  for(uint32_t i=0; i<len; i++)
 800168c:	693b      	ldr	r3, [r7, #16]
 800168e:	3301      	adds	r3, #1
 8001690:	613b      	str	r3, [r7, #16]
 8001692:	693a      	ldr	r2, [r7, #16]
 8001694:	687b      	ldr	r3, [r7, #4]
 8001696:	429a      	cmp	r2, r3
 8001698:	d3ed      	bcc.n	8001676 <flash_read16+0x16>
  }
}
 800169a:	bf00      	nop
 800169c:	bf00      	nop
 800169e:	371c      	adds	r7, #28
 80016a0:	46bd      	mov	sp, r7
 80016a2:	bc80      	pop	{r7}
 80016a4:	4770      	bx	lr
	...

080016a8 <gpio_LED_config>:

/**
 * @brief LED GPIO Configuration
 */
void gpio_LED_config(void)
{
 80016a8:	b480      	push	{r7}
 80016aa:	af00      	add	r7, sp, #0
  //LED: PC13
  //Enable Port B clock
  RCC->APB2ENR |= RCC_APB2ENR_IOPCEN;
 80016ac:	4b0d      	ldr	r3, [pc, #52]	; (80016e4 <gpio_LED_config+0x3c>)
 80016ae:	699b      	ldr	r3, [r3, #24]
 80016b0:	4a0c      	ldr	r2, [pc, #48]	; (80016e4 <gpio_LED_config+0x3c>)
 80016b2:	f043 0310 	orr.w	r3, r3, #16
 80016b6:	6193      	str	r3, [r2, #24]
  //output mode, low-speed
  GPIOC->CRH &= ~GPIO_CRH_CNF13;
 80016b8:	4b0b      	ldr	r3, [pc, #44]	; (80016e8 <gpio_LED_config+0x40>)
 80016ba:	685b      	ldr	r3, [r3, #4]
 80016bc:	4a0a      	ldr	r2, [pc, #40]	; (80016e8 <gpio_LED_config+0x40>)
 80016be:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 80016c2:	6053      	str	r3, [r2, #4]
  //Push-pull
  GPIOC->CRH &= ~GPIO_CRH_MODE13;
 80016c4:	4b08      	ldr	r3, [pc, #32]	; (80016e8 <gpio_LED_config+0x40>)
 80016c6:	685b      	ldr	r3, [r3, #4]
 80016c8:	4a07      	ldr	r2, [pc, #28]	; (80016e8 <gpio_LED_config+0x40>)
 80016ca:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 80016ce:	6053      	str	r3, [r2, #4]
  GPIOC->CRH |= GPIO_CRH_MODE13_1;
 80016d0:	4b05      	ldr	r3, [pc, #20]	; (80016e8 <gpio_LED_config+0x40>)
 80016d2:	685b      	ldr	r3, [r3, #4]
 80016d4:	4a04      	ldr	r2, [pc, #16]	; (80016e8 <gpio_LED_config+0x40>)
 80016d6:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80016da:	6053      	str	r3, [r2, #4]
}
 80016dc:	bf00      	nop
 80016de:	46bd      	mov	sp, r7
 80016e0:	bc80      	pop	{r7}
 80016e2:	4770      	bx	lr
 80016e4:	40021000 	.word	0x40021000
 80016e8:	40011000 	.word	0x40011000

080016ec <gpio_LED_write>:

/**
 * @brief On board LED write/toggle
 */
void gpio_LED_write(bool state)
{
 80016ec:	b480      	push	{r7}
 80016ee:	b083      	sub	sp, #12
 80016f0:	af00      	add	r7, sp, #0
 80016f2:	4603      	mov	r3, r0
 80016f4:	71fb      	strb	r3, [r7, #7]
  if(state)
 80016f6:	79fb      	ldrb	r3, [r7, #7]
 80016f8:	2b00      	cmp	r3, #0
 80016fa:	d006      	beq.n	800170a <gpio_LED_write+0x1e>
  {
    GPIOC->ODR |= (1UL << 13);
 80016fc:	4b08      	ldr	r3, [pc, #32]	; (8001720 <gpio_LED_write+0x34>)
 80016fe:	68db      	ldr	r3, [r3, #12]
 8001700:	4a07      	ldr	r2, [pc, #28]	; (8001720 <gpio_LED_write+0x34>)
 8001702:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001706:	60d3      	str	r3, [r2, #12]
  }
  else
  {
    GPIOC->ODR &= ~(1UL << 13);
  }
}
 8001708:	e005      	b.n	8001716 <gpio_LED_write+0x2a>
    GPIOC->ODR &= ~(1UL << 13);
 800170a:	4b05      	ldr	r3, [pc, #20]	; (8001720 <gpio_LED_write+0x34>)
 800170c:	68db      	ldr	r3, [r3, #12]
 800170e:	4a04      	ldr	r2, [pc, #16]	; (8001720 <gpio_LED_write+0x34>)
 8001710:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8001714:	60d3      	str	r3, [r2, #12]
}
 8001716:	bf00      	nop
 8001718:	370c      	adds	r7, #12
 800171a:	46bd      	mov	sp, r7
 800171c:	bc80      	pop	{r7}
 800171e:	4770      	bx	lr
 8001720:	40011000 	.word	0x40011000

08001724 <gpio_LED_toggle>:

void gpio_LED_toggle(void)
{
 8001724:	b480      	push	{r7}
 8001726:	af00      	add	r7, sp, #0
  GPIOC->ODR ^= (1UL << 13);
 8001728:	4b04      	ldr	r3, [pc, #16]	; (800173c <gpio_LED_toggle+0x18>)
 800172a:	68db      	ldr	r3, [r3, #12]
 800172c:	4a03      	ldr	r2, [pc, #12]	; (800173c <gpio_LED_toggle+0x18>)
 800172e:	f483 5300 	eor.w	r3, r3, #8192	; 0x2000
 8001732:	60d3      	str	r3, [r2, #12]
}
 8001734:	bf00      	nop
 8001736:	46bd      	mov	sp, r7
 8001738:	bc80      	pop	{r7}
 800173a:	4770      	bx	lr
 800173c:	40011000 	.word	0x40011000

08001740 <__NVIC_ClearPendingIRQ>:
{
 8001740:	b480      	push	{r7}
 8001742:	b083      	sub	sp, #12
 8001744:	af00      	add	r7, sp, #0
 8001746:	4603      	mov	r3, r0
 8001748:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800174a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800174e:	2b00      	cmp	r3, #0
 8001750:	db0c      	blt.n	800176c <__NVIC_ClearPendingIRQ+0x2c>
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001752:	79fb      	ldrb	r3, [r7, #7]
 8001754:	f003 021f 	and.w	r2, r3, #31
 8001758:	4907      	ldr	r1, [pc, #28]	; (8001778 <__NVIC_ClearPendingIRQ+0x38>)
 800175a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800175e:	095b      	lsrs	r3, r3, #5
 8001760:	2001      	movs	r0, #1
 8001762:	fa00 f202 	lsl.w	r2, r0, r2
 8001766:	3360      	adds	r3, #96	; 0x60
 8001768:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800176c:	bf00      	nop
 800176e:	370c      	adds	r7, #12
 8001770:	46bd      	mov	sp, r7
 8001772:	bc80      	pop	{r7}
 8001774:	4770      	bx	lr
 8001776:	bf00      	nop
 8001778:	e000e100 	.word	0xe000e100

0800177c <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 800177c:	b480      	push	{r7}
 800177e:	b083      	sub	sp, #12
 8001780:	af00      	add	r7, sp, #0
 8001782:	4603      	mov	r3, r0
 8001784:	6039      	str	r1, [r7, #0]
 8001786:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001788:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800178c:	2b00      	cmp	r3, #0
 800178e:	db0a      	blt.n	80017a6 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001790:	683b      	ldr	r3, [r7, #0]
 8001792:	b2da      	uxtb	r2, r3
 8001794:	490c      	ldr	r1, [pc, #48]	; (80017c8 <__NVIC_SetPriority+0x4c>)
 8001796:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800179a:	0112      	lsls	r2, r2, #4
 800179c:	b2d2      	uxtb	r2, r2
 800179e:	440b      	add	r3, r1
 80017a0:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 80017a4:	e00a      	b.n	80017bc <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80017a6:	683b      	ldr	r3, [r7, #0]
 80017a8:	b2da      	uxtb	r2, r3
 80017aa:	4908      	ldr	r1, [pc, #32]	; (80017cc <__NVIC_SetPriority+0x50>)
 80017ac:	79fb      	ldrb	r3, [r7, #7]
 80017ae:	f003 030f 	and.w	r3, r3, #15
 80017b2:	3b04      	subs	r3, #4
 80017b4:	0112      	lsls	r2, r2, #4
 80017b6:	b2d2      	uxtb	r2, r2
 80017b8:	440b      	add	r3, r1
 80017ba:	761a      	strb	r2, [r3, #24]
}
 80017bc:	bf00      	nop
 80017be:	370c      	adds	r7, #12
 80017c0:	46bd      	mov	sp, r7
 80017c2:	bc80      	pop	{r7}
 80017c4:	4770      	bx	lr
 80017c6:	bf00      	nop
 80017c8:	e000e100 	.word	0xe000e100
 80017cc:	e000ed00 	.word	0xe000ed00

080017d0 <rcc_HSE_config>:

/**
 * @brief HSE System clock configuration
 */
void rcc_HSE_config(void)
{
 80017d0:	b480      	push	{r7}
 80017d2:	af00      	add	r7, sp, #0
   * ADC prescalr = 6    --> 12MHz
   */

  //PLL Configuration
  //PLL_MUL = 9
  RCC->CFGR &= ~(RCC_CFGR_PLLMULL); //Clear
 80017d4:	4b3f      	ldr	r3, [pc, #252]	; (80018d4 <rcc_HSE_config+0x104>)
 80017d6:	685b      	ldr	r3, [r3, #4]
 80017d8:	4a3e      	ldr	r2, [pc, #248]	; (80018d4 <rcc_HSE_config+0x104>)
 80017da:	f423 1370 	bic.w	r3, r3, #3932160	; 0x3c0000
 80017de:	6053      	str	r3, [r2, #4]
  RCC->CFGR |= (0x7UL << 18);
 80017e0:	4b3c      	ldr	r3, [pc, #240]	; (80018d4 <rcc_HSE_config+0x104>)
 80017e2:	685b      	ldr	r3, [r3, #4]
 80017e4:	4a3b      	ldr	r2, [pc, #236]	; (80018d4 <rcc_HSE_config+0x104>)
 80017e6:	f443 13e0 	orr.w	r3, r3, #1835008	; 0x1c0000
 80017ea:	6053      	str	r3, [r2, #4]
  //USB Prescaler = 1.5
  RCC->CFGR &= ~(0x1UL << 22);
 80017ec:	4b39      	ldr	r3, [pc, #228]	; (80018d4 <rcc_HSE_config+0x104>)
 80017ee:	685b      	ldr	r3, [r3, #4]
 80017f0:	4a38      	ldr	r2, [pc, #224]	; (80018d4 <rcc_HSE_config+0x104>)
 80017f2:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 80017f6:	6053      	str	r3, [r2, #4]
  //HSE Enable and Set as PLL source
  //Enable HSE Clock
  RCC->CR |= RCC_CR_HSEON;
 80017f8:	4b36      	ldr	r3, [pc, #216]	; (80018d4 <rcc_HSE_config+0x104>)
 80017fa:	681b      	ldr	r3, [r3, #0]
 80017fc:	4a35      	ldr	r2, [pc, #212]	; (80018d4 <rcc_HSE_config+0x104>)
 80017fe:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001802:	6013      	str	r3, [r2, #0]
  //Wait for HSE to be stable and ready to use
  while((RCC->CR & RCC_CR_HSERDY) == 0);
 8001804:	bf00      	nop
 8001806:	4b33      	ldr	r3, [pc, #204]	; (80018d4 <rcc_HSE_config+0x104>)
 8001808:	681b      	ldr	r3, [r3, #0]
 800180a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800180e:	2b00      	cmp	r3, #0
 8001810:	d0f9      	beq.n	8001806 <rcc_HSE_config+0x36>
  //HSE as PLL source
  RCC->CFGR |= RCC_CFGR_PLLSRC;
 8001812:	4b30      	ldr	r3, [pc, #192]	; (80018d4 <rcc_HSE_config+0x104>)
 8001814:	685b      	ldr	r3, [r3, #4]
 8001816:	4a2f      	ldr	r2, [pc, #188]	; (80018d4 <rcc_HSE_config+0x104>)
 8001818:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800181c:	6053      	str	r3, [r2, #4]
  //Enable the PLL
  RCC->CR |= RCC_CR_PLLON;
 800181e:	4b2d      	ldr	r3, [pc, #180]	; (80018d4 <rcc_HSE_config+0x104>)
 8001820:	681b      	ldr	r3, [r3, #0]
 8001822:	4a2c      	ldr	r2, [pc, #176]	; (80018d4 <rcc_HSE_config+0x104>)
 8001824:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8001828:	6013      	str	r3, [r2, #0]
  //Wait untill PLL is ready
  while((RCC->CR & RCC_CR_PLLRDY) == 0);
 800182a:	bf00      	nop
 800182c:	4b29      	ldr	r3, [pc, #164]	; (80018d4 <rcc_HSE_config+0x104>)
 800182e:	681b      	ldr	r3, [r3, #0]
 8001830:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001834:	2b00      	cmp	r3, #0
 8001836:	d0f9      	beq.n	800182c <rcc_HSE_config+0x5c>
  //Flash pre-fetch enable and wait-state=2
  //0WS: 0-24MHz
  //1WS: 24-48MHz
  //2WS: 48-72MHz
  FLASH->ACR &= ~(FLASH_ACR_LATENCY);
 8001838:	4b27      	ldr	r3, [pc, #156]	; (80018d8 <rcc_HSE_config+0x108>)
 800183a:	681b      	ldr	r3, [r3, #0]
 800183c:	4a26      	ldr	r2, [pc, #152]	; (80018d8 <rcc_HSE_config+0x108>)
 800183e:	f023 0307 	bic.w	r3, r3, #7
 8001842:	6013      	str	r3, [r2, #0]
  FLASH->ACR |= FLASH_ACR_LATENCY_1;
 8001844:	4b24      	ldr	r3, [pc, #144]	; (80018d8 <rcc_HSE_config+0x108>)
 8001846:	681b      	ldr	r3, [r3, #0]
 8001848:	4a23      	ldr	r2, [pc, #140]	; (80018d8 <rcc_HSE_config+0x108>)
 800184a:	f043 0302 	orr.w	r3, r3, #2
 800184e:	6013      	str	r3, [r2, #0]
  FLASH->ACR |= FLASH_ACR_PRFTBE;
 8001850:	4b21      	ldr	r3, [pc, #132]	; (80018d8 <rcc_HSE_config+0x108>)
 8001852:	681b      	ldr	r3, [r3, #0]
 8001854:	4a20      	ldr	r2, [pc, #128]	; (80018d8 <rcc_HSE_config+0x108>)
 8001856:	f043 0310 	orr.w	r3, r3, #16
 800185a:	6013      	str	r3, [r2, #0]
  //Select PLL as main System Clock source
  RCC->CFGR &= ~(RCC_CFGR_SW);
 800185c:	4b1d      	ldr	r3, [pc, #116]	; (80018d4 <rcc_HSE_config+0x104>)
 800185e:	685b      	ldr	r3, [r3, #4]
 8001860:	4a1c      	ldr	r2, [pc, #112]	; (80018d4 <rcc_HSE_config+0x104>)
 8001862:	f023 0303 	bic.w	r3, r3, #3
 8001866:	6053      	str	r3, [r2, #4]
  RCC->CFGR |= RCC_CFGR_SW_1;
 8001868:	4b1a      	ldr	r3, [pc, #104]	; (80018d4 <rcc_HSE_config+0x104>)
 800186a:	685b      	ldr	r3, [r3, #4]
 800186c:	4a19      	ldr	r2, [pc, #100]	; (80018d4 <rcc_HSE_config+0x104>)
 800186e:	f043 0302 	orr.w	r3, r3, #2
 8001872:	6053      	str	r3, [r2, #4]
  //Wait until PLL system source is active
  while((RCC->CFGR & RCC_CFGR_SWS_1) == 0);
 8001874:	bf00      	nop
 8001876:	4b17      	ldr	r3, [pc, #92]	; (80018d4 <rcc_HSE_config+0x104>)
 8001878:	685b      	ldr	r3, [r3, #4]
 800187a:	f003 0308 	and.w	r3, r3, #8
 800187e:	2b00      	cmp	r3, #0
 8001880:	d0f9      	beq.n	8001876 <rcc_HSE_config+0xa6>
  //AHB Prescaler = 1
  RCC->CFGR &= ~(RCC_CFGR_HPRE);
 8001882:	4b14      	ldr	r3, [pc, #80]	; (80018d4 <rcc_HSE_config+0x104>)
 8001884:	685b      	ldr	r3, [r3, #4]
 8001886:	4a13      	ldr	r2, [pc, #76]	; (80018d4 <rcc_HSE_config+0x104>)
 8001888:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800188c:	6053      	str	r3, [r2, #4]
  //APB1 divider=2
  RCC->CFGR &= ~(RCC_CFGR_PPRE1);
 800188e:	4b11      	ldr	r3, [pc, #68]	; (80018d4 <rcc_HSE_config+0x104>)
 8001890:	685b      	ldr	r3, [r3, #4]
 8001892:	4a10      	ldr	r2, [pc, #64]	; (80018d4 <rcc_HSE_config+0x104>)
 8001894:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8001898:	6053      	str	r3, [r2, #4]
  RCC->CFGR |= (RCC_CFGR_PPRE1_2);
 800189a:	4b0e      	ldr	r3, [pc, #56]	; (80018d4 <rcc_HSE_config+0x104>)
 800189c:	685b      	ldr	r3, [r3, #4]
 800189e:	4a0d      	ldr	r2, [pc, #52]	; (80018d4 <rcc_HSE_config+0x104>)
 80018a0:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80018a4:	6053      	str	r3, [r2, #4]
  //APB2 divider=1
  RCC->CFGR &= ~(RCC_CFGR_PPRE2);
 80018a6:	4b0b      	ldr	r3, [pc, #44]	; (80018d4 <rcc_HSE_config+0x104>)
 80018a8:	685b      	ldr	r3, [r3, #4]
 80018aa:	4a0a      	ldr	r2, [pc, #40]	; (80018d4 <rcc_HSE_config+0x104>)
 80018ac:	f423 5360 	bic.w	r3, r3, #14336	; 0x3800
 80018b0:	6053      	str	r3, [r2, #4]
  //ADC prescalar = 12
  RCC->CFGR &= ~(RCC_CFGR_ADCPRE);
 80018b2:	4b08      	ldr	r3, [pc, #32]	; (80018d4 <rcc_HSE_config+0x104>)
 80018b4:	685b      	ldr	r3, [r3, #4]
 80018b6:	4a07      	ldr	r2, [pc, #28]	; (80018d4 <rcc_HSE_config+0x104>)
 80018b8:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 80018bc:	6053      	str	r3, [r2, #4]
  RCC->CFGR |= (RCC_CFGR_ADCPRE_1);
 80018be:	4b05      	ldr	r3, [pc, #20]	; (80018d4 <rcc_HSE_config+0x104>)
 80018c0:	685b      	ldr	r3, [r3, #4]
 80018c2:	4a04      	ldr	r2, [pc, #16]	; (80018d4 <rcc_HSE_config+0x104>)
 80018c4:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80018c8:	6053      	str	r3, [r2, #4]
}
 80018ca:	bf00      	nop
 80018cc:	46bd      	mov	sp, r7
 80018ce:	bc80      	pop	{r7}
 80018d0:	4770      	bx	lr
 80018d2:	bf00      	nop
 80018d4:	40021000 	.word	0x40021000
 80018d8:	40022000 	.word	0x40022000

080018dc <rcc_SysTick_config>:

/**
 * @brief SysTick configuration
 */
void rcc_SysTick_config(uint32_t arr)
{
 80018dc:	b580      	push	{r7, lr}
 80018de:	b082      	sub	sp, #8
 80018e0:	af00      	add	r7, sp, #0
 80018e2:	6078      	str	r0, [r7, #4]
  //Reset Control Register
  SysTick->CTRL = 0;
 80018e4:	4b12      	ldr	r3, [pc, #72]	; (8001930 <rcc_SysTick_config+0x54>)
 80018e6:	2200      	movs	r2, #0
 80018e8:	601a      	str	r2, [r3, #0]

  //Set the Reload value
  SysTick->LOAD = arr-1;
 80018ea:	4a11      	ldr	r2, [pc, #68]	; (8001930 <rcc_SysTick_config+0x54>)
 80018ec:	687b      	ldr	r3, [r7, #4]
 80018ee:	3b01      	subs	r3, #1
 80018f0:	6053      	str	r3, [r2, #4]
  //Prriority of Systick interrupt
  NVIC_SetPriority(SysTick_IRQn, 0);
 80018f2:	2100      	movs	r1, #0
 80018f4:	f04f 30ff 	mov.w	r0, #4294967295
 80018f8:	f7ff ff40 	bl	800177c <__NVIC_SetPriority>
  //Set 0 to Systick Value
  SysTick->VAL = 0;
 80018fc:	4b0c      	ldr	r3, [pc, #48]	; (8001930 <rcc_SysTick_config+0x54>)
 80018fe:	2200      	movs	r2, #0
 8001900:	609a      	str	r2, [r3, #8]
  //Enable Systick from Ctrl register
  SysTick->CTRL |= SysTick_CTRL_CLKSOURCE_Msk;
 8001902:	4b0b      	ldr	r3, [pc, #44]	; (8001930 <rcc_SysTick_config+0x54>)
 8001904:	681b      	ldr	r3, [r3, #0]
 8001906:	4a0a      	ldr	r2, [pc, #40]	; (8001930 <rcc_SysTick_config+0x54>)
 8001908:	f043 0304 	orr.w	r3, r3, #4
 800190c:	6013      	str	r3, [r2, #0]
  SysTick->CTRL |= SysTick_CTRL_TICKINT_Msk;
 800190e:	4b08      	ldr	r3, [pc, #32]	; (8001930 <rcc_SysTick_config+0x54>)
 8001910:	681b      	ldr	r3, [r3, #0]
 8001912:	4a07      	ldr	r2, [pc, #28]	; (8001930 <rcc_SysTick_config+0x54>)
 8001914:	f043 0302 	orr.w	r3, r3, #2
 8001918:	6013      	str	r3, [r2, #0]
  SysTick->CTRL |= SysTick_CTRL_ENABLE_Msk;
 800191a:	4b05      	ldr	r3, [pc, #20]	; (8001930 <rcc_SysTick_config+0x54>)
 800191c:	681b      	ldr	r3, [r3, #0]
 800191e:	4a04      	ldr	r2, [pc, #16]	; (8001930 <rcc_SysTick_config+0x54>)
 8001920:	f043 0301 	orr.w	r3, r3, #1
 8001924:	6013      	str	r3, [r2, #0]
}
 8001926:	bf00      	nop
 8001928:	3708      	adds	r7, #8
 800192a:	46bd      	mov	sp, r7
 800192c:	bd80      	pop	{r7, pc}
 800192e:	bf00      	nop
 8001930:	e000e010 	.word	0xe000e010

08001934 <SysTick_Handler>:

//Startup file Vector Table callback for SysTick
void SysTick_Handler(void)
{
 8001934:	b580      	push	{r7, lr}
 8001936:	af00      	add	r7, sp, #0
  NVIC_ClearPendingIRQ(SysTick_IRQn);
 8001938:	f04f 30ff 	mov.w	r0, #4294967295
 800193c:	f7ff ff00 	bl	8001740 <__NVIC_ClearPendingIRQ>
  msTicks++;
 8001940:	4b03      	ldr	r3, [pc, #12]	; (8001950 <SysTick_Handler+0x1c>)
 8001942:	681b      	ldr	r3, [r3, #0]
 8001944:	3301      	adds	r3, #1
 8001946:	4a02      	ldr	r2, [pc, #8]	; (8001950 <SysTick_Handler+0x1c>)
 8001948:	6013      	str	r3, [r2, #0]
}
 800194a:	bf00      	nop
 800194c:	bd80      	pop	{r7, pc}
 800194e:	bf00      	nop
 8001950:	20000208 	.word	0x20000208

08001954 <rcc_msDelay>:

/**
 * @brief Milisecond Delay and Get Ticks
 */
void rcc_msDelay(uint32_t ms)
{
 8001954:	b580      	push	{r7, lr}
 8001956:	b084      	sub	sp, #16
 8001958:	af00      	add	r7, sp, #0
 800195a:	6078      	str	r0, [r7, #4]
  uint32_t startTicks = rcc_msGetTicks();
 800195c:	f000 f810 	bl	8001980 <rcc_msGetTicks>
 8001960:	60f8      	str	r0, [r7, #12]
  while((rcc_msGetTicks() - startTicks) < ms);
 8001962:	bf00      	nop
 8001964:	f000 f80c 	bl	8001980 <rcc_msGetTicks>
 8001968:	4602      	mov	r2, r0
 800196a:	68fb      	ldr	r3, [r7, #12]
 800196c:	1ad3      	subs	r3, r2, r3
 800196e:	687a      	ldr	r2, [r7, #4]
 8001970:	429a      	cmp	r2, r3
 8001972:	d8f7      	bhi.n	8001964 <rcc_msDelay+0x10>
}
 8001974:	bf00      	nop
 8001976:	bf00      	nop
 8001978:	3710      	adds	r7, #16
 800197a:	46bd      	mov	sp, r7
 800197c:	bd80      	pop	{r7, pc}
	...

08001980 <rcc_msGetTicks>:
uint32_t rcc_msGetTicks(void)
{
 8001980:	b480      	push	{r7}
 8001982:	af00      	add	r7, sp, #0
  return msTicks;
 8001984:	4b02      	ldr	r3, [pc, #8]	; (8001990 <rcc_msGetTicks+0x10>)
 8001986:	681b      	ldr	r3, [r3, #0]
}
 8001988:	4618      	mov	r0, r3
 800198a:	46bd      	mov	sp, r7
 800198c:	bc80      	pop	{r7}
 800198e:	4770      	bx	lr
 8001990:	20000208 	.word	0x20000208

08001994 <uart_UART_GPIO_config>:

/**
 * @brief UART1 GPIO config
 */
void uart_UART_GPIO_config(void)
{
 8001994:	b480      	push	{r7}
 8001996:	af00      	add	r7, sp, #0
	//PA9,PA10
  //Enable Port A clock
  RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;
 8001998:	4b3d      	ldr	r3, [pc, #244]	; (8001a90 <uart_UART_GPIO_config+0xfc>)
 800199a:	699b      	ldr	r3, [r3, #24]
 800199c:	4a3c      	ldr	r2, [pc, #240]	; (8001a90 <uart_UART_GPIO_config+0xfc>)
 800199e:	f043 0304 	orr.w	r3, r3, #4
 80019a2:	6193      	str	r3, [r2, #24]
  //Mode to AF and Fast speed
  GPIOA->CRH &= ~GPIO_CRH_CNF9;
 80019a4:	4b3b      	ldr	r3, [pc, #236]	; (8001a94 <uart_UART_GPIO_config+0x100>)
 80019a6:	685b      	ldr	r3, [r3, #4]
 80019a8:	4a3a      	ldr	r2, [pc, #232]	; (8001a94 <uart_UART_GPIO_config+0x100>)
 80019aa:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 80019ae:	6053      	str	r3, [r2, #4]
  GPIOA->CRH |= GPIO_CRH_CNF9_1;
 80019b0:	4b38      	ldr	r3, [pc, #224]	; (8001a94 <uart_UART_GPIO_config+0x100>)
 80019b2:	685b      	ldr	r3, [r3, #4]
 80019b4:	4a37      	ldr	r2, [pc, #220]	; (8001a94 <uart_UART_GPIO_config+0x100>)
 80019b6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80019ba:	6053      	str	r3, [r2, #4]
  GPIOA->CRH &= ~GPIO_CRH_CNF10;
 80019bc:	4b35      	ldr	r3, [pc, #212]	; (8001a94 <uart_UART_GPIO_config+0x100>)
 80019be:	685b      	ldr	r3, [r3, #4]
 80019c0:	4a34      	ldr	r2, [pc, #208]	; (8001a94 <uart_UART_GPIO_config+0x100>)
 80019c2:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 80019c6:	6053      	str	r3, [r2, #4]
  GPIOA->CRH |= GPIO_CRH_CNF10_0;//Input Floating
 80019c8:	4b32      	ldr	r3, [pc, #200]	; (8001a94 <uart_UART_GPIO_config+0x100>)
 80019ca:	685b      	ldr	r3, [r3, #4]
 80019cc:	4a31      	ldr	r2, [pc, #196]	; (8001a94 <uart_UART_GPIO_config+0x100>)
 80019ce:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80019d2:	6053      	str	r3, [r2, #4]
  //Output max 10Mhz
  GPIOA->CRH &= ~GPIO_CRH_MODE9;
 80019d4:	4b2f      	ldr	r3, [pc, #188]	; (8001a94 <uart_UART_GPIO_config+0x100>)
 80019d6:	685b      	ldr	r3, [r3, #4]
 80019d8:	4a2e      	ldr	r2, [pc, #184]	; (8001a94 <uart_UART_GPIO_config+0x100>)
 80019da:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 80019de:	6053      	str	r3, [r2, #4]
  GPIOA->CRH |= GPIO_CRH_MODE9_0;
 80019e0:	4b2c      	ldr	r3, [pc, #176]	; (8001a94 <uart_UART_GPIO_config+0x100>)
 80019e2:	685b      	ldr	r3, [r3, #4]
 80019e4:	4a2b      	ldr	r2, [pc, #172]	; (8001a94 <uart_UART_GPIO_config+0x100>)
 80019e6:	f043 0310 	orr.w	r3, r3, #16
 80019ea:	6053      	str	r3, [r2, #4]
  GPIOA->CRH &= ~GPIO_CRH_MODE10;
 80019ec:	4b29      	ldr	r3, [pc, #164]	; (8001a94 <uart_UART_GPIO_config+0x100>)
 80019ee:	685b      	ldr	r3, [r3, #4]
 80019f0:	4a28      	ldr	r2, [pc, #160]	; (8001a94 <uart_UART_GPIO_config+0x100>)
 80019f2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80019f6:	6053      	str	r3, [r2, #4]
  //Map to PA9, PA10
  RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;
 80019f8:	4b25      	ldr	r3, [pc, #148]	; (8001a90 <uart_UART_GPIO_config+0xfc>)
 80019fa:	699b      	ldr	r3, [r3, #24]
 80019fc:	4a24      	ldr	r2, [pc, #144]	; (8001a90 <uart_UART_GPIO_config+0xfc>)
 80019fe:	f043 0301 	orr.w	r3, r3, #1
 8001a02:	6193      	str	r3, [r2, #24]
  AFIO->MAPR &= ~(AFIO_MAPR_USART1_REMAP);
 8001a04:	4b24      	ldr	r3, [pc, #144]	; (8001a98 <uart_UART_GPIO_config+0x104>)
 8001a06:	685b      	ldr	r3, [r3, #4]
 8001a08:	4a23      	ldr	r2, [pc, #140]	; (8001a98 <uart_UART_GPIO_config+0x104>)
 8001a0a:	f023 0304 	bic.w	r3, r3, #4
 8001a0e:	6053      	str	r3, [r2, #4]


  //PB10,PB11
  //Enable Port B clock
  RCC->APB2ENR |= RCC_APB2ENR_IOPBEN;
 8001a10:	4b1f      	ldr	r3, [pc, #124]	; (8001a90 <uart_UART_GPIO_config+0xfc>)
 8001a12:	699b      	ldr	r3, [r3, #24]
 8001a14:	4a1e      	ldr	r2, [pc, #120]	; (8001a90 <uart_UART_GPIO_config+0xfc>)
 8001a16:	f043 0308 	orr.w	r3, r3, #8
 8001a1a:	6193      	str	r3, [r2, #24]
  //Mode to AF and Fast speed
  GPIOB->CRH &= ~(GPIO_CRH_CNF10);
 8001a1c:	4b1f      	ldr	r3, [pc, #124]	; (8001a9c <uart_UART_GPIO_config+0x108>)
 8001a1e:	685b      	ldr	r3, [r3, #4]
 8001a20:	4a1e      	ldr	r2, [pc, #120]	; (8001a9c <uart_UART_GPIO_config+0x108>)
 8001a22:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 8001a26:	6053      	str	r3, [r2, #4]
  GPIOB->CRH |= GPIO_CRH_CNF10_1;
 8001a28:	4b1c      	ldr	r3, [pc, #112]	; (8001a9c <uart_UART_GPIO_config+0x108>)
 8001a2a:	685b      	ldr	r3, [r3, #4]
 8001a2c:	4a1b      	ldr	r2, [pc, #108]	; (8001a9c <uart_UART_GPIO_config+0x108>)
 8001a2e:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8001a32:	6053      	str	r3, [r2, #4]
  GPIOB->CRH &= ~GPIO_CRH_CNF11;
 8001a34:	4b19      	ldr	r3, [pc, #100]	; (8001a9c <uart_UART_GPIO_config+0x108>)
 8001a36:	685b      	ldr	r3, [r3, #4]
 8001a38:	4a18      	ldr	r2, [pc, #96]	; (8001a9c <uart_UART_GPIO_config+0x108>)
 8001a3a:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8001a3e:	6053      	str	r3, [r2, #4]
  GPIOB->CRH |= GPIO_CRH_CNF11_0;//Input Floating
 8001a40:	4b16      	ldr	r3, [pc, #88]	; (8001a9c <uart_UART_GPIO_config+0x108>)
 8001a42:	685b      	ldr	r3, [r3, #4]
 8001a44:	4a15      	ldr	r2, [pc, #84]	; (8001a9c <uart_UART_GPIO_config+0x108>)
 8001a46:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001a4a:	6053      	str	r3, [r2, #4]
  //Output max 10Mhz
  GPIOB->CRH &= ~GPIO_CRH_MODE10;
 8001a4c:	4b13      	ldr	r3, [pc, #76]	; (8001a9c <uart_UART_GPIO_config+0x108>)
 8001a4e:	685b      	ldr	r3, [r3, #4]
 8001a50:	4a12      	ldr	r2, [pc, #72]	; (8001a9c <uart_UART_GPIO_config+0x108>)
 8001a52:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8001a56:	6053      	str	r3, [r2, #4]
  GPIOB->CRH |= GPIO_CRH_MODE10_0;
 8001a58:	4b10      	ldr	r3, [pc, #64]	; (8001a9c <uart_UART_GPIO_config+0x108>)
 8001a5a:	685b      	ldr	r3, [r3, #4]
 8001a5c:	4a0f      	ldr	r2, [pc, #60]	; (8001a9c <uart_UART_GPIO_config+0x108>)
 8001a5e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001a62:	6053      	str	r3, [r2, #4]
  GPIOB->CRH &= ~GPIO_CRH_MODE11;
 8001a64:	4b0d      	ldr	r3, [pc, #52]	; (8001a9c <uart_UART_GPIO_config+0x108>)
 8001a66:	685b      	ldr	r3, [r3, #4]
 8001a68:	4a0c      	ldr	r2, [pc, #48]	; (8001a9c <uart_UART_GPIO_config+0x108>)
 8001a6a:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8001a6e:	6053      	str	r3, [r2, #4]
  //Map to PB10, PB11
  RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;
 8001a70:	4b07      	ldr	r3, [pc, #28]	; (8001a90 <uart_UART_GPIO_config+0xfc>)
 8001a72:	699b      	ldr	r3, [r3, #24]
 8001a74:	4a06      	ldr	r2, [pc, #24]	; (8001a90 <uart_UART_GPIO_config+0xfc>)
 8001a76:	f043 0301 	orr.w	r3, r3, #1
 8001a7a:	6193      	str	r3, [r2, #24]
  AFIO->MAPR &= ~(AFIO_MAPR_USART3_REMAP);
 8001a7c:	4b06      	ldr	r3, [pc, #24]	; (8001a98 <uart_UART_GPIO_config+0x104>)
 8001a7e:	685b      	ldr	r3, [r3, #4]
 8001a80:	4a05      	ldr	r2, [pc, #20]	; (8001a98 <uart_UART_GPIO_config+0x104>)
 8001a82:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 8001a86:	6053      	str	r3, [r2, #4]
}
 8001a88:	bf00      	nop
 8001a8a:	46bd      	mov	sp, r7
 8001a8c:	bc80      	pop	{r7}
 8001a8e:	4770      	bx	lr
 8001a90:	40021000 	.word	0x40021000
 8001a94:	40010800 	.word	0x40010800
 8001a98:	40010000 	.word	0x40010000
 8001a9c:	40010c00 	.word	0x40010c00

08001aa0 <uart_UART1_config>:

/**
 * @brief UART1 configuration
 */
void uart_UART1_config(void)
{
 8001aa0:	b480      	push	{r7}
 8001aa2:	af00      	add	r7, sp, #0
  //UART clock enable
  RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 8001aa4:	4b2a      	ldr	r3, [pc, #168]	; (8001b50 <uart_UART1_config+0xb0>)
 8001aa6:	699b      	ldr	r3, [r3, #24]
 8001aa8:	4a29      	ldr	r2, [pc, #164]	; (8001b50 <uart_UART1_config+0xb0>)
 8001aaa:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001aae:	6193      	str	r3, [r2, #24]

  //Transmit Enable
  USART1->CR1 |= USART_CR1_TE;
 8001ab0:	4b28      	ldr	r3, [pc, #160]	; (8001b54 <uart_UART1_config+0xb4>)
 8001ab2:	68db      	ldr	r3, [r3, #12]
 8001ab4:	4a27      	ldr	r2, [pc, #156]	; (8001b54 <uart_UART1_config+0xb4>)
 8001ab6:	f043 0308 	orr.w	r3, r3, #8
 8001aba:	60d3      	str	r3, [r2, #12]
  //Parity - Even
  USART1->CR1 &= ~(USART_CR1_PS);
 8001abc:	4b25      	ldr	r3, [pc, #148]	; (8001b54 <uart_UART1_config+0xb4>)
 8001abe:	68db      	ldr	r3, [r3, #12]
 8001ac0:	4a24      	ldr	r2, [pc, #144]	; (8001b54 <uart_UART1_config+0xb4>)
 8001ac2:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8001ac6:	60d3      	str	r3, [r2, #12]
  //Parity Control Enable
  USART1->CR1 &= ~(USART_CR1_PCE);
 8001ac8:	4b22      	ldr	r3, [pc, #136]	; (8001b54 <uart_UART1_config+0xb4>)
 8001aca:	68db      	ldr	r3, [r3, #12]
 8001acc:	4a21      	ldr	r2, [pc, #132]	; (8001b54 <uart_UART1_config+0xb4>)
 8001ace:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8001ad2:	60d3      	str	r3, [r2, #12]
  //Word length = 8bit
  USART1->CR1 &= ~(USART_CR1_M);
 8001ad4:	4b1f      	ldr	r3, [pc, #124]	; (8001b54 <uart_UART1_config+0xb4>)
 8001ad6:	68db      	ldr	r3, [r3, #12]
 8001ad8:	4a1e      	ldr	r2, [pc, #120]	; (8001b54 <uart_UART1_config+0xb4>)
 8001ada:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001ade:	60d3      	str	r3, [r2, #12]
  //Stop bits = 1
  USART1->CR2 &= ~(USART_CR2_STOP);
 8001ae0:	4b1c      	ldr	r3, [pc, #112]	; (8001b54 <uart_UART1_config+0xb4>)
 8001ae2:	691b      	ldr	r3, [r3, #16]
 8001ae4:	4a1b      	ldr	r2, [pc, #108]	; (8001b54 <uart_UART1_config+0xb4>)
 8001ae6:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8001aea:	6113      	str	r3, [r2, #16]
  //Disable Hardware flow control (RTS, CTS)
  USART1->CR3 &= ~(USART_CR3_CTSE);
 8001aec:	4b19      	ldr	r3, [pc, #100]	; (8001b54 <uart_UART1_config+0xb4>)
 8001aee:	695b      	ldr	r3, [r3, #20]
 8001af0:	4a18      	ldr	r2, [pc, #96]	; (8001b54 <uart_UART1_config+0xb4>)
 8001af2:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8001af6:	6153      	str	r3, [r2, #20]
  USART1->CR3 &= ~(USART_CR3_RTSE);
 8001af8:	4b16      	ldr	r3, [pc, #88]	; (8001b54 <uart_UART1_config+0xb4>)
 8001afa:	695b      	ldr	r3, [r3, #20]
 8001afc:	4a15      	ldr	r2, [pc, #84]	; (8001b54 <uart_UART1_config+0xb4>)
 8001afe:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8001b02:	6153      	str	r3, [r2, #20]
  //page 798
  //Set Baud rate to 115200 (72MHz = 39.0625 -> 39 / 1)
  //BRR = 72MHz/115200/16 = 39.0625
  //Mantissa = 39
  //Fraction = .0625*16 = 1
  USART1->BRR =0;
 8001b04:	4b13      	ldr	r3, [pc, #76]	; (8001b54 <uart_UART1_config+0xb4>)
 8001b06:	2200      	movs	r2, #0
 8001b08:	609a      	str	r2, [r3, #8]
  USART1->BRR |= (39UL << 4);
 8001b0a:	4b12      	ldr	r3, [pc, #72]	; (8001b54 <uart_UART1_config+0xb4>)
 8001b0c:	689b      	ldr	r3, [r3, #8]
 8001b0e:	4a11      	ldr	r2, [pc, #68]	; (8001b54 <uart_UART1_config+0xb4>)
 8001b10:	f443 731c 	orr.w	r3, r3, #624	; 0x270
 8001b14:	6093      	str	r3, [r2, #8]
  USART1->BRR |= (1UL << 0);
 8001b16:	4b0f      	ldr	r3, [pc, #60]	; (8001b54 <uart_UART1_config+0xb4>)
 8001b18:	689b      	ldr	r3, [r3, #8]
 8001b1a:	4a0e      	ldr	r2, [pc, #56]	; (8001b54 <uart_UART1_config+0xb4>)
 8001b1c:	f043 0301 	orr.w	r3, r3, #1
 8001b20:	6093      	str	r3, [r2, #8]
  //Clear LINEN and CLKEN in CR2
  USART1->CR2 &= ~(USART_CR2_LINEN | USART_CR2_CLKEN);
 8001b22:	4b0c      	ldr	r3, [pc, #48]	; (8001b54 <uart_UART1_config+0xb4>)
 8001b24:	691b      	ldr	r3, [r3, #16]
 8001b26:	4a0b      	ldr	r2, [pc, #44]	; (8001b54 <uart_UART1_config+0xb4>)
 8001b28:	f423 4390 	bic.w	r3, r3, #18432	; 0x4800
 8001b2c:	6113      	str	r3, [r2, #16]
  //Clear SCEN, HDSEL and IREN in CR3
  USART1->CR3 &= ~(USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN);
 8001b2e:	4b09      	ldr	r3, [pc, #36]	; (8001b54 <uart_UART1_config+0xb4>)
 8001b30:	695b      	ldr	r3, [r3, #20]
 8001b32:	4a08      	ldr	r2, [pc, #32]	; (8001b54 <uart_UART1_config+0xb4>)
 8001b34:	f023 032a 	bic.w	r3, r3, #42	; 0x2a
 8001b38:	6153      	str	r3, [r2, #20]
  //Enable UART
  USART1->CR1 |= USART_CR1_UE;
 8001b3a:	4b06      	ldr	r3, [pc, #24]	; (8001b54 <uart_UART1_config+0xb4>)
 8001b3c:	68db      	ldr	r3, [r3, #12]
 8001b3e:	4a05      	ldr	r2, [pc, #20]	; (8001b54 <uart_UART1_config+0xb4>)
 8001b40:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001b44:	60d3      	str	r3, [r2, #12]
}
 8001b46:	bf00      	nop
 8001b48:	46bd      	mov	sp, r7
 8001b4a:	bc80      	pop	{r7}
 8001b4c:	4770      	bx	lr
 8001b4e:	bf00      	nop
 8001b50:	40021000 	.word	0x40021000
 8001b54:	40013800 	.word	0x40013800

08001b58 <uart_UART1_transmit>:

/**
 * @brief UART1 transmit
 */
bool uart_UART1_transmit(uint8_t *data, uint8_t len, uint32_t timeout)
{
 8001b58:	b580      	push	{r7, lr}
 8001b5a:	b086      	sub	sp, #24
 8001b5c:	af00      	add	r7, sp, #0
 8001b5e:	60f8      	str	r0, [r7, #12]
 8001b60:	460b      	mov	r3, r1
 8001b62:	607a      	str	r2, [r7, #4]
 8001b64:	72fb      	strb	r3, [r7, #11]
  //Wait on TXE to start transmit
  //Write to DR as TXE flag is HIGH (Tx buffer Empty)
  uint8_t dataIdx = 0;
 8001b66:	2300      	movs	r3, #0
 8001b68:	75fb      	strb	r3, [r7, #23]
  uint32_t startTick = rcc_msGetTicks();
 8001b6a:	f7ff ff09 	bl	8001980 <rcc_msGetTicks>
 8001b6e:	6138      	str	r0, [r7, #16]
  while(dataIdx<len)
 8001b70:	e019      	b.n	8001ba6 <uart_UART1_transmit+0x4e>
  {
    if(USART1->SR & USART_SR_TXE) //Tx buffer empty
 8001b72:	4b1a      	ldr	r3, [pc, #104]	; (8001bdc <uart_UART1_transmit+0x84>)
 8001b74:	681b      	ldr	r3, [r3, #0]
 8001b76:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001b7a:	2b00      	cmp	r3, #0
 8001b7c:	d009      	beq.n	8001b92 <uart_UART1_transmit+0x3a>
    {
      USART1->DR = data[dataIdx];
 8001b7e:	7dfb      	ldrb	r3, [r7, #23]
 8001b80:	68fa      	ldr	r2, [r7, #12]
 8001b82:	4413      	add	r3, r2
 8001b84:	781a      	ldrb	r2, [r3, #0]
 8001b86:	4b15      	ldr	r3, [pc, #84]	; (8001bdc <uart_UART1_transmit+0x84>)
 8001b88:	605a      	str	r2, [r3, #4]
      dataIdx++;
 8001b8a:	7dfb      	ldrb	r3, [r7, #23]
 8001b8c:	3301      	adds	r3, #1
 8001b8e:	75fb      	strb	r3, [r7, #23]
 8001b90:	e009      	b.n	8001ba6 <uart_UART1_transmit+0x4e>
    }
    else //Manage timeout
    {
      if((rcc_msGetTicks() - startTick)>= timeout) return false;
 8001b92:	f7ff fef5 	bl	8001980 <rcc_msGetTicks>
 8001b96:	4602      	mov	r2, r0
 8001b98:	693b      	ldr	r3, [r7, #16]
 8001b9a:	1ad3      	subs	r3, r2, r3
 8001b9c:	687a      	ldr	r2, [r7, #4]
 8001b9e:	429a      	cmp	r2, r3
 8001ba0:	d801      	bhi.n	8001ba6 <uart_UART1_transmit+0x4e>
 8001ba2:	2300      	movs	r3, #0
 8001ba4:	e015      	b.n	8001bd2 <uart_UART1_transmit+0x7a>
  while(dataIdx<len)
 8001ba6:	7dfa      	ldrb	r2, [r7, #23]
 8001ba8:	7afb      	ldrb	r3, [r7, #11]
 8001baa:	429a      	cmp	r2, r3
 8001bac:	d3e1      	bcc.n	8001b72 <uart_UART1_transmit+0x1a>
    }
  }
  //Wait for busy flag
  while(USART1->SR & USART_SR_TC)
 8001bae:	e009      	b.n	8001bc4 <uart_UART1_transmit+0x6c>
  {
    if((rcc_msGetTicks() - startTick)>= timeout) return false;
 8001bb0:	f7ff fee6 	bl	8001980 <rcc_msGetTicks>
 8001bb4:	4602      	mov	r2, r0
 8001bb6:	693b      	ldr	r3, [r7, #16]
 8001bb8:	1ad3      	subs	r3, r2, r3
 8001bba:	687a      	ldr	r2, [r7, #4]
 8001bbc:	429a      	cmp	r2, r3
 8001bbe:	d801      	bhi.n	8001bc4 <uart_UART1_transmit+0x6c>
 8001bc0:	2300      	movs	r3, #0
 8001bc2:	e006      	b.n	8001bd2 <uart_UART1_transmit+0x7a>
  while(USART1->SR & USART_SR_TC)
 8001bc4:	4b05      	ldr	r3, [pc, #20]	; (8001bdc <uart_UART1_transmit+0x84>)
 8001bc6:	681b      	ldr	r3, [r3, #0]
 8001bc8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001bcc:	2b00      	cmp	r3, #0
 8001bce:	d1ef      	bne.n	8001bb0 <uart_UART1_transmit+0x58>
  }
  return true;
 8001bd0:	2301      	movs	r3, #1
}
 8001bd2:	4618      	mov	r0, r3
 8001bd4:	3718      	adds	r7, #24
 8001bd6:	46bd      	mov	sp, r7
 8001bd8:	bd80      	pop	{r7, pc}
 8001bda:	bf00      	nop
 8001bdc:	40013800 	.word	0x40013800

08001be0 <uart_UART3_config>:

/**
 * @brief UART1 configuration
 */
void uart_UART3_config(void)
{
 8001be0:	b480      	push	{r7}
 8001be2:	af00      	add	r7, sp, #0
  //UART clock enable
  RCC->APB1ENR |= RCC_APB1ENR_USART3EN;
 8001be4:	4b2a      	ldr	r3, [pc, #168]	; (8001c90 <uart_UART3_config+0xb0>)
 8001be6:	69db      	ldr	r3, [r3, #28]
 8001be8:	4a29      	ldr	r2, [pc, #164]	; (8001c90 <uart_UART3_config+0xb0>)
 8001bea:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001bee:	61d3      	str	r3, [r2, #28]

  //Transmit Enable
  USART3->CR1 |= USART_CR1_TE;
 8001bf0:	4b28      	ldr	r3, [pc, #160]	; (8001c94 <uart_UART3_config+0xb4>)
 8001bf2:	68db      	ldr	r3, [r3, #12]
 8001bf4:	4a27      	ldr	r2, [pc, #156]	; (8001c94 <uart_UART3_config+0xb4>)
 8001bf6:	f043 0308 	orr.w	r3, r3, #8
 8001bfa:	60d3      	str	r3, [r2, #12]
  //Parity - Even
  USART3->CR1 &= ~(USART_CR1_PS);
 8001bfc:	4b25      	ldr	r3, [pc, #148]	; (8001c94 <uart_UART3_config+0xb4>)
 8001bfe:	68db      	ldr	r3, [r3, #12]
 8001c00:	4a24      	ldr	r2, [pc, #144]	; (8001c94 <uart_UART3_config+0xb4>)
 8001c02:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8001c06:	60d3      	str	r3, [r2, #12]
  //Parity Control Enable
  USART3->CR1 &= ~(USART_CR1_PCE);
 8001c08:	4b22      	ldr	r3, [pc, #136]	; (8001c94 <uart_UART3_config+0xb4>)
 8001c0a:	68db      	ldr	r3, [r3, #12]
 8001c0c:	4a21      	ldr	r2, [pc, #132]	; (8001c94 <uart_UART3_config+0xb4>)
 8001c0e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8001c12:	60d3      	str	r3, [r2, #12]
  //Word length = 8bit
  USART3->CR1 &= ~(USART_CR1_M);
 8001c14:	4b1f      	ldr	r3, [pc, #124]	; (8001c94 <uart_UART3_config+0xb4>)
 8001c16:	68db      	ldr	r3, [r3, #12]
 8001c18:	4a1e      	ldr	r2, [pc, #120]	; (8001c94 <uart_UART3_config+0xb4>)
 8001c1a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001c1e:	60d3      	str	r3, [r2, #12]
  //Stop bits = 1
  USART3->CR2 &= ~(USART_CR2_STOP);
 8001c20:	4b1c      	ldr	r3, [pc, #112]	; (8001c94 <uart_UART3_config+0xb4>)
 8001c22:	691b      	ldr	r3, [r3, #16]
 8001c24:	4a1b      	ldr	r2, [pc, #108]	; (8001c94 <uart_UART3_config+0xb4>)
 8001c26:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8001c2a:	6113      	str	r3, [r2, #16]
  //Disable Hardware flow control (RTS, CTS)
  USART3->CR3 &= ~(USART_CR3_CTSE);
 8001c2c:	4b19      	ldr	r3, [pc, #100]	; (8001c94 <uart_UART3_config+0xb4>)
 8001c2e:	695b      	ldr	r3, [r3, #20]
 8001c30:	4a18      	ldr	r2, [pc, #96]	; (8001c94 <uart_UART3_config+0xb4>)
 8001c32:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8001c36:	6153      	str	r3, [r2, #20]
  USART3->CR3 &= ~(USART_CR3_RTSE);
 8001c38:	4b16      	ldr	r3, [pc, #88]	; (8001c94 <uart_UART3_config+0xb4>)
 8001c3a:	695b      	ldr	r3, [r3, #20]
 8001c3c:	4a15      	ldr	r2, [pc, #84]	; (8001c94 <uart_UART3_config+0xb4>)
 8001c3e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8001c42:	6153      	str	r3, [r2, #20]
  //Set Baud rate to 9600 (36MHz = 234.375 -> 234 / 6)
  //BRR = 36MHz/9600/16 = 234.375
  //Mantissa = 234
  //Fraction = .375*16 = 6
  USART3->BRR =0;
 8001c44:	4b13      	ldr	r3, [pc, #76]	; (8001c94 <uart_UART3_config+0xb4>)
 8001c46:	2200      	movs	r2, #0
 8001c48:	609a      	str	r2, [r3, #8]
  USART3->BRR |= (234UL << 4);
 8001c4a:	4b12      	ldr	r3, [pc, #72]	; (8001c94 <uart_UART3_config+0xb4>)
 8001c4c:	689b      	ldr	r3, [r3, #8]
 8001c4e:	4a11      	ldr	r2, [pc, #68]	; (8001c94 <uart_UART3_config+0xb4>)
 8001c50:	f443 636a 	orr.w	r3, r3, #3744	; 0xea0
 8001c54:	6093      	str	r3, [r2, #8]
  USART3->BRR |= (6UL << 0);
 8001c56:	4b0f      	ldr	r3, [pc, #60]	; (8001c94 <uart_UART3_config+0xb4>)
 8001c58:	689b      	ldr	r3, [r3, #8]
 8001c5a:	4a0e      	ldr	r2, [pc, #56]	; (8001c94 <uart_UART3_config+0xb4>)
 8001c5c:	f043 0306 	orr.w	r3, r3, #6
 8001c60:	6093      	str	r3, [r2, #8]
  //Clear LINEN and CLKEN in CR2
  USART3->CR2 &= ~(USART_CR2_LINEN | USART_CR2_CLKEN);
 8001c62:	4b0c      	ldr	r3, [pc, #48]	; (8001c94 <uart_UART3_config+0xb4>)
 8001c64:	691b      	ldr	r3, [r3, #16]
 8001c66:	4a0b      	ldr	r2, [pc, #44]	; (8001c94 <uart_UART3_config+0xb4>)
 8001c68:	f423 4390 	bic.w	r3, r3, #18432	; 0x4800
 8001c6c:	6113      	str	r3, [r2, #16]
  //Clear SCEN, HDSEL and IREN in CR3
  USART3->CR3 &= ~(USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN);
 8001c6e:	4b09      	ldr	r3, [pc, #36]	; (8001c94 <uart_UART3_config+0xb4>)
 8001c70:	695b      	ldr	r3, [r3, #20]
 8001c72:	4a08      	ldr	r2, [pc, #32]	; (8001c94 <uart_UART3_config+0xb4>)
 8001c74:	f023 032a 	bic.w	r3, r3, #42	; 0x2a
 8001c78:	6153      	str	r3, [r2, #20]
  //Enable UART
  USART3->CR1 |= USART_CR1_UE;
 8001c7a:	4b06      	ldr	r3, [pc, #24]	; (8001c94 <uart_UART3_config+0xb4>)
 8001c7c:	68db      	ldr	r3, [r3, #12]
 8001c7e:	4a05      	ldr	r2, [pc, #20]	; (8001c94 <uart_UART3_config+0xb4>)
 8001c80:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001c84:	60d3      	str	r3, [r2, #12]
}
 8001c86:	bf00      	nop
 8001c88:	46bd      	mov	sp, r7
 8001c8a:	bc80      	pop	{r7}
 8001c8c:	4770      	bx	lr
 8001c8e:	bf00      	nop
 8001c90:	40021000 	.word	0x40021000
 8001c94:	40004800 	.word	0x40004800

08001c98 <uart_UART3_transmit>:

bool uart_UART3_transmit(uint8_t *data, uint8_t len, uint32_t timeout)
{
 8001c98:	b580      	push	{r7, lr}
 8001c9a:	b086      	sub	sp, #24
 8001c9c:	af00      	add	r7, sp, #0
 8001c9e:	60f8      	str	r0, [r7, #12]
 8001ca0:	460b      	mov	r3, r1
 8001ca2:	607a      	str	r2, [r7, #4]
 8001ca4:	72fb      	strb	r3, [r7, #11]
  //Wait on TXE to start transmit
  //Write to DR as TXE flag is HIGH (Tx buffer Empty)
  uint8_t dataIdx = 0;
 8001ca6:	2300      	movs	r3, #0
 8001ca8:	75fb      	strb	r3, [r7, #23]
  uint32_t startTick = rcc_msGetTicks();
 8001caa:	f7ff fe69 	bl	8001980 <rcc_msGetTicks>
 8001cae:	6138      	str	r0, [r7, #16]
  while(dataIdx<len)
 8001cb0:	e019      	b.n	8001ce6 <uart_UART3_transmit+0x4e>
  {
    if(USART3->SR & USART_SR_TXE) //Tx buffer empty
 8001cb2:	4b1a      	ldr	r3, [pc, #104]	; (8001d1c <uart_UART3_transmit+0x84>)
 8001cb4:	681b      	ldr	r3, [r3, #0]
 8001cb6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001cba:	2b00      	cmp	r3, #0
 8001cbc:	d009      	beq.n	8001cd2 <uart_UART3_transmit+0x3a>
    {
      USART3->DR = data[dataIdx];
 8001cbe:	7dfb      	ldrb	r3, [r7, #23]
 8001cc0:	68fa      	ldr	r2, [r7, #12]
 8001cc2:	4413      	add	r3, r2
 8001cc4:	781a      	ldrb	r2, [r3, #0]
 8001cc6:	4b15      	ldr	r3, [pc, #84]	; (8001d1c <uart_UART3_transmit+0x84>)
 8001cc8:	605a      	str	r2, [r3, #4]
      dataIdx++;
 8001cca:	7dfb      	ldrb	r3, [r7, #23]
 8001ccc:	3301      	adds	r3, #1
 8001cce:	75fb      	strb	r3, [r7, #23]
 8001cd0:	e009      	b.n	8001ce6 <uart_UART3_transmit+0x4e>
    }
    else //Manage timeout
    {
      if((rcc_msGetTicks() - startTick)>= timeout) return false;
 8001cd2:	f7ff fe55 	bl	8001980 <rcc_msGetTicks>
 8001cd6:	4602      	mov	r2, r0
 8001cd8:	693b      	ldr	r3, [r7, #16]
 8001cda:	1ad3      	subs	r3, r2, r3
 8001cdc:	687a      	ldr	r2, [r7, #4]
 8001cde:	429a      	cmp	r2, r3
 8001ce0:	d801      	bhi.n	8001ce6 <uart_UART3_transmit+0x4e>
 8001ce2:	2300      	movs	r3, #0
 8001ce4:	e015      	b.n	8001d12 <uart_UART3_transmit+0x7a>
  while(dataIdx<len)
 8001ce6:	7dfa      	ldrb	r2, [r7, #23]
 8001ce8:	7afb      	ldrb	r3, [r7, #11]
 8001cea:	429a      	cmp	r2, r3
 8001cec:	d3e1      	bcc.n	8001cb2 <uart_UART3_transmit+0x1a>
    }
  }
  //Wait for busy flag
  while(USART3->SR & USART_SR_TC)//transmission complete flag
 8001cee:	e009      	b.n	8001d04 <uart_UART3_transmit+0x6c>
  {
    if((rcc_msGetTicks() - startTick)>= timeout) return false;
 8001cf0:	f7ff fe46 	bl	8001980 <rcc_msGetTicks>
 8001cf4:	4602      	mov	r2, r0
 8001cf6:	693b      	ldr	r3, [r7, #16]
 8001cf8:	1ad3      	subs	r3, r2, r3
 8001cfa:	687a      	ldr	r2, [r7, #4]
 8001cfc:	429a      	cmp	r2, r3
 8001cfe:	d801      	bhi.n	8001d04 <uart_UART3_transmit+0x6c>
 8001d00:	2300      	movs	r3, #0
 8001d02:	e006      	b.n	8001d12 <uart_UART3_transmit+0x7a>
  while(USART3->SR & USART_SR_TC)//transmission complete flag
 8001d04:	4b05      	ldr	r3, [pc, #20]	; (8001d1c <uart_UART3_transmit+0x84>)
 8001d06:	681b      	ldr	r3, [r3, #0]
 8001d08:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001d0c:	2b00      	cmp	r3, #0
 8001d0e:	d1ef      	bne.n	8001cf0 <uart_UART3_transmit+0x58>
  }
  return true;
 8001d10:	2301      	movs	r3, #1
}
 8001d12:	4618      	mov	r0, r3
 8001d14:	3718      	adds	r7, #24
 8001d16:	46bd      	mov	sp, r7
 8001d18:	bd80      	pop	{r7, pc}
 8001d1a:	bf00      	nop
 8001d1c:	40004800 	.word	0x40004800

08001d20 <Reset_Handler>:
 8001d20:	480c      	ldr	r0, [pc, #48]	; (8001d54 <LoopFillZerobss+0x12>)
 8001d22:	490d      	ldr	r1, [pc, #52]	; (8001d58 <LoopFillZerobss+0x16>)
 8001d24:	4a0d      	ldr	r2, [pc, #52]	; (8001d5c <LoopFillZerobss+0x1a>)
 8001d26:	2300      	movs	r3, #0
 8001d28:	e002      	b.n	8001d30 <LoopCopyDataInit>

08001d2a <CopyDataInit>:
 8001d2a:	58d4      	ldr	r4, [r2, r3]
 8001d2c:	50c4      	str	r4, [r0, r3]
 8001d2e:	3304      	adds	r3, #4

08001d30 <LoopCopyDataInit>:
 8001d30:	18c4      	adds	r4, r0, r3
 8001d32:	428c      	cmp	r4, r1
 8001d34:	d3f9      	bcc.n	8001d2a <CopyDataInit>
 8001d36:	4a0a      	ldr	r2, [pc, #40]	; (8001d60 <LoopFillZerobss+0x1e>)
 8001d38:	4c0a      	ldr	r4, [pc, #40]	; (8001d64 <LoopFillZerobss+0x22>)
 8001d3a:	2300      	movs	r3, #0
 8001d3c:	e001      	b.n	8001d42 <LoopFillZerobss>

08001d3e <FillZerobss>:
 8001d3e:	6013      	str	r3, [r2, #0]
 8001d40:	3204      	adds	r2, #4

08001d42 <LoopFillZerobss>:
 8001d42:	42a2      	cmp	r2, r4
 8001d44:	d3fb      	bcc.n	8001d3e <FillZerobss>
 8001d46:	f7ff fa74 	bl	8001232 <SystemInit>
 8001d4a:	f000 f80f 	bl	8001d6c <__libc_init_array>
 8001d4e:	f7ff f917 	bl	8000f80 <main>
 8001d52:	4770      	bx	lr
 8001d54:	20000000 	.word	0x20000000
 8001d58:	200001dc 	.word	0x200001dc
 8001d5c:	08005124 	.word	0x08005124
 8001d60:	200001dc 	.word	0x200001dc
 8001d64:	20000220 	.word	0x20000220

08001d68 <BusFault_Handler>:
 8001d68:	e7fe      	b.n	8001d68 <BusFault_Handler>
	...

08001d6c <__libc_init_array>:
 8001d6c:	b570      	push	{r4, r5, r6, lr}
 8001d6e:	2600      	movs	r6, #0
 8001d70:	4d0c      	ldr	r5, [pc, #48]	; (8001da4 <__libc_init_array+0x38>)
 8001d72:	4c0d      	ldr	r4, [pc, #52]	; (8001da8 <__libc_init_array+0x3c>)
 8001d74:	1b64      	subs	r4, r4, r5
 8001d76:	10a4      	asrs	r4, r4, #2
 8001d78:	42a6      	cmp	r6, r4
 8001d7a:	d109      	bne.n	8001d90 <__libc_init_array+0x24>
 8001d7c:	f002 ffce 	bl	8004d1c <_init>
 8001d80:	2600      	movs	r6, #0
 8001d82:	4d0a      	ldr	r5, [pc, #40]	; (8001dac <__libc_init_array+0x40>)
 8001d84:	4c0a      	ldr	r4, [pc, #40]	; (8001db0 <__libc_init_array+0x44>)
 8001d86:	1b64      	subs	r4, r4, r5
 8001d88:	10a4      	asrs	r4, r4, #2
 8001d8a:	42a6      	cmp	r6, r4
 8001d8c:	d105      	bne.n	8001d9a <__libc_init_array+0x2e>
 8001d8e:	bd70      	pop	{r4, r5, r6, pc}
 8001d90:	f855 3b04 	ldr.w	r3, [r5], #4
 8001d94:	4798      	blx	r3
 8001d96:	3601      	adds	r6, #1
 8001d98:	e7ee      	b.n	8001d78 <__libc_init_array+0xc>
 8001d9a:	f855 3b04 	ldr.w	r3, [r5], #4
 8001d9e:	4798      	blx	r3
 8001da0:	3601      	adds	r6, #1
 8001da2:	e7f2      	b.n	8001d8a <__libc_init_array+0x1e>
 8001da4:	0800511c 	.word	0x0800511c
 8001da8:	0800511c 	.word	0x0800511c
 8001dac:	0800511c 	.word	0x0800511c
 8001db0:	08005120 	.word	0x08005120

08001db4 <memset>:
 8001db4:	4603      	mov	r3, r0
 8001db6:	4402      	add	r2, r0
 8001db8:	4293      	cmp	r3, r2
 8001dba:	d100      	bne.n	8001dbe <memset+0xa>
 8001dbc:	4770      	bx	lr
 8001dbe:	f803 1b01 	strb.w	r1, [r3], #1
 8001dc2:	e7f9      	b.n	8001db8 <memset+0x4>

08001dc4 <__cvt>:
 8001dc4:	2b00      	cmp	r3, #0
 8001dc6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001dca:	461f      	mov	r7, r3
 8001dcc:	bfbb      	ittet	lt
 8001dce:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 8001dd2:	461f      	movlt	r7, r3
 8001dd4:	2300      	movge	r3, #0
 8001dd6:	232d      	movlt	r3, #45	; 0x2d
 8001dd8:	b088      	sub	sp, #32
 8001dda:	4614      	mov	r4, r2
 8001ddc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8001dde:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8001de0:	7013      	strb	r3, [r2, #0]
 8001de2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8001de4:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
 8001de8:	f023 0820 	bic.w	r8, r3, #32
 8001dec:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8001df0:	d005      	beq.n	8001dfe <__cvt+0x3a>
 8001df2:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 8001df6:	d100      	bne.n	8001dfa <__cvt+0x36>
 8001df8:	3501      	adds	r5, #1
 8001dfa:	2302      	movs	r3, #2
 8001dfc:	e000      	b.n	8001e00 <__cvt+0x3c>
 8001dfe:	2303      	movs	r3, #3
 8001e00:	aa07      	add	r2, sp, #28
 8001e02:	9204      	str	r2, [sp, #16]
 8001e04:	aa06      	add	r2, sp, #24
 8001e06:	e9cd a202 	strd	sl, r2, [sp, #8]
 8001e0a:	e9cd 3500 	strd	r3, r5, [sp]
 8001e0e:	4622      	mov	r2, r4
 8001e10:	463b      	mov	r3, r7
 8001e12:	f000 fe31 	bl	8002a78 <_dtoa_r>
 8001e16:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8001e1a:	4606      	mov	r6, r0
 8001e1c:	d102      	bne.n	8001e24 <__cvt+0x60>
 8001e1e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8001e20:	07db      	lsls	r3, r3, #31
 8001e22:	d522      	bpl.n	8001e6a <__cvt+0xa6>
 8001e24:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8001e28:	eb06 0905 	add.w	r9, r6, r5
 8001e2c:	d110      	bne.n	8001e50 <__cvt+0x8c>
 8001e2e:	7833      	ldrb	r3, [r6, #0]
 8001e30:	2b30      	cmp	r3, #48	; 0x30
 8001e32:	d10a      	bne.n	8001e4a <__cvt+0x86>
 8001e34:	2200      	movs	r2, #0
 8001e36:	2300      	movs	r3, #0
 8001e38:	4620      	mov	r0, r4
 8001e3a:	4639      	mov	r1, r7
 8001e3c:	f7fe fdb4 	bl	80009a8 <__aeabi_dcmpeq>
 8001e40:	b918      	cbnz	r0, 8001e4a <__cvt+0x86>
 8001e42:	f1c5 0501 	rsb	r5, r5, #1
 8001e46:	f8ca 5000 	str.w	r5, [sl]
 8001e4a:	f8da 3000 	ldr.w	r3, [sl]
 8001e4e:	4499      	add	r9, r3
 8001e50:	2200      	movs	r2, #0
 8001e52:	2300      	movs	r3, #0
 8001e54:	4620      	mov	r0, r4
 8001e56:	4639      	mov	r1, r7
 8001e58:	f7fe fda6 	bl	80009a8 <__aeabi_dcmpeq>
 8001e5c:	b108      	cbz	r0, 8001e62 <__cvt+0x9e>
 8001e5e:	f8cd 901c 	str.w	r9, [sp, #28]
 8001e62:	2230      	movs	r2, #48	; 0x30
 8001e64:	9b07      	ldr	r3, [sp, #28]
 8001e66:	454b      	cmp	r3, r9
 8001e68:	d307      	bcc.n	8001e7a <__cvt+0xb6>
 8001e6a:	4630      	mov	r0, r6
 8001e6c:	9b07      	ldr	r3, [sp, #28]
 8001e6e:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8001e70:	1b9b      	subs	r3, r3, r6
 8001e72:	6013      	str	r3, [r2, #0]
 8001e74:	b008      	add	sp, #32
 8001e76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001e7a:	1c59      	adds	r1, r3, #1
 8001e7c:	9107      	str	r1, [sp, #28]
 8001e7e:	701a      	strb	r2, [r3, #0]
 8001e80:	e7f0      	b.n	8001e64 <__cvt+0xa0>

08001e82 <__exponent>:
 8001e82:	4603      	mov	r3, r0
 8001e84:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001e86:	2900      	cmp	r1, #0
 8001e88:	f803 2b02 	strb.w	r2, [r3], #2
 8001e8c:	bfb6      	itet	lt
 8001e8e:	222d      	movlt	r2, #45	; 0x2d
 8001e90:	222b      	movge	r2, #43	; 0x2b
 8001e92:	4249      	neglt	r1, r1
 8001e94:	2909      	cmp	r1, #9
 8001e96:	7042      	strb	r2, [r0, #1]
 8001e98:	dd2b      	ble.n	8001ef2 <__exponent+0x70>
 8001e9a:	f10d 0407 	add.w	r4, sp, #7
 8001e9e:	46a4      	mov	ip, r4
 8001ea0:	270a      	movs	r7, #10
 8001ea2:	fb91 f6f7 	sdiv	r6, r1, r7
 8001ea6:	460a      	mov	r2, r1
 8001ea8:	46a6      	mov	lr, r4
 8001eaa:	fb07 1516 	mls	r5, r7, r6, r1
 8001eae:	2a63      	cmp	r2, #99	; 0x63
 8001eb0:	f105 0530 	add.w	r5, r5, #48	; 0x30
 8001eb4:	4631      	mov	r1, r6
 8001eb6:	f104 34ff 	add.w	r4, r4, #4294967295
 8001eba:	f80e 5c01 	strb.w	r5, [lr, #-1]
 8001ebe:	dcf0      	bgt.n	8001ea2 <__exponent+0x20>
 8001ec0:	3130      	adds	r1, #48	; 0x30
 8001ec2:	f1ae 0502 	sub.w	r5, lr, #2
 8001ec6:	f804 1c01 	strb.w	r1, [r4, #-1]
 8001eca:	4629      	mov	r1, r5
 8001ecc:	1c44      	adds	r4, r0, #1
 8001ece:	4561      	cmp	r1, ip
 8001ed0:	d30a      	bcc.n	8001ee8 <__exponent+0x66>
 8001ed2:	f10d 0209 	add.w	r2, sp, #9
 8001ed6:	eba2 020e 	sub.w	r2, r2, lr
 8001eda:	4565      	cmp	r5, ip
 8001edc:	bf88      	it	hi
 8001ede:	2200      	movhi	r2, #0
 8001ee0:	4413      	add	r3, r2
 8001ee2:	1a18      	subs	r0, r3, r0
 8001ee4:	b003      	add	sp, #12
 8001ee6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001ee8:	f811 2b01 	ldrb.w	r2, [r1], #1
 8001eec:	f804 2f01 	strb.w	r2, [r4, #1]!
 8001ef0:	e7ed      	b.n	8001ece <__exponent+0x4c>
 8001ef2:	2330      	movs	r3, #48	; 0x30
 8001ef4:	3130      	adds	r1, #48	; 0x30
 8001ef6:	7083      	strb	r3, [r0, #2]
 8001ef8:	70c1      	strb	r1, [r0, #3]
 8001efa:	1d03      	adds	r3, r0, #4
 8001efc:	e7f1      	b.n	8001ee2 <__exponent+0x60>
	...

08001f00 <_printf_float>:
 8001f00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001f04:	b091      	sub	sp, #68	; 0x44
 8001f06:	460c      	mov	r4, r1
 8001f08:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 8001f0c:	4616      	mov	r6, r2
 8001f0e:	461f      	mov	r7, r3
 8001f10:	4605      	mov	r5, r0
 8001f12:	f001 fd53 	bl	80039bc <_localeconv_r>
 8001f16:	6803      	ldr	r3, [r0, #0]
 8001f18:	4618      	mov	r0, r3
 8001f1a:	9309      	str	r3, [sp, #36]	; 0x24
 8001f1c:	f7fe f918 	bl	8000150 <strlen>
 8001f20:	2300      	movs	r3, #0
 8001f22:	930e      	str	r3, [sp, #56]	; 0x38
 8001f24:	f8d8 3000 	ldr.w	r3, [r8]
 8001f28:	900a      	str	r0, [sp, #40]	; 0x28
 8001f2a:	3307      	adds	r3, #7
 8001f2c:	f023 0307 	bic.w	r3, r3, #7
 8001f30:	f103 0208 	add.w	r2, r3, #8
 8001f34:	f894 9018 	ldrb.w	r9, [r4, #24]
 8001f38:	f8d4 b000 	ldr.w	fp, [r4]
 8001f3c:	f8c8 2000 	str.w	r2, [r8]
 8001f40:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001f44:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 8001f48:	e9d4 8a12 	ldrd	r8, sl, [r4, #72]	; 0x48
 8001f4c:	f02a 4300 	bic.w	r3, sl, #2147483648	; 0x80000000
 8001f50:	930b      	str	r3, [sp, #44]	; 0x2c
 8001f52:	f04f 32ff 	mov.w	r2, #4294967295
 8001f56:	4640      	mov	r0, r8
 8001f58:	4b9c      	ldr	r3, [pc, #624]	; (80021cc <_printf_float+0x2cc>)
 8001f5a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001f5c:	f7fe fd56 	bl	8000a0c <__aeabi_dcmpun>
 8001f60:	bb70      	cbnz	r0, 8001fc0 <_printf_float+0xc0>
 8001f62:	f04f 32ff 	mov.w	r2, #4294967295
 8001f66:	4640      	mov	r0, r8
 8001f68:	4b98      	ldr	r3, [pc, #608]	; (80021cc <_printf_float+0x2cc>)
 8001f6a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001f6c:	f7fe fd30 	bl	80009d0 <__aeabi_dcmple>
 8001f70:	bb30      	cbnz	r0, 8001fc0 <_printf_float+0xc0>
 8001f72:	2200      	movs	r2, #0
 8001f74:	2300      	movs	r3, #0
 8001f76:	4640      	mov	r0, r8
 8001f78:	4651      	mov	r1, sl
 8001f7a:	f7fe fd1f 	bl	80009bc <__aeabi_dcmplt>
 8001f7e:	b110      	cbz	r0, 8001f86 <_printf_float+0x86>
 8001f80:	232d      	movs	r3, #45	; 0x2d
 8001f82:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001f86:	4b92      	ldr	r3, [pc, #584]	; (80021d0 <_printf_float+0x2d0>)
 8001f88:	4892      	ldr	r0, [pc, #584]	; (80021d4 <_printf_float+0x2d4>)
 8001f8a:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
 8001f8e:	bf94      	ite	ls
 8001f90:	4698      	movls	r8, r3
 8001f92:	4680      	movhi	r8, r0
 8001f94:	2303      	movs	r3, #3
 8001f96:	f04f 0a00 	mov.w	sl, #0
 8001f9a:	6123      	str	r3, [r4, #16]
 8001f9c:	f02b 0304 	bic.w	r3, fp, #4
 8001fa0:	6023      	str	r3, [r4, #0]
 8001fa2:	4633      	mov	r3, r6
 8001fa4:	4621      	mov	r1, r4
 8001fa6:	4628      	mov	r0, r5
 8001fa8:	9700      	str	r7, [sp, #0]
 8001faa:	aa0f      	add	r2, sp, #60	; 0x3c
 8001fac:	f000 f9d4 	bl	8002358 <_printf_common>
 8001fb0:	3001      	adds	r0, #1
 8001fb2:	f040 8090 	bne.w	80020d6 <_printf_float+0x1d6>
 8001fb6:	f04f 30ff 	mov.w	r0, #4294967295
 8001fba:	b011      	add	sp, #68	; 0x44
 8001fbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001fc0:	4642      	mov	r2, r8
 8001fc2:	4653      	mov	r3, sl
 8001fc4:	4640      	mov	r0, r8
 8001fc6:	4651      	mov	r1, sl
 8001fc8:	f7fe fd20 	bl	8000a0c <__aeabi_dcmpun>
 8001fcc:	b148      	cbz	r0, 8001fe2 <_printf_float+0xe2>
 8001fce:	f1ba 0f00 	cmp.w	sl, #0
 8001fd2:	bfb8      	it	lt
 8001fd4:	232d      	movlt	r3, #45	; 0x2d
 8001fd6:	4880      	ldr	r0, [pc, #512]	; (80021d8 <_printf_float+0x2d8>)
 8001fd8:	bfb8      	it	lt
 8001fda:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 8001fde:	4b7f      	ldr	r3, [pc, #508]	; (80021dc <_printf_float+0x2dc>)
 8001fe0:	e7d3      	b.n	8001f8a <_printf_float+0x8a>
 8001fe2:	6863      	ldr	r3, [r4, #4]
 8001fe4:	f009 01df 	and.w	r1, r9, #223	; 0xdf
 8001fe8:	1c5a      	adds	r2, r3, #1
 8001fea:	d142      	bne.n	8002072 <_printf_float+0x172>
 8001fec:	2306      	movs	r3, #6
 8001fee:	6063      	str	r3, [r4, #4]
 8001ff0:	2200      	movs	r2, #0
 8001ff2:	9206      	str	r2, [sp, #24]
 8001ff4:	aa0e      	add	r2, sp, #56	; 0x38
 8001ff6:	e9cd 9204 	strd	r9, r2, [sp, #16]
 8001ffa:	aa0d      	add	r2, sp, #52	; 0x34
 8001ffc:	f44b 6380 	orr.w	r3, fp, #1024	; 0x400
 8002000:	9203      	str	r2, [sp, #12]
 8002002:	f10d 0233 	add.w	r2, sp, #51	; 0x33
 8002006:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800200a:	6023      	str	r3, [r4, #0]
 800200c:	6863      	ldr	r3, [r4, #4]
 800200e:	4642      	mov	r2, r8
 8002010:	9300      	str	r3, [sp, #0]
 8002012:	4628      	mov	r0, r5
 8002014:	4653      	mov	r3, sl
 8002016:	910b      	str	r1, [sp, #44]	; 0x2c
 8002018:	f7ff fed4 	bl	8001dc4 <__cvt>
 800201c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800201e:	4680      	mov	r8, r0
 8002020:	2947      	cmp	r1, #71	; 0x47
 8002022:	990d      	ldr	r1, [sp, #52]	; 0x34
 8002024:	d108      	bne.n	8002038 <_printf_float+0x138>
 8002026:	1cc8      	adds	r0, r1, #3
 8002028:	db02      	blt.n	8002030 <_printf_float+0x130>
 800202a:	6863      	ldr	r3, [r4, #4]
 800202c:	4299      	cmp	r1, r3
 800202e:	dd40      	ble.n	80020b2 <_printf_float+0x1b2>
 8002030:	f1a9 0902 	sub.w	r9, r9, #2
 8002034:	fa5f f989 	uxtb.w	r9, r9
 8002038:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 800203c:	d81f      	bhi.n	800207e <_printf_float+0x17e>
 800203e:	464a      	mov	r2, r9
 8002040:	3901      	subs	r1, #1
 8002042:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8002046:	910d      	str	r1, [sp, #52]	; 0x34
 8002048:	f7ff ff1b 	bl	8001e82 <__exponent>
 800204c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800204e:	4682      	mov	sl, r0
 8002050:	1813      	adds	r3, r2, r0
 8002052:	2a01      	cmp	r2, #1
 8002054:	6123      	str	r3, [r4, #16]
 8002056:	dc02      	bgt.n	800205e <_printf_float+0x15e>
 8002058:	6822      	ldr	r2, [r4, #0]
 800205a:	07d2      	lsls	r2, r2, #31
 800205c:	d501      	bpl.n	8002062 <_printf_float+0x162>
 800205e:	3301      	adds	r3, #1
 8002060:	6123      	str	r3, [r4, #16]
 8002062:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 8002066:	2b00      	cmp	r3, #0
 8002068:	d09b      	beq.n	8001fa2 <_printf_float+0xa2>
 800206a:	232d      	movs	r3, #45	; 0x2d
 800206c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002070:	e797      	b.n	8001fa2 <_printf_float+0xa2>
 8002072:	2947      	cmp	r1, #71	; 0x47
 8002074:	d1bc      	bne.n	8001ff0 <_printf_float+0xf0>
 8002076:	2b00      	cmp	r3, #0
 8002078:	d1ba      	bne.n	8001ff0 <_printf_float+0xf0>
 800207a:	2301      	movs	r3, #1
 800207c:	e7b7      	b.n	8001fee <_printf_float+0xee>
 800207e:	f1b9 0f66 	cmp.w	r9, #102	; 0x66
 8002082:	d118      	bne.n	80020b6 <_printf_float+0x1b6>
 8002084:	2900      	cmp	r1, #0
 8002086:	6863      	ldr	r3, [r4, #4]
 8002088:	dd0b      	ble.n	80020a2 <_printf_float+0x1a2>
 800208a:	6121      	str	r1, [r4, #16]
 800208c:	b913      	cbnz	r3, 8002094 <_printf_float+0x194>
 800208e:	6822      	ldr	r2, [r4, #0]
 8002090:	07d0      	lsls	r0, r2, #31
 8002092:	d502      	bpl.n	800209a <_printf_float+0x19a>
 8002094:	3301      	adds	r3, #1
 8002096:	440b      	add	r3, r1
 8002098:	6123      	str	r3, [r4, #16]
 800209a:	f04f 0a00 	mov.w	sl, #0
 800209e:	65a1      	str	r1, [r4, #88]	; 0x58
 80020a0:	e7df      	b.n	8002062 <_printf_float+0x162>
 80020a2:	b913      	cbnz	r3, 80020aa <_printf_float+0x1aa>
 80020a4:	6822      	ldr	r2, [r4, #0]
 80020a6:	07d2      	lsls	r2, r2, #31
 80020a8:	d501      	bpl.n	80020ae <_printf_float+0x1ae>
 80020aa:	3302      	adds	r3, #2
 80020ac:	e7f4      	b.n	8002098 <_printf_float+0x198>
 80020ae:	2301      	movs	r3, #1
 80020b0:	e7f2      	b.n	8002098 <_printf_float+0x198>
 80020b2:	f04f 0967 	mov.w	r9, #103	; 0x67
 80020b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80020b8:	4299      	cmp	r1, r3
 80020ba:	db05      	blt.n	80020c8 <_printf_float+0x1c8>
 80020bc:	6823      	ldr	r3, [r4, #0]
 80020be:	6121      	str	r1, [r4, #16]
 80020c0:	07d8      	lsls	r0, r3, #31
 80020c2:	d5ea      	bpl.n	800209a <_printf_float+0x19a>
 80020c4:	1c4b      	adds	r3, r1, #1
 80020c6:	e7e7      	b.n	8002098 <_printf_float+0x198>
 80020c8:	2900      	cmp	r1, #0
 80020ca:	bfcc      	ite	gt
 80020cc:	2201      	movgt	r2, #1
 80020ce:	f1c1 0202 	rsble	r2, r1, #2
 80020d2:	4413      	add	r3, r2
 80020d4:	e7e0      	b.n	8002098 <_printf_float+0x198>
 80020d6:	6823      	ldr	r3, [r4, #0]
 80020d8:	055a      	lsls	r2, r3, #21
 80020da:	d407      	bmi.n	80020ec <_printf_float+0x1ec>
 80020dc:	6923      	ldr	r3, [r4, #16]
 80020de:	4642      	mov	r2, r8
 80020e0:	4631      	mov	r1, r6
 80020e2:	4628      	mov	r0, r5
 80020e4:	47b8      	blx	r7
 80020e6:	3001      	adds	r0, #1
 80020e8:	d12b      	bne.n	8002142 <_printf_float+0x242>
 80020ea:	e764      	b.n	8001fb6 <_printf_float+0xb6>
 80020ec:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 80020f0:	f240 80dd 	bls.w	80022ae <_printf_float+0x3ae>
 80020f4:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80020f8:	2200      	movs	r2, #0
 80020fa:	2300      	movs	r3, #0
 80020fc:	f7fe fc54 	bl	80009a8 <__aeabi_dcmpeq>
 8002100:	2800      	cmp	r0, #0
 8002102:	d033      	beq.n	800216c <_printf_float+0x26c>
 8002104:	2301      	movs	r3, #1
 8002106:	4631      	mov	r1, r6
 8002108:	4628      	mov	r0, r5
 800210a:	4a35      	ldr	r2, [pc, #212]	; (80021e0 <_printf_float+0x2e0>)
 800210c:	47b8      	blx	r7
 800210e:	3001      	adds	r0, #1
 8002110:	f43f af51 	beq.w	8001fb6 <_printf_float+0xb6>
 8002114:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8002118:	429a      	cmp	r2, r3
 800211a:	db02      	blt.n	8002122 <_printf_float+0x222>
 800211c:	6823      	ldr	r3, [r4, #0]
 800211e:	07d8      	lsls	r0, r3, #31
 8002120:	d50f      	bpl.n	8002142 <_printf_float+0x242>
 8002122:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8002126:	4631      	mov	r1, r6
 8002128:	4628      	mov	r0, r5
 800212a:	47b8      	blx	r7
 800212c:	3001      	adds	r0, #1
 800212e:	f43f af42 	beq.w	8001fb6 <_printf_float+0xb6>
 8002132:	f04f 0800 	mov.w	r8, #0
 8002136:	f104 091a 	add.w	r9, r4, #26
 800213a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800213c:	3b01      	subs	r3, #1
 800213e:	4543      	cmp	r3, r8
 8002140:	dc09      	bgt.n	8002156 <_printf_float+0x256>
 8002142:	6823      	ldr	r3, [r4, #0]
 8002144:	079b      	lsls	r3, r3, #30
 8002146:	f100 8102 	bmi.w	800234e <_printf_float+0x44e>
 800214a:	68e0      	ldr	r0, [r4, #12]
 800214c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800214e:	4298      	cmp	r0, r3
 8002150:	bfb8      	it	lt
 8002152:	4618      	movlt	r0, r3
 8002154:	e731      	b.n	8001fba <_printf_float+0xba>
 8002156:	2301      	movs	r3, #1
 8002158:	464a      	mov	r2, r9
 800215a:	4631      	mov	r1, r6
 800215c:	4628      	mov	r0, r5
 800215e:	47b8      	blx	r7
 8002160:	3001      	adds	r0, #1
 8002162:	f43f af28 	beq.w	8001fb6 <_printf_float+0xb6>
 8002166:	f108 0801 	add.w	r8, r8, #1
 800216a:	e7e6      	b.n	800213a <_printf_float+0x23a>
 800216c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800216e:	2b00      	cmp	r3, #0
 8002170:	dc38      	bgt.n	80021e4 <_printf_float+0x2e4>
 8002172:	2301      	movs	r3, #1
 8002174:	4631      	mov	r1, r6
 8002176:	4628      	mov	r0, r5
 8002178:	4a19      	ldr	r2, [pc, #100]	; (80021e0 <_printf_float+0x2e0>)
 800217a:	47b8      	blx	r7
 800217c:	3001      	adds	r0, #1
 800217e:	f43f af1a 	beq.w	8001fb6 <_printf_float+0xb6>
 8002182:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8002186:	4313      	orrs	r3, r2
 8002188:	d102      	bne.n	8002190 <_printf_float+0x290>
 800218a:	6823      	ldr	r3, [r4, #0]
 800218c:	07d9      	lsls	r1, r3, #31
 800218e:	d5d8      	bpl.n	8002142 <_printf_float+0x242>
 8002190:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8002194:	4631      	mov	r1, r6
 8002196:	4628      	mov	r0, r5
 8002198:	47b8      	blx	r7
 800219a:	3001      	adds	r0, #1
 800219c:	f43f af0b 	beq.w	8001fb6 <_printf_float+0xb6>
 80021a0:	f04f 0900 	mov.w	r9, #0
 80021a4:	f104 0a1a 	add.w	sl, r4, #26
 80021a8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80021aa:	425b      	negs	r3, r3
 80021ac:	454b      	cmp	r3, r9
 80021ae:	dc01      	bgt.n	80021b4 <_printf_float+0x2b4>
 80021b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80021b2:	e794      	b.n	80020de <_printf_float+0x1de>
 80021b4:	2301      	movs	r3, #1
 80021b6:	4652      	mov	r2, sl
 80021b8:	4631      	mov	r1, r6
 80021ba:	4628      	mov	r0, r5
 80021bc:	47b8      	blx	r7
 80021be:	3001      	adds	r0, #1
 80021c0:	f43f aef9 	beq.w	8001fb6 <_printf_float+0xb6>
 80021c4:	f109 0901 	add.w	r9, r9, #1
 80021c8:	e7ee      	b.n	80021a8 <_printf_float+0x2a8>
 80021ca:	bf00      	nop
 80021cc:	7fefffff 	.word	0x7fefffff
 80021d0:	08004d48 	.word	0x08004d48
 80021d4:	08004d4c 	.word	0x08004d4c
 80021d8:	08004d54 	.word	0x08004d54
 80021dc:	08004d50 	.word	0x08004d50
 80021e0:	08004d58 	.word	0x08004d58
 80021e4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80021e6:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80021e8:	429a      	cmp	r2, r3
 80021ea:	bfa8      	it	ge
 80021ec:	461a      	movge	r2, r3
 80021ee:	2a00      	cmp	r2, #0
 80021f0:	4691      	mov	r9, r2
 80021f2:	dc37      	bgt.n	8002264 <_printf_float+0x364>
 80021f4:	f04f 0b00 	mov.w	fp, #0
 80021f8:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80021fc:	f104 021a 	add.w	r2, r4, #26
 8002200:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
 8002204:	ebaa 0309 	sub.w	r3, sl, r9
 8002208:	455b      	cmp	r3, fp
 800220a:	dc33      	bgt.n	8002274 <_printf_float+0x374>
 800220c:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8002210:	429a      	cmp	r2, r3
 8002212:	db3b      	blt.n	800228c <_printf_float+0x38c>
 8002214:	6823      	ldr	r3, [r4, #0]
 8002216:	07da      	lsls	r2, r3, #31
 8002218:	d438      	bmi.n	800228c <_printf_float+0x38c>
 800221a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800221c:	990d      	ldr	r1, [sp, #52]	; 0x34
 800221e:	eba3 020a 	sub.w	r2, r3, sl
 8002222:	eba3 0901 	sub.w	r9, r3, r1
 8002226:	4591      	cmp	r9, r2
 8002228:	bfa8      	it	ge
 800222a:	4691      	movge	r9, r2
 800222c:	f1b9 0f00 	cmp.w	r9, #0
 8002230:	dc34      	bgt.n	800229c <_printf_float+0x39c>
 8002232:	f04f 0800 	mov.w	r8, #0
 8002236:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800223a:	f104 0a1a 	add.w	sl, r4, #26
 800223e:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8002242:	1a9b      	subs	r3, r3, r2
 8002244:	eba3 0309 	sub.w	r3, r3, r9
 8002248:	4543      	cmp	r3, r8
 800224a:	f77f af7a 	ble.w	8002142 <_printf_float+0x242>
 800224e:	2301      	movs	r3, #1
 8002250:	4652      	mov	r2, sl
 8002252:	4631      	mov	r1, r6
 8002254:	4628      	mov	r0, r5
 8002256:	47b8      	blx	r7
 8002258:	3001      	adds	r0, #1
 800225a:	f43f aeac 	beq.w	8001fb6 <_printf_float+0xb6>
 800225e:	f108 0801 	add.w	r8, r8, #1
 8002262:	e7ec      	b.n	800223e <_printf_float+0x33e>
 8002264:	4613      	mov	r3, r2
 8002266:	4631      	mov	r1, r6
 8002268:	4642      	mov	r2, r8
 800226a:	4628      	mov	r0, r5
 800226c:	47b8      	blx	r7
 800226e:	3001      	adds	r0, #1
 8002270:	d1c0      	bne.n	80021f4 <_printf_float+0x2f4>
 8002272:	e6a0      	b.n	8001fb6 <_printf_float+0xb6>
 8002274:	2301      	movs	r3, #1
 8002276:	4631      	mov	r1, r6
 8002278:	4628      	mov	r0, r5
 800227a:	920b      	str	r2, [sp, #44]	; 0x2c
 800227c:	47b8      	blx	r7
 800227e:	3001      	adds	r0, #1
 8002280:	f43f ae99 	beq.w	8001fb6 <_printf_float+0xb6>
 8002284:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8002286:	f10b 0b01 	add.w	fp, fp, #1
 800228a:	e7b9      	b.n	8002200 <_printf_float+0x300>
 800228c:	4631      	mov	r1, r6
 800228e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8002292:	4628      	mov	r0, r5
 8002294:	47b8      	blx	r7
 8002296:	3001      	adds	r0, #1
 8002298:	d1bf      	bne.n	800221a <_printf_float+0x31a>
 800229a:	e68c      	b.n	8001fb6 <_printf_float+0xb6>
 800229c:	464b      	mov	r3, r9
 800229e:	4631      	mov	r1, r6
 80022a0:	4628      	mov	r0, r5
 80022a2:	eb08 020a 	add.w	r2, r8, sl
 80022a6:	47b8      	blx	r7
 80022a8:	3001      	adds	r0, #1
 80022aa:	d1c2      	bne.n	8002232 <_printf_float+0x332>
 80022ac:	e683      	b.n	8001fb6 <_printf_float+0xb6>
 80022ae:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80022b0:	2a01      	cmp	r2, #1
 80022b2:	dc01      	bgt.n	80022b8 <_printf_float+0x3b8>
 80022b4:	07db      	lsls	r3, r3, #31
 80022b6:	d537      	bpl.n	8002328 <_printf_float+0x428>
 80022b8:	2301      	movs	r3, #1
 80022ba:	4642      	mov	r2, r8
 80022bc:	4631      	mov	r1, r6
 80022be:	4628      	mov	r0, r5
 80022c0:	47b8      	blx	r7
 80022c2:	3001      	adds	r0, #1
 80022c4:	f43f ae77 	beq.w	8001fb6 <_printf_float+0xb6>
 80022c8:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80022cc:	4631      	mov	r1, r6
 80022ce:	4628      	mov	r0, r5
 80022d0:	47b8      	blx	r7
 80022d2:	3001      	adds	r0, #1
 80022d4:	f43f ae6f 	beq.w	8001fb6 <_printf_float+0xb6>
 80022d8:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80022dc:	2200      	movs	r2, #0
 80022de:	2300      	movs	r3, #0
 80022e0:	f7fe fb62 	bl	80009a8 <__aeabi_dcmpeq>
 80022e4:	b9d8      	cbnz	r0, 800231e <_printf_float+0x41e>
 80022e6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80022e8:	f108 0201 	add.w	r2, r8, #1
 80022ec:	3b01      	subs	r3, #1
 80022ee:	4631      	mov	r1, r6
 80022f0:	4628      	mov	r0, r5
 80022f2:	47b8      	blx	r7
 80022f4:	3001      	adds	r0, #1
 80022f6:	d10e      	bne.n	8002316 <_printf_float+0x416>
 80022f8:	e65d      	b.n	8001fb6 <_printf_float+0xb6>
 80022fa:	2301      	movs	r3, #1
 80022fc:	464a      	mov	r2, r9
 80022fe:	4631      	mov	r1, r6
 8002300:	4628      	mov	r0, r5
 8002302:	47b8      	blx	r7
 8002304:	3001      	adds	r0, #1
 8002306:	f43f ae56 	beq.w	8001fb6 <_printf_float+0xb6>
 800230a:	f108 0801 	add.w	r8, r8, #1
 800230e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002310:	3b01      	subs	r3, #1
 8002312:	4543      	cmp	r3, r8
 8002314:	dcf1      	bgt.n	80022fa <_printf_float+0x3fa>
 8002316:	4653      	mov	r3, sl
 8002318:	f104 0250 	add.w	r2, r4, #80	; 0x50
 800231c:	e6e0      	b.n	80020e0 <_printf_float+0x1e0>
 800231e:	f04f 0800 	mov.w	r8, #0
 8002322:	f104 091a 	add.w	r9, r4, #26
 8002326:	e7f2      	b.n	800230e <_printf_float+0x40e>
 8002328:	2301      	movs	r3, #1
 800232a:	4642      	mov	r2, r8
 800232c:	e7df      	b.n	80022ee <_printf_float+0x3ee>
 800232e:	2301      	movs	r3, #1
 8002330:	464a      	mov	r2, r9
 8002332:	4631      	mov	r1, r6
 8002334:	4628      	mov	r0, r5
 8002336:	47b8      	blx	r7
 8002338:	3001      	adds	r0, #1
 800233a:	f43f ae3c 	beq.w	8001fb6 <_printf_float+0xb6>
 800233e:	f108 0801 	add.w	r8, r8, #1
 8002342:	68e3      	ldr	r3, [r4, #12]
 8002344:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8002346:	1a5b      	subs	r3, r3, r1
 8002348:	4543      	cmp	r3, r8
 800234a:	dcf0      	bgt.n	800232e <_printf_float+0x42e>
 800234c:	e6fd      	b.n	800214a <_printf_float+0x24a>
 800234e:	f04f 0800 	mov.w	r8, #0
 8002352:	f104 0919 	add.w	r9, r4, #25
 8002356:	e7f4      	b.n	8002342 <_printf_float+0x442>

08002358 <_printf_common>:
 8002358:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800235c:	4616      	mov	r6, r2
 800235e:	4699      	mov	r9, r3
 8002360:	688a      	ldr	r2, [r1, #8]
 8002362:	690b      	ldr	r3, [r1, #16]
 8002364:	4607      	mov	r7, r0
 8002366:	4293      	cmp	r3, r2
 8002368:	bfb8      	it	lt
 800236a:	4613      	movlt	r3, r2
 800236c:	6033      	str	r3, [r6, #0]
 800236e:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8002372:	460c      	mov	r4, r1
 8002374:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8002378:	b10a      	cbz	r2, 800237e <_printf_common+0x26>
 800237a:	3301      	adds	r3, #1
 800237c:	6033      	str	r3, [r6, #0]
 800237e:	6823      	ldr	r3, [r4, #0]
 8002380:	0699      	lsls	r1, r3, #26
 8002382:	bf42      	ittt	mi
 8002384:	6833      	ldrmi	r3, [r6, #0]
 8002386:	3302      	addmi	r3, #2
 8002388:	6033      	strmi	r3, [r6, #0]
 800238a:	6825      	ldr	r5, [r4, #0]
 800238c:	f015 0506 	ands.w	r5, r5, #6
 8002390:	d106      	bne.n	80023a0 <_printf_common+0x48>
 8002392:	f104 0a19 	add.w	sl, r4, #25
 8002396:	68e3      	ldr	r3, [r4, #12]
 8002398:	6832      	ldr	r2, [r6, #0]
 800239a:	1a9b      	subs	r3, r3, r2
 800239c:	42ab      	cmp	r3, r5
 800239e:	dc28      	bgt.n	80023f2 <_printf_common+0x9a>
 80023a0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80023a4:	1e13      	subs	r3, r2, #0
 80023a6:	6822      	ldr	r2, [r4, #0]
 80023a8:	bf18      	it	ne
 80023aa:	2301      	movne	r3, #1
 80023ac:	0692      	lsls	r2, r2, #26
 80023ae:	d42d      	bmi.n	800240c <_printf_common+0xb4>
 80023b0:	4649      	mov	r1, r9
 80023b2:	4638      	mov	r0, r7
 80023b4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80023b8:	47c0      	blx	r8
 80023ba:	3001      	adds	r0, #1
 80023bc:	d020      	beq.n	8002400 <_printf_common+0xa8>
 80023be:	6823      	ldr	r3, [r4, #0]
 80023c0:	68e5      	ldr	r5, [r4, #12]
 80023c2:	f003 0306 	and.w	r3, r3, #6
 80023c6:	2b04      	cmp	r3, #4
 80023c8:	bf18      	it	ne
 80023ca:	2500      	movne	r5, #0
 80023cc:	6832      	ldr	r2, [r6, #0]
 80023ce:	f04f 0600 	mov.w	r6, #0
 80023d2:	68a3      	ldr	r3, [r4, #8]
 80023d4:	bf08      	it	eq
 80023d6:	1aad      	subeq	r5, r5, r2
 80023d8:	6922      	ldr	r2, [r4, #16]
 80023da:	bf08      	it	eq
 80023dc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80023e0:	4293      	cmp	r3, r2
 80023e2:	bfc4      	itt	gt
 80023e4:	1a9b      	subgt	r3, r3, r2
 80023e6:	18ed      	addgt	r5, r5, r3
 80023e8:	341a      	adds	r4, #26
 80023ea:	42b5      	cmp	r5, r6
 80023ec:	d11a      	bne.n	8002424 <_printf_common+0xcc>
 80023ee:	2000      	movs	r0, #0
 80023f0:	e008      	b.n	8002404 <_printf_common+0xac>
 80023f2:	2301      	movs	r3, #1
 80023f4:	4652      	mov	r2, sl
 80023f6:	4649      	mov	r1, r9
 80023f8:	4638      	mov	r0, r7
 80023fa:	47c0      	blx	r8
 80023fc:	3001      	adds	r0, #1
 80023fe:	d103      	bne.n	8002408 <_printf_common+0xb0>
 8002400:	f04f 30ff 	mov.w	r0, #4294967295
 8002404:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002408:	3501      	adds	r5, #1
 800240a:	e7c4      	b.n	8002396 <_printf_common+0x3e>
 800240c:	2030      	movs	r0, #48	; 0x30
 800240e:	18e1      	adds	r1, r4, r3
 8002410:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8002414:	1c5a      	adds	r2, r3, #1
 8002416:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800241a:	4422      	add	r2, r4
 800241c:	3302      	adds	r3, #2
 800241e:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8002422:	e7c5      	b.n	80023b0 <_printf_common+0x58>
 8002424:	2301      	movs	r3, #1
 8002426:	4622      	mov	r2, r4
 8002428:	4649      	mov	r1, r9
 800242a:	4638      	mov	r0, r7
 800242c:	47c0      	blx	r8
 800242e:	3001      	adds	r0, #1
 8002430:	d0e6      	beq.n	8002400 <_printf_common+0xa8>
 8002432:	3601      	adds	r6, #1
 8002434:	e7d9      	b.n	80023ea <_printf_common+0x92>
	...

08002438 <_printf_i>:
 8002438:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800243c:	7e0f      	ldrb	r7, [r1, #24]
 800243e:	4691      	mov	r9, r2
 8002440:	2f78      	cmp	r7, #120	; 0x78
 8002442:	4680      	mov	r8, r0
 8002444:	460c      	mov	r4, r1
 8002446:	469a      	mov	sl, r3
 8002448:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800244a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800244e:	d807      	bhi.n	8002460 <_printf_i+0x28>
 8002450:	2f62      	cmp	r7, #98	; 0x62
 8002452:	d80a      	bhi.n	800246a <_printf_i+0x32>
 8002454:	2f00      	cmp	r7, #0
 8002456:	f000 80d9 	beq.w	800260c <_printf_i+0x1d4>
 800245a:	2f58      	cmp	r7, #88	; 0x58
 800245c:	f000 80a4 	beq.w	80025a8 <_printf_i+0x170>
 8002460:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002464:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8002468:	e03a      	b.n	80024e0 <_printf_i+0xa8>
 800246a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800246e:	2b15      	cmp	r3, #21
 8002470:	d8f6      	bhi.n	8002460 <_printf_i+0x28>
 8002472:	a101      	add	r1, pc, #4	; (adr r1, 8002478 <_printf_i+0x40>)
 8002474:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8002478:	080024d1 	.word	0x080024d1
 800247c:	080024e5 	.word	0x080024e5
 8002480:	08002461 	.word	0x08002461
 8002484:	08002461 	.word	0x08002461
 8002488:	08002461 	.word	0x08002461
 800248c:	08002461 	.word	0x08002461
 8002490:	080024e5 	.word	0x080024e5
 8002494:	08002461 	.word	0x08002461
 8002498:	08002461 	.word	0x08002461
 800249c:	08002461 	.word	0x08002461
 80024a0:	08002461 	.word	0x08002461
 80024a4:	080025f3 	.word	0x080025f3
 80024a8:	08002515 	.word	0x08002515
 80024ac:	080025d5 	.word	0x080025d5
 80024b0:	08002461 	.word	0x08002461
 80024b4:	08002461 	.word	0x08002461
 80024b8:	08002615 	.word	0x08002615
 80024bc:	08002461 	.word	0x08002461
 80024c0:	08002515 	.word	0x08002515
 80024c4:	08002461 	.word	0x08002461
 80024c8:	08002461 	.word	0x08002461
 80024cc:	080025dd 	.word	0x080025dd
 80024d0:	682b      	ldr	r3, [r5, #0]
 80024d2:	1d1a      	adds	r2, r3, #4
 80024d4:	681b      	ldr	r3, [r3, #0]
 80024d6:	602a      	str	r2, [r5, #0]
 80024d8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80024dc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80024e0:	2301      	movs	r3, #1
 80024e2:	e0a4      	b.n	800262e <_printf_i+0x1f6>
 80024e4:	6820      	ldr	r0, [r4, #0]
 80024e6:	6829      	ldr	r1, [r5, #0]
 80024e8:	0606      	lsls	r6, r0, #24
 80024ea:	f101 0304 	add.w	r3, r1, #4
 80024ee:	d50a      	bpl.n	8002506 <_printf_i+0xce>
 80024f0:	680e      	ldr	r6, [r1, #0]
 80024f2:	602b      	str	r3, [r5, #0]
 80024f4:	2e00      	cmp	r6, #0
 80024f6:	da03      	bge.n	8002500 <_printf_i+0xc8>
 80024f8:	232d      	movs	r3, #45	; 0x2d
 80024fa:	4276      	negs	r6, r6
 80024fc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002500:	230a      	movs	r3, #10
 8002502:	485e      	ldr	r0, [pc, #376]	; (800267c <_printf_i+0x244>)
 8002504:	e019      	b.n	800253a <_printf_i+0x102>
 8002506:	680e      	ldr	r6, [r1, #0]
 8002508:	f010 0f40 	tst.w	r0, #64	; 0x40
 800250c:	602b      	str	r3, [r5, #0]
 800250e:	bf18      	it	ne
 8002510:	b236      	sxthne	r6, r6
 8002512:	e7ef      	b.n	80024f4 <_printf_i+0xbc>
 8002514:	682b      	ldr	r3, [r5, #0]
 8002516:	6820      	ldr	r0, [r4, #0]
 8002518:	1d19      	adds	r1, r3, #4
 800251a:	6029      	str	r1, [r5, #0]
 800251c:	0601      	lsls	r1, r0, #24
 800251e:	d501      	bpl.n	8002524 <_printf_i+0xec>
 8002520:	681e      	ldr	r6, [r3, #0]
 8002522:	e002      	b.n	800252a <_printf_i+0xf2>
 8002524:	0646      	lsls	r6, r0, #25
 8002526:	d5fb      	bpl.n	8002520 <_printf_i+0xe8>
 8002528:	881e      	ldrh	r6, [r3, #0]
 800252a:	2f6f      	cmp	r7, #111	; 0x6f
 800252c:	bf0c      	ite	eq
 800252e:	2308      	moveq	r3, #8
 8002530:	230a      	movne	r3, #10
 8002532:	4852      	ldr	r0, [pc, #328]	; (800267c <_printf_i+0x244>)
 8002534:	2100      	movs	r1, #0
 8002536:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800253a:	6865      	ldr	r5, [r4, #4]
 800253c:	2d00      	cmp	r5, #0
 800253e:	bfa8      	it	ge
 8002540:	6821      	ldrge	r1, [r4, #0]
 8002542:	60a5      	str	r5, [r4, #8]
 8002544:	bfa4      	itt	ge
 8002546:	f021 0104 	bicge.w	r1, r1, #4
 800254a:	6021      	strge	r1, [r4, #0]
 800254c:	b90e      	cbnz	r6, 8002552 <_printf_i+0x11a>
 800254e:	2d00      	cmp	r5, #0
 8002550:	d04d      	beq.n	80025ee <_printf_i+0x1b6>
 8002552:	4615      	mov	r5, r2
 8002554:	fbb6 f1f3 	udiv	r1, r6, r3
 8002558:	fb03 6711 	mls	r7, r3, r1, r6
 800255c:	5dc7      	ldrb	r7, [r0, r7]
 800255e:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8002562:	4637      	mov	r7, r6
 8002564:	42bb      	cmp	r3, r7
 8002566:	460e      	mov	r6, r1
 8002568:	d9f4      	bls.n	8002554 <_printf_i+0x11c>
 800256a:	2b08      	cmp	r3, #8
 800256c:	d10b      	bne.n	8002586 <_printf_i+0x14e>
 800256e:	6823      	ldr	r3, [r4, #0]
 8002570:	07de      	lsls	r6, r3, #31
 8002572:	d508      	bpl.n	8002586 <_printf_i+0x14e>
 8002574:	6923      	ldr	r3, [r4, #16]
 8002576:	6861      	ldr	r1, [r4, #4]
 8002578:	4299      	cmp	r1, r3
 800257a:	bfde      	ittt	le
 800257c:	2330      	movle	r3, #48	; 0x30
 800257e:	f805 3c01 	strble.w	r3, [r5, #-1]
 8002582:	f105 35ff 	addle.w	r5, r5, #4294967295
 8002586:	1b52      	subs	r2, r2, r5
 8002588:	6122      	str	r2, [r4, #16]
 800258a:	464b      	mov	r3, r9
 800258c:	4621      	mov	r1, r4
 800258e:	4640      	mov	r0, r8
 8002590:	f8cd a000 	str.w	sl, [sp]
 8002594:	aa03      	add	r2, sp, #12
 8002596:	f7ff fedf 	bl	8002358 <_printf_common>
 800259a:	3001      	adds	r0, #1
 800259c:	d14c      	bne.n	8002638 <_printf_i+0x200>
 800259e:	f04f 30ff 	mov.w	r0, #4294967295
 80025a2:	b004      	add	sp, #16
 80025a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80025a8:	4834      	ldr	r0, [pc, #208]	; (800267c <_printf_i+0x244>)
 80025aa:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 80025ae:	6829      	ldr	r1, [r5, #0]
 80025b0:	6823      	ldr	r3, [r4, #0]
 80025b2:	f851 6b04 	ldr.w	r6, [r1], #4
 80025b6:	6029      	str	r1, [r5, #0]
 80025b8:	061d      	lsls	r5, r3, #24
 80025ba:	d514      	bpl.n	80025e6 <_printf_i+0x1ae>
 80025bc:	07df      	lsls	r7, r3, #31
 80025be:	bf44      	itt	mi
 80025c0:	f043 0320 	orrmi.w	r3, r3, #32
 80025c4:	6023      	strmi	r3, [r4, #0]
 80025c6:	b91e      	cbnz	r6, 80025d0 <_printf_i+0x198>
 80025c8:	6823      	ldr	r3, [r4, #0]
 80025ca:	f023 0320 	bic.w	r3, r3, #32
 80025ce:	6023      	str	r3, [r4, #0]
 80025d0:	2310      	movs	r3, #16
 80025d2:	e7af      	b.n	8002534 <_printf_i+0xfc>
 80025d4:	6823      	ldr	r3, [r4, #0]
 80025d6:	f043 0320 	orr.w	r3, r3, #32
 80025da:	6023      	str	r3, [r4, #0]
 80025dc:	2378      	movs	r3, #120	; 0x78
 80025de:	4828      	ldr	r0, [pc, #160]	; (8002680 <_printf_i+0x248>)
 80025e0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80025e4:	e7e3      	b.n	80025ae <_printf_i+0x176>
 80025e6:	0659      	lsls	r1, r3, #25
 80025e8:	bf48      	it	mi
 80025ea:	b2b6      	uxthmi	r6, r6
 80025ec:	e7e6      	b.n	80025bc <_printf_i+0x184>
 80025ee:	4615      	mov	r5, r2
 80025f0:	e7bb      	b.n	800256a <_printf_i+0x132>
 80025f2:	682b      	ldr	r3, [r5, #0]
 80025f4:	6826      	ldr	r6, [r4, #0]
 80025f6:	1d18      	adds	r0, r3, #4
 80025f8:	6961      	ldr	r1, [r4, #20]
 80025fa:	6028      	str	r0, [r5, #0]
 80025fc:	0635      	lsls	r5, r6, #24
 80025fe:	681b      	ldr	r3, [r3, #0]
 8002600:	d501      	bpl.n	8002606 <_printf_i+0x1ce>
 8002602:	6019      	str	r1, [r3, #0]
 8002604:	e002      	b.n	800260c <_printf_i+0x1d4>
 8002606:	0670      	lsls	r0, r6, #25
 8002608:	d5fb      	bpl.n	8002602 <_printf_i+0x1ca>
 800260a:	8019      	strh	r1, [r3, #0]
 800260c:	2300      	movs	r3, #0
 800260e:	4615      	mov	r5, r2
 8002610:	6123      	str	r3, [r4, #16]
 8002612:	e7ba      	b.n	800258a <_printf_i+0x152>
 8002614:	682b      	ldr	r3, [r5, #0]
 8002616:	2100      	movs	r1, #0
 8002618:	1d1a      	adds	r2, r3, #4
 800261a:	602a      	str	r2, [r5, #0]
 800261c:	681d      	ldr	r5, [r3, #0]
 800261e:	6862      	ldr	r2, [r4, #4]
 8002620:	4628      	mov	r0, r5
 8002622:	f001 fa3f 	bl	8003aa4 <memchr>
 8002626:	b108      	cbz	r0, 800262c <_printf_i+0x1f4>
 8002628:	1b40      	subs	r0, r0, r5
 800262a:	6060      	str	r0, [r4, #4]
 800262c:	6863      	ldr	r3, [r4, #4]
 800262e:	6123      	str	r3, [r4, #16]
 8002630:	2300      	movs	r3, #0
 8002632:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002636:	e7a8      	b.n	800258a <_printf_i+0x152>
 8002638:	462a      	mov	r2, r5
 800263a:	4649      	mov	r1, r9
 800263c:	4640      	mov	r0, r8
 800263e:	6923      	ldr	r3, [r4, #16]
 8002640:	47d0      	blx	sl
 8002642:	3001      	adds	r0, #1
 8002644:	d0ab      	beq.n	800259e <_printf_i+0x166>
 8002646:	6823      	ldr	r3, [r4, #0]
 8002648:	079b      	lsls	r3, r3, #30
 800264a:	d413      	bmi.n	8002674 <_printf_i+0x23c>
 800264c:	68e0      	ldr	r0, [r4, #12]
 800264e:	9b03      	ldr	r3, [sp, #12]
 8002650:	4298      	cmp	r0, r3
 8002652:	bfb8      	it	lt
 8002654:	4618      	movlt	r0, r3
 8002656:	e7a4      	b.n	80025a2 <_printf_i+0x16a>
 8002658:	2301      	movs	r3, #1
 800265a:	4632      	mov	r2, r6
 800265c:	4649      	mov	r1, r9
 800265e:	4640      	mov	r0, r8
 8002660:	47d0      	blx	sl
 8002662:	3001      	adds	r0, #1
 8002664:	d09b      	beq.n	800259e <_printf_i+0x166>
 8002666:	3501      	adds	r5, #1
 8002668:	68e3      	ldr	r3, [r4, #12]
 800266a:	9903      	ldr	r1, [sp, #12]
 800266c:	1a5b      	subs	r3, r3, r1
 800266e:	42ab      	cmp	r3, r5
 8002670:	dcf2      	bgt.n	8002658 <_printf_i+0x220>
 8002672:	e7eb      	b.n	800264c <_printf_i+0x214>
 8002674:	2500      	movs	r5, #0
 8002676:	f104 0619 	add.w	r6, r4, #25
 800267a:	e7f5      	b.n	8002668 <_printf_i+0x230>
 800267c:	08004d5a 	.word	0x08004d5a
 8002680:	08004d6b 	.word	0x08004d6b

08002684 <_puts_r>:
 8002684:	b570      	push	{r4, r5, r6, lr}
 8002686:	460e      	mov	r6, r1
 8002688:	4605      	mov	r5, r0
 800268a:	b118      	cbz	r0, 8002694 <_puts_r+0x10>
 800268c:	6983      	ldr	r3, [r0, #24]
 800268e:	b90b      	cbnz	r3, 8002694 <_puts_r+0x10>
 8002690:	f001 f8f6 	bl	8003880 <__sinit>
 8002694:	69ab      	ldr	r3, [r5, #24]
 8002696:	68ac      	ldr	r4, [r5, #8]
 8002698:	b913      	cbnz	r3, 80026a0 <_puts_r+0x1c>
 800269a:	4628      	mov	r0, r5
 800269c:	f001 f8f0 	bl	8003880 <__sinit>
 80026a0:	4b2c      	ldr	r3, [pc, #176]	; (8002754 <_puts_r+0xd0>)
 80026a2:	429c      	cmp	r4, r3
 80026a4:	d120      	bne.n	80026e8 <_puts_r+0x64>
 80026a6:	686c      	ldr	r4, [r5, #4]
 80026a8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80026aa:	07db      	lsls	r3, r3, #31
 80026ac:	d405      	bmi.n	80026ba <_puts_r+0x36>
 80026ae:	89a3      	ldrh	r3, [r4, #12]
 80026b0:	0598      	lsls	r0, r3, #22
 80026b2:	d402      	bmi.n	80026ba <_puts_r+0x36>
 80026b4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80026b6:	f001 f986 	bl	80039c6 <__retarget_lock_acquire_recursive>
 80026ba:	89a3      	ldrh	r3, [r4, #12]
 80026bc:	0719      	lsls	r1, r3, #28
 80026be:	d51d      	bpl.n	80026fc <_puts_r+0x78>
 80026c0:	6923      	ldr	r3, [r4, #16]
 80026c2:	b1db      	cbz	r3, 80026fc <_puts_r+0x78>
 80026c4:	3e01      	subs	r6, #1
 80026c6:	68a3      	ldr	r3, [r4, #8]
 80026c8:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80026cc:	3b01      	subs	r3, #1
 80026ce:	60a3      	str	r3, [r4, #8]
 80026d0:	bb39      	cbnz	r1, 8002722 <_puts_r+0x9e>
 80026d2:	2b00      	cmp	r3, #0
 80026d4:	da38      	bge.n	8002748 <_puts_r+0xc4>
 80026d6:	4622      	mov	r2, r4
 80026d8:	210a      	movs	r1, #10
 80026da:	4628      	mov	r0, r5
 80026dc:	f000 f880 	bl	80027e0 <__swbuf_r>
 80026e0:	3001      	adds	r0, #1
 80026e2:	d011      	beq.n	8002708 <_puts_r+0x84>
 80026e4:	250a      	movs	r5, #10
 80026e6:	e011      	b.n	800270c <_puts_r+0x88>
 80026e8:	4b1b      	ldr	r3, [pc, #108]	; (8002758 <_puts_r+0xd4>)
 80026ea:	429c      	cmp	r4, r3
 80026ec:	d101      	bne.n	80026f2 <_puts_r+0x6e>
 80026ee:	68ac      	ldr	r4, [r5, #8]
 80026f0:	e7da      	b.n	80026a8 <_puts_r+0x24>
 80026f2:	4b1a      	ldr	r3, [pc, #104]	; (800275c <_puts_r+0xd8>)
 80026f4:	429c      	cmp	r4, r3
 80026f6:	bf08      	it	eq
 80026f8:	68ec      	ldreq	r4, [r5, #12]
 80026fa:	e7d5      	b.n	80026a8 <_puts_r+0x24>
 80026fc:	4621      	mov	r1, r4
 80026fe:	4628      	mov	r0, r5
 8002700:	f000 f8c0 	bl	8002884 <__swsetup_r>
 8002704:	2800      	cmp	r0, #0
 8002706:	d0dd      	beq.n	80026c4 <_puts_r+0x40>
 8002708:	f04f 35ff 	mov.w	r5, #4294967295
 800270c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800270e:	07da      	lsls	r2, r3, #31
 8002710:	d405      	bmi.n	800271e <_puts_r+0x9a>
 8002712:	89a3      	ldrh	r3, [r4, #12]
 8002714:	059b      	lsls	r3, r3, #22
 8002716:	d402      	bmi.n	800271e <_puts_r+0x9a>
 8002718:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800271a:	f001 f955 	bl	80039c8 <__retarget_lock_release_recursive>
 800271e:	4628      	mov	r0, r5
 8002720:	bd70      	pop	{r4, r5, r6, pc}
 8002722:	2b00      	cmp	r3, #0
 8002724:	da04      	bge.n	8002730 <_puts_r+0xac>
 8002726:	69a2      	ldr	r2, [r4, #24]
 8002728:	429a      	cmp	r2, r3
 800272a:	dc06      	bgt.n	800273a <_puts_r+0xb6>
 800272c:	290a      	cmp	r1, #10
 800272e:	d004      	beq.n	800273a <_puts_r+0xb6>
 8002730:	6823      	ldr	r3, [r4, #0]
 8002732:	1c5a      	adds	r2, r3, #1
 8002734:	6022      	str	r2, [r4, #0]
 8002736:	7019      	strb	r1, [r3, #0]
 8002738:	e7c5      	b.n	80026c6 <_puts_r+0x42>
 800273a:	4622      	mov	r2, r4
 800273c:	4628      	mov	r0, r5
 800273e:	f000 f84f 	bl	80027e0 <__swbuf_r>
 8002742:	3001      	adds	r0, #1
 8002744:	d1bf      	bne.n	80026c6 <_puts_r+0x42>
 8002746:	e7df      	b.n	8002708 <_puts_r+0x84>
 8002748:	250a      	movs	r5, #10
 800274a:	6823      	ldr	r3, [r4, #0]
 800274c:	1c5a      	adds	r2, r3, #1
 800274e:	6022      	str	r2, [r4, #0]
 8002750:	701d      	strb	r5, [r3, #0]
 8002752:	e7db      	b.n	800270c <_puts_r+0x88>
 8002754:	08004e2c 	.word	0x08004e2c
 8002758:	08004e4c 	.word	0x08004e4c
 800275c:	08004e0c 	.word	0x08004e0c

08002760 <puts>:
 8002760:	4b02      	ldr	r3, [pc, #8]	; (800276c <puts+0xc>)
 8002762:	4601      	mov	r1, r0
 8002764:	6818      	ldr	r0, [r3, #0]
 8002766:	f7ff bf8d 	b.w	8002684 <_puts_r>
 800276a:	bf00      	nop
 800276c:	2000000c 	.word	0x2000000c

08002770 <siprintf>:
 8002770:	b40e      	push	{r1, r2, r3}
 8002772:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8002776:	b500      	push	{lr}
 8002778:	b09c      	sub	sp, #112	; 0x70
 800277a:	ab1d      	add	r3, sp, #116	; 0x74
 800277c:	9002      	str	r0, [sp, #8]
 800277e:	9006      	str	r0, [sp, #24]
 8002780:	9107      	str	r1, [sp, #28]
 8002782:	9104      	str	r1, [sp, #16]
 8002784:	4808      	ldr	r0, [pc, #32]	; (80027a8 <siprintf+0x38>)
 8002786:	4909      	ldr	r1, [pc, #36]	; (80027ac <siprintf+0x3c>)
 8002788:	f853 2b04 	ldr.w	r2, [r3], #4
 800278c:	9105      	str	r1, [sp, #20]
 800278e:	6800      	ldr	r0, [r0, #0]
 8002790:	a902      	add	r1, sp, #8
 8002792:	9301      	str	r3, [sp, #4]
 8002794:	f001 fe70 	bl	8004478 <_svfiprintf_r>
 8002798:	2200      	movs	r2, #0
 800279a:	9b02      	ldr	r3, [sp, #8]
 800279c:	701a      	strb	r2, [r3, #0]
 800279e:	b01c      	add	sp, #112	; 0x70
 80027a0:	f85d eb04 	ldr.w	lr, [sp], #4
 80027a4:	b003      	add	sp, #12
 80027a6:	4770      	bx	lr
 80027a8:	2000000c 	.word	0x2000000c
 80027ac:	ffff0208 	.word	0xffff0208

080027b0 <strcat>:
 80027b0:	4602      	mov	r2, r0
 80027b2:	b510      	push	{r4, lr}
 80027b4:	7814      	ldrb	r4, [r2, #0]
 80027b6:	4613      	mov	r3, r2
 80027b8:	3201      	adds	r2, #1
 80027ba:	2c00      	cmp	r4, #0
 80027bc:	d1fa      	bne.n	80027b4 <strcat+0x4>
 80027be:	3b01      	subs	r3, #1
 80027c0:	f811 2b01 	ldrb.w	r2, [r1], #1
 80027c4:	f803 2f01 	strb.w	r2, [r3, #1]!
 80027c8:	2a00      	cmp	r2, #0
 80027ca:	d1f9      	bne.n	80027c0 <strcat+0x10>
 80027cc:	bd10      	pop	{r4, pc}

080027ce <strcpy>:
 80027ce:	4603      	mov	r3, r0
 80027d0:	f811 2b01 	ldrb.w	r2, [r1], #1
 80027d4:	f803 2b01 	strb.w	r2, [r3], #1
 80027d8:	2a00      	cmp	r2, #0
 80027da:	d1f9      	bne.n	80027d0 <strcpy+0x2>
 80027dc:	4770      	bx	lr
	...

080027e0 <__swbuf_r>:
 80027e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80027e2:	460e      	mov	r6, r1
 80027e4:	4614      	mov	r4, r2
 80027e6:	4605      	mov	r5, r0
 80027e8:	b118      	cbz	r0, 80027f2 <__swbuf_r+0x12>
 80027ea:	6983      	ldr	r3, [r0, #24]
 80027ec:	b90b      	cbnz	r3, 80027f2 <__swbuf_r+0x12>
 80027ee:	f001 f847 	bl	8003880 <__sinit>
 80027f2:	4b21      	ldr	r3, [pc, #132]	; (8002878 <__swbuf_r+0x98>)
 80027f4:	429c      	cmp	r4, r3
 80027f6:	d12b      	bne.n	8002850 <__swbuf_r+0x70>
 80027f8:	686c      	ldr	r4, [r5, #4]
 80027fa:	69a3      	ldr	r3, [r4, #24]
 80027fc:	60a3      	str	r3, [r4, #8]
 80027fe:	89a3      	ldrh	r3, [r4, #12]
 8002800:	071a      	lsls	r2, r3, #28
 8002802:	d52f      	bpl.n	8002864 <__swbuf_r+0x84>
 8002804:	6923      	ldr	r3, [r4, #16]
 8002806:	b36b      	cbz	r3, 8002864 <__swbuf_r+0x84>
 8002808:	6923      	ldr	r3, [r4, #16]
 800280a:	6820      	ldr	r0, [r4, #0]
 800280c:	b2f6      	uxtb	r6, r6
 800280e:	1ac0      	subs	r0, r0, r3
 8002810:	6963      	ldr	r3, [r4, #20]
 8002812:	4637      	mov	r7, r6
 8002814:	4283      	cmp	r3, r0
 8002816:	dc04      	bgt.n	8002822 <__swbuf_r+0x42>
 8002818:	4621      	mov	r1, r4
 800281a:	4628      	mov	r0, r5
 800281c:	f000 ff9c 	bl	8003758 <_fflush_r>
 8002820:	bb30      	cbnz	r0, 8002870 <__swbuf_r+0x90>
 8002822:	68a3      	ldr	r3, [r4, #8]
 8002824:	3001      	adds	r0, #1
 8002826:	3b01      	subs	r3, #1
 8002828:	60a3      	str	r3, [r4, #8]
 800282a:	6823      	ldr	r3, [r4, #0]
 800282c:	1c5a      	adds	r2, r3, #1
 800282e:	6022      	str	r2, [r4, #0]
 8002830:	701e      	strb	r6, [r3, #0]
 8002832:	6963      	ldr	r3, [r4, #20]
 8002834:	4283      	cmp	r3, r0
 8002836:	d004      	beq.n	8002842 <__swbuf_r+0x62>
 8002838:	89a3      	ldrh	r3, [r4, #12]
 800283a:	07db      	lsls	r3, r3, #31
 800283c:	d506      	bpl.n	800284c <__swbuf_r+0x6c>
 800283e:	2e0a      	cmp	r6, #10
 8002840:	d104      	bne.n	800284c <__swbuf_r+0x6c>
 8002842:	4621      	mov	r1, r4
 8002844:	4628      	mov	r0, r5
 8002846:	f000 ff87 	bl	8003758 <_fflush_r>
 800284a:	b988      	cbnz	r0, 8002870 <__swbuf_r+0x90>
 800284c:	4638      	mov	r0, r7
 800284e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002850:	4b0a      	ldr	r3, [pc, #40]	; (800287c <__swbuf_r+0x9c>)
 8002852:	429c      	cmp	r4, r3
 8002854:	d101      	bne.n	800285a <__swbuf_r+0x7a>
 8002856:	68ac      	ldr	r4, [r5, #8]
 8002858:	e7cf      	b.n	80027fa <__swbuf_r+0x1a>
 800285a:	4b09      	ldr	r3, [pc, #36]	; (8002880 <__swbuf_r+0xa0>)
 800285c:	429c      	cmp	r4, r3
 800285e:	bf08      	it	eq
 8002860:	68ec      	ldreq	r4, [r5, #12]
 8002862:	e7ca      	b.n	80027fa <__swbuf_r+0x1a>
 8002864:	4621      	mov	r1, r4
 8002866:	4628      	mov	r0, r5
 8002868:	f000 f80c 	bl	8002884 <__swsetup_r>
 800286c:	2800      	cmp	r0, #0
 800286e:	d0cb      	beq.n	8002808 <__swbuf_r+0x28>
 8002870:	f04f 37ff 	mov.w	r7, #4294967295
 8002874:	e7ea      	b.n	800284c <__swbuf_r+0x6c>
 8002876:	bf00      	nop
 8002878:	08004e2c 	.word	0x08004e2c
 800287c:	08004e4c 	.word	0x08004e4c
 8002880:	08004e0c 	.word	0x08004e0c

08002884 <__swsetup_r>:
 8002884:	4b32      	ldr	r3, [pc, #200]	; (8002950 <__swsetup_r+0xcc>)
 8002886:	b570      	push	{r4, r5, r6, lr}
 8002888:	681d      	ldr	r5, [r3, #0]
 800288a:	4606      	mov	r6, r0
 800288c:	460c      	mov	r4, r1
 800288e:	b125      	cbz	r5, 800289a <__swsetup_r+0x16>
 8002890:	69ab      	ldr	r3, [r5, #24]
 8002892:	b913      	cbnz	r3, 800289a <__swsetup_r+0x16>
 8002894:	4628      	mov	r0, r5
 8002896:	f000 fff3 	bl	8003880 <__sinit>
 800289a:	4b2e      	ldr	r3, [pc, #184]	; (8002954 <__swsetup_r+0xd0>)
 800289c:	429c      	cmp	r4, r3
 800289e:	d10f      	bne.n	80028c0 <__swsetup_r+0x3c>
 80028a0:	686c      	ldr	r4, [r5, #4]
 80028a2:	89a3      	ldrh	r3, [r4, #12]
 80028a4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80028a8:	0719      	lsls	r1, r3, #28
 80028aa:	d42c      	bmi.n	8002906 <__swsetup_r+0x82>
 80028ac:	06dd      	lsls	r5, r3, #27
 80028ae:	d411      	bmi.n	80028d4 <__swsetup_r+0x50>
 80028b0:	2309      	movs	r3, #9
 80028b2:	6033      	str	r3, [r6, #0]
 80028b4:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80028b8:	f04f 30ff 	mov.w	r0, #4294967295
 80028bc:	81a3      	strh	r3, [r4, #12]
 80028be:	e03e      	b.n	800293e <__swsetup_r+0xba>
 80028c0:	4b25      	ldr	r3, [pc, #148]	; (8002958 <__swsetup_r+0xd4>)
 80028c2:	429c      	cmp	r4, r3
 80028c4:	d101      	bne.n	80028ca <__swsetup_r+0x46>
 80028c6:	68ac      	ldr	r4, [r5, #8]
 80028c8:	e7eb      	b.n	80028a2 <__swsetup_r+0x1e>
 80028ca:	4b24      	ldr	r3, [pc, #144]	; (800295c <__swsetup_r+0xd8>)
 80028cc:	429c      	cmp	r4, r3
 80028ce:	bf08      	it	eq
 80028d0:	68ec      	ldreq	r4, [r5, #12]
 80028d2:	e7e6      	b.n	80028a2 <__swsetup_r+0x1e>
 80028d4:	0758      	lsls	r0, r3, #29
 80028d6:	d512      	bpl.n	80028fe <__swsetup_r+0x7a>
 80028d8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80028da:	b141      	cbz	r1, 80028ee <__swsetup_r+0x6a>
 80028dc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80028e0:	4299      	cmp	r1, r3
 80028e2:	d002      	beq.n	80028ea <__swsetup_r+0x66>
 80028e4:	4630      	mov	r0, r6
 80028e6:	f001 fc8f 	bl	8004208 <_free_r>
 80028ea:	2300      	movs	r3, #0
 80028ec:	6363      	str	r3, [r4, #52]	; 0x34
 80028ee:	89a3      	ldrh	r3, [r4, #12]
 80028f0:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80028f4:	81a3      	strh	r3, [r4, #12]
 80028f6:	2300      	movs	r3, #0
 80028f8:	6063      	str	r3, [r4, #4]
 80028fa:	6923      	ldr	r3, [r4, #16]
 80028fc:	6023      	str	r3, [r4, #0]
 80028fe:	89a3      	ldrh	r3, [r4, #12]
 8002900:	f043 0308 	orr.w	r3, r3, #8
 8002904:	81a3      	strh	r3, [r4, #12]
 8002906:	6923      	ldr	r3, [r4, #16]
 8002908:	b94b      	cbnz	r3, 800291e <__swsetup_r+0x9a>
 800290a:	89a3      	ldrh	r3, [r4, #12]
 800290c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8002910:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8002914:	d003      	beq.n	800291e <__swsetup_r+0x9a>
 8002916:	4621      	mov	r1, r4
 8002918:	4630      	mov	r0, r6
 800291a:	f001 f87b 	bl	8003a14 <__smakebuf_r>
 800291e:	89a0      	ldrh	r0, [r4, #12]
 8002920:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002924:	f010 0301 	ands.w	r3, r0, #1
 8002928:	d00a      	beq.n	8002940 <__swsetup_r+0xbc>
 800292a:	2300      	movs	r3, #0
 800292c:	60a3      	str	r3, [r4, #8]
 800292e:	6963      	ldr	r3, [r4, #20]
 8002930:	425b      	negs	r3, r3
 8002932:	61a3      	str	r3, [r4, #24]
 8002934:	6923      	ldr	r3, [r4, #16]
 8002936:	b943      	cbnz	r3, 800294a <__swsetup_r+0xc6>
 8002938:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800293c:	d1ba      	bne.n	80028b4 <__swsetup_r+0x30>
 800293e:	bd70      	pop	{r4, r5, r6, pc}
 8002940:	0781      	lsls	r1, r0, #30
 8002942:	bf58      	it	pl
 8002944:	6963      	ldrpl	r3, [r4, #20]
 8002946:	60a3      	str	r3, [r4, #8]
 8002948:	e7f4      	b.n	8002934 <__swsetup_r+0xb0>
 800294a:	2000      	movs	r0, #0
 800294c:	e7f7      	b.n	800293e <__swsetup_r+0xba>
 800294e:	bf00      	nop
 8002950:	2000000c 	.word	0x2000000c
 8002954:	08004e2c 	.word	0x08004e2c
 8002958:	08004e4c 	.word	0x08004e4c
 800295c:	08004e0c 	.word	0x08004e0c

08002960 <quorem>:
 8002960:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002964:	6903      	ldr	r3, [r0, #16]
 8002966:	690c      	ldr	r4, [r1, #16]
 8002968:	4607      	mov	r7, r0
 800296a:	42a3      	cmp	r3, r4
 800296c:	f2c0 8082 	blt.w	8002a74 <quorem+0x114>
 8002970:	3c01      	subs	r4, #1
 8002972:	f100 0514 	add.w	r5, r0, #20
 8002976:	f101 0814 	add.w	r8, r1, #20
 800297a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800297e:	9301      	str	r3, [sp, #4]
 8002980:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8002984:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002988:	3301      	adds	r3, #1
 800298a:	429a      	cmp	r2, r3
 800298c:	fbb2 f6f3 	udiv	r6, r2, r3
 8002990:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8002994:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8002998:	d331      	bcc.n	80029fe <quorem+0x9e>
 800299a:	f04f 0e00 	mov.w	lr, #0
 800299e:	4640      	mov	r0, r8
 80029a0:	46ac      	mov	ip, r5
 80029a2:	46f2      	mov	sl, lr
 80029a4:	f850 2b04 	ldr.w	r2, [r0], #4
 80029a8:	b293      	uxth	r3, r2
 80029aa:	fb06 e303 	mla	r3, r6, r3, lr
 80029ae:	0c12      	lsrs	r2, r2, #16
 80029b0:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 80029b4:	b29b      	uxth	r3, r3
 80029b6:	fb06 e202 	mla	r2, r6, r2, lr
 80029ba:	ebaa 0303 	sub.w	r3, sl, r3
 80029be:	f8dc a000 	ldr.w	sl, [ip]
 80029c2:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 80029c6:	fa1f fa8a 	uxth.w	sl, sl
 80029ca:	4453      	add	r3, sl
 80029cc:	f8dc a000 	ldr.w	sl, [ip]
 80029d0:	b292      	uxth	r2, r2
 80029d2:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 80029d6:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80029da:	b29b      	uxth	r3, r3
 80029dc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80029e0:	4581      	cmp	r9, r0
 80029e2:	ea4f 4a22 	mov.w	sl, r2, asr #16
 80029e6:	f84c 3b04 	str.w	r3, [ip], #4
 80029ea:	d2db      	bcs.n	80029a4 <quorem+0x44>
 80029ec:	f855 300b 	ldr.w	r3, [r5, fp]
 80029f0:	b92b      	cbnz	r3, 80029fe <quorem+0x9e>
 80029f2:	9b01      	ldr	r3, [sp, #4]
 80029f4:	3b04      	subs	r3, #4
 80029f6:	429d      	cmp	r5, r3
 80029f8:	461a      	mov	r2, r3
 80029fa:	d32f      	bcc.n	8002a5c <quorem+0xfc>
 80029fc:	613c      	str	r4, [r7, #16]
 80029fe:	4638      	mov	r0, r7
 8002a00:	f001 faea 	bl	8003fd8 <__mcmp>
 8002a04:	2800      	cmp	r0, #0
 8002a06:	db25      	blt.n	8002a54 <quorem+0xf4>
 8002a08:	4628      	mov	r0, r5
 8002a0a:	f04f 0c00 	mov.w	ip, #0
 8002a0e:	3601      	adds	r6, #1
 8002a10:	f858 1b04 	ldr.w	r1, [r8], #4
 8002a14:	f8d0 e000 	ldr.w	lr, [r0]
 8002a18:	b28b      	uxth	r3, r1
 8002a1a:	ebac 0303 	sub.w	r3, ip, r3
 8002a1e:	fa1f f28e 	uxth.w	r2, lr
 8002a22:	4413      	add	r3, r2
 8002a24:	0c0a      	lsrs	r2, r1, #16
 8002a26:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 8002a2a:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8002a2e:	b29b      	uxth	r3, r3
 8002a30:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002a34:	45c1      	cmp	r9, r8
 8002a36:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8002a3a:	f840 3b04 	str.w	r3, [r0], #4
 8002a3e:	d2e7      	bcs.n	8002a10 <quorem+0xb0>
 8002a40:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002a44:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002a48:	b922      	cbnz	r2, 8002a54 <quorem+0xf4>
 8002a4a:	3b04      	subs	r3, #4
 8002a4c:	429d      	cmp	r5, r3
 8002a4e:	461a      	mov	r2, r3
 8002a50:	d30a      	bcc.n	8002a68 <quorem+0x108>
 8002a52:	613c      	str	r4, [r7, #16]
 8002a54:	4630      	mov	r0, r6
 8002a56:	b003      	add	sp, #12
 8002a58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002a5c:	6812      	ldr	r2, [r2, #0]
 8002a5e:	3b04      	subs	r3, #4
 8002a60:	2a00      	cmp	r2, #0
 8002a62:	d1cb      	bne.n	80029fc <quorem+0x9c>
 8002a64:	3c01      	subs	r4, #1
 8002a66:	e7c6      	b.n	80029f6 <quorem+0x96>
 8002a68:	6812      	ldr	r2, [r2, #0]
 8002a6a:	3b04      	subs	r3, #4
 8002a6c:	2a00      	cmp	r2, #0
 8002a6e:	d1f0      	bne.n	8002a52 <quorem+0xf2>
 8002a70:	3c01      	subs	r4, #1
 8002a72:	e7eb      	b.n	8002a4c <quorem+0xec>
 8002a74:	2000      	movs	r0, #0
 8002a76:	e7ee      	b.n	8002a56 <quorem+0xf6>

08002a78 <_dtoa_r>:
 8002a78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002a7c:	4616      	mov	r6, r2
 8002a7e:	461f      	mov	r7, r3
 8002a80:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8002a82:	b099      	sub	sp, #100	; 0x64
 8002a84:	4605      	mov	r5, r0
 8002a86:	e9cd 6704 	strd	r6, r7, [sp, #16]
 8002a8a:	f8dd 8094 	ldr.w	r8, [sp, #148]	; 0x94
 8002a8e:	b974      	cbnz	r4, 8002aae <_dtoa_r+0x36>
 8002a90:	2010      	movs	r0, #16
 8002a92:	f000 ffff 	bl	8003a94 <malloc>
 8002a96:	4602      	mov	r2, r0
 8002a98:	6268      	str	r0, [r5, #36]	; 0x24
 8002a9a:	b920      	cbnz	r0, 8002aa6 <_dtoa_r+0x2e>
 8002a9c:	21ea      	movs	r1, #234	; 0xea
 8002a9e:	4ba8      	ldr	r3, [pc, #672]	; (8002d40 <_dtoa_r+0x2c8>)
 8002aa0:	48a8      	ldr	r0, [pc, #672]	; (8002d44 <_dtoa_r+0x2cc>)
 8002aa2:	f001 fe4f 	bl	8004744 <__assert_func>
 8002aa6:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8002aaa:	6004      	str	r4, [r0, #0]
 8002aac:	60c4      	str	r4, [r0, #12]
 8002aae:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8002ab0:	6819      	ldr	r1, [r3, #0]
 8002ab2:	b151      	cbz	r1, 8002aca <_dtoa_r+0x52>
 8002ab4:	685a      	ldr	r2, [r3, #4]
 8002ab6:	2301      	movs	r3, #1
 8002ab8:	4093      	lsls	r3, r2
 8002aba:	604a      	str	r2, [r1, #4]
 8002abc:	608b      	str	r3, [r1, #8]
 8002abe:	4628      	mov	r0, r5
 8002ac0:	f001 f84c 	bl	8003b5c <_Bfree>
 8002ac4:	2200      	movs	r2, #0
 8002ac6:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8002ac8:	601a      	str	r2, [r3, #0]
 8002aca:	1e3b      	subs	r3, r7, #0
 8002acc:	bfaf      	iteee	ge
 8002ace:	2300      	movge	r3, #0
 8002ad0:	2201      	movlt	r2, #1
 8002ad2:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8002ad6:	9305      	strlt	r3, [sp, #20]
 8002ad8:	bfa8      	it	ge
 8002ada:	f8c8 3000 	strge.w	r3, [r8]
 8002ade:	f8dd 9014 	ldr.w	r9, [sp, #20]
 8002ae2:	4b99      	ldr	r3, [pc, #612]	; (8002d48 <_dtoa_r+0x2d0>)
 8002ae4:	bfb8      	it	lt
 8002ae6:	f8c8 2000 	strlt.w	r2, [r8]
 8002aea:	ea33 0309 	bics.w	r3, r3, r9
 8002aee:	d119      	bne.n	8002b24 <_dtoa_r+0xac>
 8002af0:	f242 730f 	movw	r3, #9999	; 0x270f
 8002af4:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8002af6:	6013      	str	r3, [r2, #0]
 8002af8:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8002afc:	4333      	orrs	r3, r6
 8002afe:	f000 857f 	beq.w	8003600 <_dtoa_r+0xb88>
 8002b02:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8002b04:	b953      	cbnz	r3, 8002b1c <_dtoa_r+0xa4>
 8002b06:	4b91      	ldr	r3, [pc, #580]	; (8002d4c <_dtoa_r+0x2d4>)
 8002b08:	e022      	b.n	8002b50 <_dtoa_r+0xd8>
 8002b0a:	4b91      	ldr	r3, [pc, #580]	; (8002d50 <_dtoa_r+0x2d8>)
 8002b0c:	9303      	str	r3, [sp, #12]
 8002b0e:	3308      	adds	r3, #8
 8002b10:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8002b12:	6013      	str	r3, [r2, #0]
 8002b14:	9803      	ldr	r0, [sp, #12]
 8002b16:	b019      	add	sp, #100	; 0x64
 8002b18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002b1c:	4b8b      	ldr	r3, [pc, #556]	; (8002d4c <_dtoa_r+0x2d4>)
 8002b1e:	9303      	str	r3, [sp, #12]
 8002b20:	3303      	adds	r3, #3
 8002b22:	e7f5      	b.n	8002b10 <_dtoa_r+0x98>
 8002b24:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 8002b28:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 8002b2c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8002b30:	2200      	movs	r2, #0
 8002b32:	2300      	movs	r3, #0
 8002b34:	f7fd ff38 	bl	80009a8 <__aeabi_dcmpeq>
 8002b38:	4680      	mov	r8, r0
 8002b3a:	b158      	cbz	r0, 8002b54 <_dtoa_r+0xdc>
 8002b3c:	2301      	movs	r3, #1
 8002b3e:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8002b40:	6013      	str	r3, [r2, #0]
 8002b42:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8002b44:	2b00      	cmp	r3, #0
 8002b46:	f000 8558 	beq.w	80035fa <_dtoa_r+0xb82>
 8002b4a:	4882      	ldr	r0, [pc, #520]	; (8002d54 <_dtoa_r+0x2dc>)
 8002b4c:	6018      	str	r0, [r3, #0]
 8002b4e:	1e43      	subs	r3, r0, #1
 8002b50:	9303      	str	r3, [sp, #12]
 8002b52:	e7df      	b.n	8002b14 <_dtoa_r+0x9c>
 8002b54:	ab16      	add	r3, sp, #88	; 0x58
 8002b56:	9301      	str	r3, [sp, #4]
 8002b58:	ab17      	add	r3, sp, #92	; 0x5c
 8002b5a:	9300      	str	r3, [sp, #0]
 8002b5c:	4628      	mov	r0, r5
 8002b5e:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8002b62:	f001 fae1 	bl	8004128 <__d2b>
 8002b66:	f3c9 540a 	ubfx	r4, r9, #20, #11
 8002b6a:	4683      	mov	fp, r0
 8002b6c:	2c00      	cmp	r4, #0
 8002b6e:	d07f      	beq.n	8002c70 <_dtoa_r+0x1f8>
 8002b70:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8002b74:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002b76:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
 8002b7a:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002b7e:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
 8002b82:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 8002b86:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
 8002b8a:	2200      	movs	r2, #0
 8002b8c:	4b72      	ldr	r3, [pc, #456]	; (8002d58 <_dtoa_r+0x2e0>)
 8002b8e:	f7fd faeb 	bl	8000168 <__aeabi_dsub>
 8002b92:	a365      	add	r3, pc, #404	; (adr r3, 8002d28 <_dtoa_r+0x2b0>)
 8002b94:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002b98:	f7fd fc9e 	bl	80004d8 <__aeabi_dmul>
 8002b9c:	a364      	add	r3, pc, #400	; (adr r3, 8002d30 <_dtoa_r+0x2b8>)
 8002b9e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002ba2:	f7fd fae3 	bl	800016c <__adddf3>
 8002ba6:	4606      	mov	r6, r0
 8002ba8:	4620      	mov	r0, r4
 8002baa:	460f      	mov	r7, r1
 8002bac:	f7fd fc2a 	bl	8000404 <__aeabi_i2d>
 8002bb0:	a361      	add	r3, pc, #388	; (adr r3, 8002d38 <_dtoa_r+0x2c0>)
 8002bb2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002bb6:	f7fd fc8f 	bl	80004d8 <__aeabi_dmul>
 8002bba:	4602      	mov	r2, r0
 8002bbc:	460b      	mov	r3, r1
 8002bbe:	4630      	mov	r0, r6
 8002bc0:	4639      	mov	r1, r7
 8002bc2:	f7fd fad3 	bl	800016c <__adddf3>
 8002bc6:	4606      	mov	r6, r0
 8002bc8:	460f      	mov	r7, r1
 8002bca:	f7fd ff35 	bl	8000a38 <__aeabi_d2iz>
 8002bce:	2200      	movs	r2, #0
 8002bd0:	4682      	mov	sl, r0
 8002bd2:	2300      	movs	r3, #0
 8002bd4:	4630      	mov	r0, r6
 8002bd6:	4639      	mov	r1, r7
 8002bd8:	f7fd fef0 	bl	80009bc <__aeabi_dcmplt>
 8002bdc:	b148      	cbz	r0, 8002bf2 <_dtoa_r+0x17a>
 8002bde:	4650      	mov	r0, sl
 8002be0:	f7fd fc10 	bl	8000404 <__aeabi_i2d>
 8002be4:	4632      	mov	r2, r6
 8002be6:	463b      	mov	r3, r7
 8002be8:	f7fd fede 	bl	80009a8 <__aeabi_dcmpeq>
 8002bec:	b908      	cbnz	r0, 8002bf2 <_dtoa_r+0x17a>
 8002bee:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002bf2:	f1ba 0f16 	cmp.w	sl, #22
 8002bf6:	d858      	bhi.n	8002caa <_dtoa_r+0x232>
 8002bf8:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8002bfc:	4b57      	ldr	r3, [pc, #348]	; (8002d5c <_dtoa_r+0x2e4>)
 8002bfe:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 8002c02:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c06:	f7fd fed9 	bl	80009bc <__aeabi_dcmplt>
 8002c0a:	2800      	cmp	r0, #0
 8002c0c:	d04f      	beq.n	8002cae <_dtoa_r+0x236>
 8002c0e:	2300      	movs	r3, #0
 8002c10:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002c14:	930f      	str	r3, [sp, #60]	; 0x3c
 8002c16:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8002c18:	1b1c      	subs	r4, r3, r4
 8002c1a:	1e63      	subs	r3, r4, #1
 8002c1c:	9309      	str	r3, [sp, #36]	; 0x24
 8002c1e:	bf49      	itett	mi
 8002c20:	f1c4 0301 	rsbmi	r3, r4, #1
 8002c24:	2300      	movpl	r3, #0
 8002c26:	9306      	strmi	r3, [sp, #24]
 8002c28:	2300      	movmi	r3, #0
 8002c2a:	bf54      	ite	pl
 8002c2c:	9306      	strpl	r3, [sp, #24]
 8002c2e:	9309      	strmi	r3, [sp, #36]	; 0x24
 8002c30:	f1ba 0f00 	cmp.w	sl, #0
 8002c34:	db3d      	blt.n	8002cb2 <_dtoa_r+0x23a>
 8002c36:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002c38:	f8cd a038 	str.w	sl, [sp, #56]	; 0x38
 8002c3c:	4453      	add	r3, sl
 8002c3e:	9309      	str	r3, [sp, #36]	; 0x24
 8002c40:	2300      	movs	r3, #0
 8002c42:	930a      	str	r3, [sp, #40]	; 0x28
 8002c44:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002c46:	2b09      	cmp	r3, #9
 8002c48:	f200 808c 	bhi.w	8002d64 <_dtoa_r+0x2ec>
 8002c4c:	2b05      	cmp	r3, #5
 8002c4e:	bfc4      	itt	gt
 8002c50:	3b04      	subgt	r3, #4
 8002c52:	9322      	strgt	r3, [sp, #136]	; 0x88
 8002c54:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002c56:	bfc8      	it	gt
 8002c58:	2400      	movgt	r4, #0
 8002c5a:	f1a3 0302 	sub.w	r3, r3, #2
 8002c5e:	bfd8      	it	le
 8002c60:	2401      	movle	r4, #1
 8002c62:	2b03      	cmp	r3, #3
 8002c64:	f200 808a 	bhi.w	8002d7c <_dtoa_r+0x304>
 8002c68:	e8df f003 	tbb	[pc, r3]
 8002c6c:	5b4d4f2d 	.word	0x5b4d4f2d
 8002c70:	e9dd 4316 	ldrd	r4, r3, [sp, #88]	; 0x58
 8002c74:	441c      	add	r4, r3
 8002c76:	f204 4332 	addw	r3, r4, #1074	; 0x432
 8002c7a:	2b20      	cmp	r3, #32
 8002c7c:	bfc3      	ittte	gt
 8002c7e:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 8002c82:	f204 4012 	addwgt	r0, r4, #1042	; 0x412
 8002c86:	fa09 f303 	lslgt.w	r3, r9, r3
 8002c8a:	f1c3 0320 	rsble	r3, r3, #32
 8002c8e:	bfc6      	itte	gt
 8002c90:	fa26 f000 	lsrgt.w	r0, r6, r0
 8002c94:	4318      	orrgt	r0, r3
 8002c96:	fa06 f003 	lslle.w	r0, r6, r3
 8002c9a:	f7fd fba3 	bl	80003e4 <__aeabi_ui2d>
 8002c9e:	2301      	movs	r3, #1
 8002ca0:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 8002ca4:	3c01      	subs	r4, #1
 8002ca6:	9313      	str	r3, [sp, #76]	; 0x4c
 8002ca8:	e76f      	b.n	8002b8a <_dtoa_r+0x112>
 8002caa:	2301      	movs	r3, #1
 8002cac:	e7b2      	b.n	8002c14 <_dtoa_r+0x19c>
 8002cae:	900f      	str	r0, [sp, #60]	; 0x3c
 8002cb0:	e7b1      	b.n	8002c16 <_dtoa_r+0x19e>
 8002cb2:	9b06      	ldr	r3, [sp, #24]
 8002cb4:	eba3 030a 	sub.w	r3, r3, sl
 8002cb8:	9306      	str	r3, [sp, #24]
 8002cba:	f1ca 0300 	rsb	r3, sl, #0
 8002cbe:	930a      	str	r3, [sp, #40]	; 0x28
 8002cc0:	2300      	movs	r3, #0
 8002cc2:	930e      	str	r3, [sp, #56]	; 0x38
 8002cc4:	e7be      	b.n	8002c44 <_dtoa_r+0x1cc>
 8002cc6:	2300      	movs	r3, #0
 8002cc8:	930b      	str	r3, [sp, #44]	; 0x2c
 8002cca:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8002ccc:	2b00      	cmp	r3, #0
 8002cce:	dc58      	bgt.n	8002d82 <_dtoa_r+0x30a>
 8002cd0:	f04f 0901 	mov.w	r9, #1
 8002cd4:	464b      	mov	r3, r9
 8002cd6:	f8cd 9020 	str.w	r9, [sp, #32]
 8002cda:	f8cd 908c 	str.w	r9, [sp, #140]	; 0x8c
 8002cde:	2200      	movs	r2, #0
 8002ce0:	6a68      	ldr	r0, [r5, #36]	; 0x24
 8002ce2:	6042      	str	r2, [r0, #4]
 8002ce4:	2204      	movs	r2, #4
 8002ce6:	f102 0614 	add.w	r6, r2, #20
 8002cea:	429e      	cmp	r6, r3
 8002cec:	6841      	ldr	r1, [r0, #4]
 8002cee:	d94e      	bls.n	8002d8e <_dtoa_r+0x316>
 8002cf0:	4628      	mov	r0, r5
 8002cf2:	f000 fef3 	bl	8003adc <_Balloc>
 8002cf6:	9003      	str	r0, [sp, #12]
 8002cf8:	2800      	cmp	r0, #0
 8002cfa:	d14c      	bne.n	8002d96 <_dtoa_r+0x31e>
 8002cfc:	4602      	mov	r2, r0
 8002cfe:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 8002d02:	4b17      	ldr	r3, [pc, #92]	; (8002d60 <_dtoa_r+0x2e8>)
 8002d04:	e6cc      	b.n	8002aa0 <_dtoa_r+0x28>
 8002d06:	2301      	movs	r3, #1
 8002d08:	e7de      	b.n	8002cc8 <_dtoa_r+0x250>
 8002d0a:	2300      	movs	r3, #0
 8002d0c:	930b      	str	r3, [sp, #44]	; 0x2c
 8002d0e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8002d10:	eb0a 0903 	add.w	r9, sl, r3
 8002d14:	f109 0301 	add.w	r3, r9, #1
 8002d18:	2b01      	cmp	r3, #1
 8002d1a:	9308      	str	r3, [sp, #32]
 8002d1c:	bfb8      	it	lt
 8002d1e:	2301      	movlt	r3, #1
 8002d20:	e7dd      	b.n	8002cde <_dtoa_r+0x266>
 8002d22:	2301      	movs	r3, #1
 8002d24:	e7f2      	b.n	8002d0c <_dtoa_r+0x294>
 8002d26:	bf00      	nop
 8002d28:	636f4361 	.word	0x636f4361
 8002d2c:	3fd287a7 	.word	0x3fd287a7
 8002d30:	8b60c8b3 	.word	0x8b60c8b3
 8002d34:	3fc68a28 	.word	0x3fc68a28
 8002d38:	509f79fb 	.word	0x509f79fb
 8002d3c:	3fd34413 	.word	0x3fd34413
 8002d40:	08004d89 	.word	0x08004d89
 8002d44:	08004da0 	.word	0x08004da0
 8002d48:	7ff00000 	.word	0x7ff00000
 8002d4c:	08004d85 	.word	0x08004d85
 8002d50:	08004d7c 	.word	0x08004d7c
 8002d54:	08004d59 	.word	0x08004d59
 8002d58:	3ff80000 	.word	0x3ff80000
 8002d5c:	08004ef0 	.word	0x08004ef0
 8002d60:	08004dfb 	.word	0x08004dfb
 8002d64:	2401      	movs	r4, #1
 8002d66:	2300      	movs	r3, #0
 8002d68:	940b      	str	r4, [sp, #44]	; 0x2c
 8002d6a:	9322      	str	r3, [sp, #136]	; 0x88
 8002d6c:	f04f 39ff 	mov.w	r9, #4294967295
 8002d70:	2200      	movs	r2, #0
 8002d72:	2312      	movs	r3, #18
 8002d74:	f8cd 9020 	str.w	r9, [sp, #32]
 8002d78:	9223      	str	r2, [sp, #140]	; 0x8c
 8002d7a:	e7b0      	b.n	8002cde <_dtoa_r+0x266>
 8002d7c:	2301      	movs	r3, #1
 8002d7e:	930b      	str	r3, [sp, #44]	; 0x2c
 8002d80:	e7f4      	b.n	8002d6c <_dtoa_r+0x2f4>
 8002d82:	f8dd 908c 	ldr.w	r9, [sp, #140]	; 0x8c
 8002d86:	464b      	mov	r3, r9
 8002d88:	f8cd 9020 	str.w	r9, [sp, #32]
 8002d8c:	e7a7      	b.n	8002cde <_dtoa_r+0x266>
 8002d8e:	3101      	adds	r1, #1
 8002d90:	6041      	str	r1, [r0, #4]
 8002d92:	0052      	lsls	r2, r2, #1
 8002d94:	e7a7      	b.n	8002ce6 <_dtoa_r+0x26e>
 8002d96:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8002d98:	9a03      	ldr	r2, [sp, #12]
 8002d9a:	601a      	str	r2, [r3, #0]
 8002d9c:	9b08      	ldr	r3, [sp, #32]
 8002d9e:	2b0e      	cmp	r3, #14
 8002da0:	f200 80a8 	bhi.w	8002ef4 <_dtoa_r+0x47c>
 8002da4:	2c00      	cmp	r4, #0
 8002da6:	f000 80a5 	beq.w	8002ef4 <_dtoa_r+0x47c>
 8002daa:	f1ba 0f00 	cmp.w	sl, #0
 8002dae:	dd34      	ble.n	8002e1a <_dtoa_r+0x3a2>
 8002db0:	4a9a      	ldr	r2, [pc, #616]	; (800301c <_dtoa_r+0x5a4>)
 8002db2:	f00a 030f 	and.w	r3, sl, #15
 8002db6:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8002dba:	f41a 7f80 	tst.w	sl, #256	; 0x100
 8002dbe:	e9d3 3400 	ldrd	r3, r4, [r3]
 8002dc2:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 8002dc6:	ea4f 142a 	mov.w	r4, sl, asr #4
 8002dca:	d016      	beq.n	8002dfa <_dtoa_r+0x382>
 8002dcc:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8002dd0:	4b93      	ldr	r3, [pc, #588]	; (8003020 <_dtoa_r+0x5a8>)
 8002dd2:	2703      	movs	r7, #3
 8002dd4:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8002dd8:	f7fd fca8 	bl	800072c <__aeabi_ddiv>
 8002ddc:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002de0:	f004 040f 	and.w	r4, r4, #15
 8002de4:	4e8e      	ldr	r6, [pc, #568]	; (8003020 <_dtoa_r+0x5a8>)
 8002de6:	b954      	cbnz	r4, 8002dfe <_dtoa_r+0x386>
 8002de8:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8002dec:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002df0:	f7fd fc9c 	bl	800072c <__aeabi_ddiv>
 8002df4:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002df8:	e029      	b.n	8002e4e <_dtoa_r+0x3d6>
 8002dfa:	2702      	movs	r7, #2
 8002dfc:	e7f2      	b.n	8002de4 <_dtoa_r+0x36c>
 8002dfe:	07e1      	lsls	r1, r4, #31
 8002e00:	d508      	bpl.n	8002e14 <_dtoa_r+0x39c>
 8002e02:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8002e06:	e9d6 2300 	ldrd	r2, r3, [r6]
 8002e0a:	f7fd fb65 	bl	80004d8 <__aeabi_dmul>
 8002e0e:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8002e12:	3701      	adds	r7, #1
 8002e14:	1064      	asrs	r4, r4, #1
 8002e16:	3608      	adds	r6, #8
 8002e18:	e7e5      	b.n	8002de6 <_dtoa_r+0x36e>
 8002e1a:	f000 80a5 	beq.w	8002f68 <_dtoa_r+0x4f0>
 8002e1e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8002e22:	f1ca 0400 	rsb	r4, sl, #0
 8002e26:	4b7d      	ldr	r3, [pc, #500]	; (800301c <_dtoa_r+0x5a4>)
 8002e28:	f004 020f 	and.w	r2, r4, #15
 8002e2c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002e30:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002e34:	f7fd fb50 	bl	80004d8 <__aeabi_dmul>
 8002e38:	2702      	movs	r7, #2
 8002e3a:	2300      	movs	r3, #0
 8002e3c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002e40:	4e77      	ldr	r6, [pc, #476]	; (8003020 <_dtoa_r+0x5a8>)
 8002e42:	1124      	asrs	r4, r4, #4
 8002e44:	2c00      	cmp	r4, #0
 8002e46:	f040 8084 	bne.w	8002f52 <_dtoa_r+0x4da>
 8002e4a:	2b00      	cmp	r3, #0
 8002e4c:	d1d2      	bne.n	8002df4 <_dtoa_r+0x37c>
 8002e4e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8002e50:	2b00      	cmp	r3, #0
 8002e52:	f000 808b 	beq.w	8002f6c <_dtoa_r+0x4f4>
 8002e56:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 8002e5a:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 8002e5e:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8002e62:	2200      	movs	r2, #0
 8002e64:	4b6f      	ldr	r3, [pc, #444]	; (8003024 <_dtoa_r+0x5ac>)
 8002e66:	f7fd fda9 	bl	80009bc <__aeabi_dcmplt>
 8002e6a:	2800      	cmp	r0, #0
 8002e6c:	d07e      	beq.n	8002f6c <_dtoa_r+0x4f4>
 8002e6e:	9b08      	ldr	r3, [sp, #32]
 8002e70:	2b00      	cmp	r3, #0
 8002e72:	d07b      	beq.n	8002f6c <_dtoa_r+0x4f4>
 8002e74:	f1b9 0f00 	cmp.w	r9, #0
 8002e78:	dd38      	ble.n	8002eec <_dtoa_r+0x474>
 8002e7a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8002e7e:	2200      	movs	r2, #0
 8002e80:	4b69      	ldr	r3, [pc, #420]	; (8003028 <_dtoa_r+0x5b0>)
 8002e82:	f7fd fb29 	bl	80004d8 <__aeabi_dmul>
 8002e86:	464c      	mov	r4, r9
 8002e88:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002e8c:	f10a 38ff 	add.w	r8, sl, #4294967295
 8002e90:	3701      	adds	r7, #1
 8002e92:	4638      	mov	r0, r7
 8002e94:	f7fd fab6 	bl	8000404 <__aeabi_i2d>
 8002e98:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002e9c:	f7fd fb1c 	bl	80004d8 <__aeabi_dmul>
 8002ea0:	2200      	movs	r2, #0
 8002ea2:	4b62      	ldr	r3, [pc, #392]	; (800302c <_dtoa_r+0x5b4>)
 8002ea4:	f7fd f962 	bl	800016c <__adddf3>
 8002ea8:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 8002eac:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8002eb0:	9611      	str	r6, [sp, #68]	; 0x44
 8002eb2:	2c00      	cmp	r4, #0
 8002eb4:	d15d      	bne.n	8002f72 <_dtoa_r+0x4fa>
 8002eb6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002eba:	2200      	movs	r2, #0
 8002ebc:	4b5c      	ldr	r3, [pc, #368]	; (8003030 <_dtoa_r+0x5b8>)
 8002ebe:	f7fd f953 	bl	8000168 <__aeabi_dsub>
 8002ec2:	4602      	mov	r2, r0
 8002ec4:	460b      	mov	r3, r1
 8002ec6:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8002eca:	4633      	mov	r3, r6
 8002ecc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8002ece:	f7fd fd93 	bl	80009f8 <__aeabi_dcmpgt>
 8002ed2:	2800      	cmp	r0, #0
 8002ed4:	f040 829c 	bne.w	8003410 <_dtoa_r+0x998>
 8002ed8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002edc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8002ede:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 8002ee2:	f7fd fd6b 	bl	80009bc <__aeabi_dcmplt>
 8002ee6:	2800      	cmp	r0, #0
 8002ee8:	f040 8290 	bne.w	800340c <_dtoa_r+0x994>
 8002eec:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	; 0x30
 8002ef0:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8002ef4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8002ef6:	2b00      	cmp	r3, #0
 8002ef8:	f2c0 8152 	blt.w	80031a0 <_dtoa_r+0x728>
 8002efc:	f1ba 0f0e 	cmp.w	sl, #14
 8002f00:	f300 814e 	bgt.w	80031a0 <_dtoa_r+0x728>
 8002f04:	4b45      	ldr	r3, [pc, #276]	; (800301c <_dtoa_r+0x5a4>)
 8002f06:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 8002f0a:	e9d3 3400 	ldrd	r3, r4, [r3]
 8002f0e:	e9cd 3406 	strd	r3, r4, [sp, #24]
 8002f12:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8002f14:	2b00      	cmp	r3, #0
 8002f16:	f280 80db 	bge.w	80030d0 <_dtoa_r+0x658>
 8002f1a:	9b08      	ldr	r3, [sp, #32]
 8002f1c:	2b00      	cmp	r3, #0
 8002f1e:	f300 80d7 	bgt.w	80030d0 <_dtoa_r+0x658>
 8002f22:	f040 8272 	bne.w	800340a <_dtoa_r+0x992>
 8002f26:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8002f2a:	2200      	movs	r2, #0
 8002f2c:	4b40      	ldr	r3, [pc, #256]	; (8003030 <_dtoa_r+0x5b8>)
 8002f2e:	f7fd fad3 	bl	80004d8 <__aeabi_dmul>
 8002f32:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002f36:	f7fd fd55 	bl	80009e4 <__aeabi_dcmpge>
 8002f3a:	9c08      	ldr	r4, [sp, #32]
 8002f3c:	4626      	mov	r6, r4
 8002f3e:	2800      	cmp	r0, #0
 8002f40:	f040 8248 	bne.w	80033d4 <_dtoa_r+0x95c>
 8002f44:	2331      	movs	r3, #49	; 0x31
 8002f46:	9f03      	ldr	r7, [sp, #12]
 8002f48:	f10a 0a01 	add.w	sl, sl, #1
 8002f4c:	f807 3b01 	strb.w	r3, [r7], #1
 8002f50:	e244      	b.n	80033dc <_dtoa_r+0x964>
 8002f52:	07e2      	lsls	r2, r4, #31
 8002f54:	d505      	bpl.n	8002f62 <_dtoa_r+0x4ea>
 8002f56:	e9d6 2300 	ldrd	r2, r3, [r6]
 8002f5a:	f7fd fabd 	bl	80004d8 <__aeabi_dmul>
 8002f5e:	2301      	movs	r3, #1
 8002f60:	3701      	adds	r7, #1
 8002f62:	1064      	asrs	r4, r4, #1
 8002f64:	3608      	adds	r6, #8
 8002f66:	e76d      	b.n	8002e44 <_dtoa_r+0x3cc>
 8002f68:	2702      	movs	r7, #2
 8002f6a:	e770      	b.n	8002e4e <_dtoa_r+0x3d6>
 8002f6c:	46d0      	mov	r8, sl
 8002f6e:	9c08      	ldr	r4, [sp, #32]
 8002f70:	e78f      	b.n	8002e92 <_dtoa_r+0x41a>
 8002f72:	9903      	ldr	r1, [sp, #12]
 8002f74:	4b29      	ldr	r3, [pc, #164]	; (800301c <_dtoa_r+0x5a4>)
 8002f76:	4421      	add	r1, r4
 8002f78:	9112      	str	r1, [sp, #72]	; 0x48
 8002f7a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8002f7c:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8002f80:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 8002f84:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8002f88:	2900      	cmp	r1, #0
 8002f8a:	d055      	beq.n	8003038 <_dtoa_r+0x5c0>
 8002f8c:	2000      	movs	r0, #0
 8002f8e:	4929      	ldr	r1, [pc, #164]	; (8003034 <_dtoa_r+0x5bc>)
 8002f90:	f7fd fbcc 	bl	800072c <__aeabi_ddiv>
 8002f94:	463b      	mov	r3, r7
 8002f96:	4632      	mov	r2, r6
 8002f98:	f7fd f8e6 	bl	8000168 <__aeabi_dsub>
 8002f9c:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8002fa0:	9f03      	ldr	r7, [sp, #12]
 8002fa2:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002fa6:	f7fd fd47 	bl	8000a38 <__aeabi_d2iz>
 8002faa:	4604      	mov	r4, r0
 8002fac:	f7fd fa2a 	bl	8000404 <__aeabi_i2d>
 8002fb0:	4602      	mov	r2, r0
 8002fb2:	460b      	mov	r3, r1
 8002fb4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002fb8:	f7fd f8d6 	bl	8000168 <__aeabi_dsub>
 8002fbc:	4602      	mov	r2, r0
 8002fbe:	460b      	mov	r3, r1
 8002fc0:	3430      	adds	r4, #48	; 0x30
 8002fc2:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8002fc6:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8002fca:	f807 4b01 	strb.w	r4, [r7], #1
 8002fce:	f7fd fcf5 	bl	80009bc <__aeabi_dcmplt>
 8002fd2:	2800      	cmp	r0, #0
 8002fd4:	d174      	bne.n	80030c0 <_dtoa_r+0x648>
 8002fd6:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002fda:	2000      	movs	r0, #0
 8002fdc:	4911      	ldr	r1, [pc, #68]	; (8003024 <_dtoa_r+0x5ac>)
 8002fde:	f7fd f8c3 	bl	8000168 <__aeabi_dsub>
 8002fe2:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8002fe6:	f7fd fce9 	bl	80009bc <__aeabi_dcmplt>
 8002fea:	2800      	cmp	r0, #0
 8002fec:	f040 80b7 	bne.w	800315e <_dtoa_r+0x6e6>
 8002ff0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002ff2:	429f      	cmp	r7, r3
 8002ff4:	f43f af7a 	beq.w	8002eec <_dtoa_r+0x474>
 8002ff8:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8002ffc:	2200      	movs	r2, #0
 8002ffe:	4b0a      	ldr	r3, [pc, #40]	; (8003028 <_dtoa_r+0x5b0>)
 8003000:	f7fd fa6a 	bl	80004d8 <__aeabi_dmul>
 8003004:	2200      	movs	r2, #0
 8003006:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800300a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800300e:	4b06      	ldr	r3, [pc, #24]	; (8003028 <_dtoa_r+0x5b0>)
 8003010:	f7fd fa62 	bl	80004d8 <__aeabi_dmul>
 8003014:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8003018:	e7c3      	b.n	8002fa2 <_dtoa_r+0x52a>
 800301a:	bf00      	nop
 800301c:	08004ef0 	.word	0x08004ef0
 8003020:	08004ec8 	.word	0x08004ec8
 8003024:	3ff00000 	.word	0x3ff00000
 8003028:	40240000 	.word	0x40240000
 800302c:	401c0000 	.word	0x401c0000
 8003030:	40140000 	.word	0x40140000
 8003034:	3fe00000 	.word	0x3fe00000
 8003038:	4630      	mov	r0, r6
 800303a:	4639      	mov	r1, r7
 800303c:	f7fd fa4c 	bl	80004d8 <__aeabi_dmul>
 8003040:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8003042:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8003046:	9c03      	ldr	r4, [sp, #12]
 8003048:	9314      	str	r3, [sp, #80]	; 0x50
 800304a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800304e:	f7fd fcf3 	bl	8000a38 <__aeabi_d2iz>
 8003052:	9015      	str	r0, [sp, #84]	; 0x54
 8003054:	f7fd f9d6 	bl	8000404 <__aeabi_i2d>
 8003058:	4602      	mov	r2, r0
 800305a:	460b      	mov	r3, r1
 800305c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003060:	f7fd f882 	bl	8000168 <__aeabi_dsub>
 8003064:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8003066:	4606      	mov	r6, r0
 8003068:	3330      	adds	r3, #48	; 0x30
 800306a:	f804 3b01 	strb.w	r3, [r4], #1
 800306e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8003070:	460f      	mov	r7, r1
 8003072:	429c      	cmp	r4, r3
 8003074:	f04f 0200 	mov.w	r2, #0
 8003078:	d124      	bne.n	80030c4 <_dtoa_r+0x64c>
 800307a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800307e:	4bb0      	ldr	r3, [pc, #704]	; (8003340 <_dtoa_r+0x8c8>)
 8003080:	f7fd f874 	bl	800016c <__adddf3>
 8003084:	4602      	mov	r2, r0
 8003086:	460b      	mov	r3, r1
 8003088:	4630      	mov	r0, r6
 800308a:	4639      	mov	r1, r7
 800308c:	f7fd fcb4 	bl	80009f8 <__aeabi_dcmpgt>
 8003090:	2800      	cmp	r0, #0
 8003092:	d163      	bne.n	800315c <_dtoa_r+0x6e4>
 8003094:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8003098:	2000      	movs	r0, #0
 800309a:	49a9      	ldr	r1, [pc, #676]	; (8003340 <_dtoa_r+0x8c8>)
 800309c:	f7fd f864 	bl	8000168 <__aeabi_dsub>
 80030a0:	4602      	mov	r2, r0
 80030a2:	460b      	mov	r3, r1
 80030a4:	4630      	mov	r0, r6
 80030a6:	4639      	mov	r1, r7
 80030a8:	f7fd fc88 	bl	80009bc <__aeabi_dcmplt>
 80030ac:	2800      	cmp	r0, #0
 80030ae:	f43f af1d 	beq.w	8002eec <_dtoa_r+0x474>
 80030b2:	9f14      	ldr	r7, [sp, #80]	; 0x50
 80030b4:	1e7b      	subs	r3, r7, #1
 80030b6:	9314      	str	r3, [sp, #80]	; 0x50
 80030b8:	f817 3c01 	ldrb.w	r3, [r7, #-1]
 80030bc:	2b30      	cmp	r3, #48	; 0x30
 80030be:	d0f8      	beq.n	80030b2 <_dtoa_r+0x63a>
 80030c0:	46c2      	mov	sl, r8
 80030c2:	e03b      	b.n	800313c <_dtoa_r+0x6c4>
 80030c4:	4b9f      	ldr	r3, [pc, #636]	; (8003344 <_dtoa_r+0x8cc>)
 80030c6:	f7fd fa07 	bl	80004d8 <__aeabi_dmul>
 80030ca:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80030ce:	e7bc      	b.n	800304a <_dtoa_r+0x5d2>
 80030d0:	9f03      	ldr	r7, [sp, #12]
 80030d2:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 80030d6:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80030da:	4640      	mov	r0, r8
 80030dc:	4649      	mov	r1, r9
 80030de:	f7fd fb25 	bl	800072c <__aeabi_ddiv>
 80030e2:	f7fd fca9 	bl	8000a38 <__aeabi_d2iz>
 80030e6:	4604      	mov	r4, r0
 80030e8:	f7fd f98c 	bl	8000404 <__aeabi_i2d>
 80030ec:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80030f0:	f7fd f9f2 	bl	80004d8 <__aeabi_dmul>
 80030f4:	4602      	mov	r2, r0
 80030f6:	460b      	mov	r3, r1
 80030f8:	4640      	mov	r0, r8
 80030fa:	4649      	mov	r1, r9
 80030fc:	f7fd f834 	bl	8000168 <__aeabi_dsub>
 8003100:	f104 0630 	add.w	r6, r4, #48	; 0x30
 8003104:	f807 6b01 	strb.w	r6, [r7], #1
 8003108:	9e03      	ldr	r6, [sp, #12]
 800310a:	f8dd c020 	ldr.w	ip, [sp, #32]
 800310e:	1bbe      	subs	r6, r7, r6
 8003110:	45b4      	cmp	ip, r6
 8003112:	4602      	mov	r2, r0
 8003114:	460b      	mov	r3, r1
 8003116:	d136      	bne.n	8003186 <_dtoa_r+0x70e>
 8003118:	f7fd f828 	bl	800016c <__adddf3>
 800311c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8003120:	4680      	mov	r8, r0
 8003122:	4689      	mov	r9, r1
 8003124:	f7fd fc68 	bl	80009f8 <__aeabi_dcmpgt>
 8003128:	bb58      	cbnz	r0, 8003182 <_dtoa_r+0x70a>
 800312a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800312e:	4640      	mov	r0, r8
 8003130:	4649      	mov	r1, r9
 8003132:	f7fd fc39 	bl	80009a8 <__aeabi_dcmpeq>
 8003136:	b108      	cbz	r0, 800313c <_dtoa_r+0x6c4>
 8003138:	07e1      	lsls	r1, r4, #31
 800313a:	d422      	bmi.n	8003182 <_dtoa_r+0x70a>
 800313c:	4628      	mov	r0, r5
 800313e:	4659      	mov	r1, fp
 8003140:	f000 fd0c 	bl	8003b5c <_Bfree>
 8003144:	2300      	movs	r3, #0
 8003146:	703b      	strb	r3, [r7, #0]
 8003148:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800314a:	f10a 0001 	add.w	r0, sl, #1
 800314e:	6018      	str	r0, [r3, #0]
 8003150:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8003152:	2b00      	cmp	r3, #0
 8003154:	f43f acde 	beq.w	8002b14 <_dtoa_r+0x9c>
 8003158:	601f      	str	r7, [r3, #0]
 800315a:	e4db      	b.n	8002b14 <_dtoa_r+0x9c>
 800315c:	4627      	mov	r7, r4
 800315e:	463b      	mov	r3, r7
 8003160:	461f      	mov	r7, r3
 8003162:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003166:	2a39      	cmp	r2, #57	; 0x39
 8003168:	d107      	bne.n	800317a <_dtoa_r+0x702>
 800316a:	9a03      	ldr	r2, [sp, #12]
 800316c:	429a      	cmp	r2, r3
 800316e:	d1f7      	bne.n	8003160 <_dtoa_r+0x6e8>
 8003170:	2230      	movs	r2, #48	; 0x30
 8003172:	9903      	ldr	r1, [sp, #12]
 8003174:	f108 0801 	add.w	r8, r8, #1
 8003178:	700a      	strb	r2, [r1, #0]
 800317a:	781a      	ldrb	r2, [r3, #0]
 800317c:	3201      	adds	r2, #1
 800317e:	701a      	strb	r2, [r3, #0]
 8003180:	e79e      	b.n	80030c0 <_dtoa_r+0x648>
 8003182:	46d0      	mov	r8, sl
 8003184:	e7eb      	b.n	800315e <_dtoa_r+0x6e6>
 8003186:	2200      	movs	r2, #0
 8003188:	4b6e      	ldr	r3, [pc, #440]	; (8003344 <_dtoa_r+0x8cc>)
 800318a:	f7fd f9a5 	bl	80004d8 <__aeabi_dmul>
 800318e:	2200      	movs	r2, #0
 8003190:	2300      	movs	r3, #0
 8003192:	4680      	mov	r8, r0
 8003194:	4689      	mov	r9, r1
 8003196:	f7fd fc07 	bl	80009a8 <__aeabi_dcmpeq>
 800319a:	2800      	cmp	r0, #0
 800319c:	d09b      	beq.n	80030d6 <_dtoa_r+0x65e>
 800319e:	e7cd      	b.n	800313c <_dtoa_r+0x6c4>
 80031a0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80031a2:	2a00      	cmp	r2, #0
 80031a4:	f000 80d0 	beq.w	8003348 <_dtoa_r+0x8d0>
 80031a8:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80031aa:	2a01      	cmp	r2, #1
 80031ac:	f300 80ae 	bgt.w	800330c <_dtoa_r+0x894>
 80031b0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80031b2:	2a00      	cmp	r2, #0
 80031b4:	f000 80a6 	beq.w	8003304 <_dtoa_r+0x88c>
 80031b8:	f203 4333 	addw	r3, r3, #1075	; 0x433
 80031bc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80031be:	9f06      	ldr	r7, [sp, #24]
 80031c0:	9a06      	ldr	r2, [sp, #24]
 80031c2:	2101      	movs	r1, #1
 80031c4:	441a      	add	r2, r3
 80031c6:	9206      	str	r2, [sp, #24]
 80031c8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80031ca:	4628      	mov	r0, r5
 80031cc:	441a      	add	r2, r3
 80031ce:	9209      	str	r2, [sp, #36]	; 0x24
 80031d0:	f000 fd7a 	bl	8003cc8 <__i2b>
 80031d4:	4606      	mov	r6, r0
 80031d6:	2f00      	cmp	r7, #0
 80031d8:	dd0c      	ble.n	80031f4 <_dtoa_r+0x77c>
 80031da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80031dc:	2b00      	cmp	r3, #0
 80031de:	dd09      	ble.n	80031f4 <_dtoa_r+0x77c>
 80031e0:	42bb      	cmp	r3, r7
 80031e2:	bfa8      	it	ge
 80031e4:	463b      	movge	r3, r7
 80031e6:	9a06      	ldr	r2, [sp, #24]
 80031e8:	1aff      	subs	r7, r7, r3
 80031ea:	1ad2      	subs	r2, r2, r3
 80031ec:	9206      	str	r2, [sp, #24]
 80031ee:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80031f0:	1ad3      	subs	r3, r2, r3
 80031f2:	9309      	str	r3, [sp, #36]	; 0x24
 80031f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80031f6:	b1f3      	cbz	r3, 8003236 <_dtoa_r+0x7be>
 80031f8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80031fa:	2b00      	cmp	r3, #0
 80031fc:	f000 80a8 	beq.w	8003350 <_dtoa_r+0x8d8>
 8003200:	2c00      	cmp	r4, #0
 8003202:	dd10      	ble.n	8003226 <_dtoa_r+0x7ae>
 8003204:	4631      	mov	r1, r6
 8003206:	4622      	mov	r2, r4
 8003208:	4628      	mov	r0, r5
 800320a:	f000 fe1b 	bl	8003e44 <__pow5mult>
 800320e:	465a      	mov	r2, fp
 8003210:	4601      	mov	r1, r0
 8003212:	4606      	mov	r6, r0
 8003214:	4628      	mov	r0, r5
 8003216:	f000 fd6d 	bl	8003cf4 <__multiply>
 800321a:	4680      	mov	r8, r0
 800321c:	4659      	mov	r1, fp
 800321e:	4628      	mov	r0, r5
 8003220:	f000 fc9c 	bl	8003b5c <_Bfree>
 8003224:	46c3      	mov	fp, r8
 8003226:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003228:	1b1a      	subs	r2, r3, r4
 800322a:	d004      	beq.n	8003236 <_dtoa_r+0x7be>
 800322c:	4659      	mov	r1, fp
 800322e:	4628      	mov	r0, r5
 8003230:	f000 fe08 	bl	8003e44 <__pow5mult>
 8003234:	4683      	mov	fp, r0
 8003236:	2101      	movs	r1, #1
 8003238:	4628      	mov	r0, r5
 800323a:	f000 fd45 	bl	8003cc8 <__i2b>
 800323e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003240:	4604      	mov	r4, r0
 8003242:	2b00      	cmp	r3, #0
 8003244:	f340 8086 	ble.w	8003354 <_dtoa_r+0x8dc>
 8003248:	461a      	mov	r2, r3
 800324a:	4601      	mov	r1, r0
 800324c:	4628      	mov	r0, r5
 800324e:	f000 fdf9 	bl	8003e44 <__pow5mult>
 8003252:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003254:	4604      	mov	r4, r0
 8003256:	2b01      	cmp	r3, #1
 8003258:	dd7f      	ble.n	800335a <_dtoa_r+0x8e2>
 800325a:	f04f 0800 	mov.w	r8, #0
 800325e:	6923      	ldr	r3, [r4, #16]
 8003260:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8003264:	6918      	ldr	r0, [r3, #16]
 8003266:	f000 fce1 	bl	8003c2c <__hi0bits>
 800326a:	f1c0 0020 	rsb	r0, r0, #32
 800326e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003270:	4418      	add	r0, r3
 8003272:	f010 001f 	ands.w	r0, r0, #31
 8003276:	f000 8092 	beq.w	800339e <_dtoa_r+0x926>
 800327a:	f1c0 0320 	rsb	r3, r0, #32
 800327e:	2b04      	cmp	r3, #4
 8003280:	f340 808a 	ble.w	8003398 <_dtoa_r+0x920>
 8003284:	f1c0 001c 	rsb	r0, r0, #28
 8003288:	9b06      	ldr	r3, [sp, #24]
 800328a:	4407      	add	r7, r0
 800328c:	4403      	add	r3, r0
 800328e:	9306      	str	r3, [sp, #24]
 8003290:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003292:	4403      	add	r3, r0
 8003294:	9309      	str	r3, [sp, #36]	; 0x24
 8003296:	9b06      	ldr	r3, [sp, #24]
 8003298:	2b00      	cmp	r3, #0
 800329a:	dd05      	ble.n	80032a8 <_dtoa_r+0x830>
 800329c:	4659      	mov	r1, fp
 800329e:	461a      	mov	r2, r3
 80032a0:	4628      	mov	r0, r5
 80032a2:	f000 fe29 	bl	8003ef8 <__lshift>
 80032a6:	4683      	mov	fp, r0
 80032a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80032aa:	2b00      	cmp	r3, #0
 80032ac:	dd05      	ble.n	80032ba <_dtoa_r+0x842>
 80032ae:	4621      	mov	r1, r4
 80032b0:	461a      	mov	r2, r3
 80032b2:	4628      	mov	r0, r5
 80032b4:	f000 fe20 	bl	8003ef8 <__lshift>
 80032b8:	4604      	mov	r4, r0
 80032ba:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80032bc:	2b00      	cmp	r3, #0
 80032be:	d070      	beq.n	80033a2 <_dtoa_r+0x92a>
 80032c0:	4621      	mov	r1, r4
 80032c2:	4658      	mov	r0, fp
 80032c4:	f000 fe88 	bl	8003fd8 <__mcmp>
 80032c8:	2800      	cmp	r0, #0
 80032ca:	da6a      	bge.n	80033a2 <_dtoa_r+0x92a>
 80032cc:	2300      	movs	r3, #0
 80032ce:	4659      	mov	r1, fp
 80032d0:	220a      	movs	r2, #10
 80032d2:	4628      	mov	r0, r5
 80032d4:	f000 fc64 	bl	8003ba0 <__multadd>
 80032d8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80032da:	4683      	mov	fp, r0
 80032dc:	f10a 3aff 	add.w	sl, sl, #4294967295
 80032e0:	2b00      	cmp	r3, #0
 80032e2:	f000 8194 	beq.w	800360e <_dtoa_r+0xb96>
 80032e6:	4631      	mov	r1, r6
 80032e8:	2300      	movs	r3, #0
 80032ea:	220a      	movs	r2, #10
 80032ec:	4628      	mov	r0, r5
 80032ee:	f000 fc57 	bl	8003ba0 <__multadd>
 80032f2:	f1b9 0f00 	cmp.w	r9, #0
 80032f6:	4606      	mov	r6, r0
 80032f8:	f300 8093 	bgt.w	8003422 <_dtoa_r+0x9aa>
 80032fc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80032fe:	2b02      	cmp	r3, #2
 8003300:	dc57      	bgt.n	80033b2 <_dtoa_r+0x93a>
 8003302:	e08e      	b.n	8003422 <_dtoa_r+0x9aa>
 8003304:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8003306:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800330a:	e757      	b.n	80031bc <_dtoa_r+0x744>
 800330c:	9b08      	ldr	r3, [sp, #32]
 800330e:	1e5c      	subs	r4, r3, #1
 8003310:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003312:	42a3      	cmp	r3, r4
 8003314:	bfb7      	itett	lt
 8003316:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 8003318:	1b1c      	subge	r4, r3, r4
 800331a:	1ae2      	sublt	r2, r4, r3
 800331c:	9b0e      	ldrlt	r3, [sp, #56]	; 0x38
 800331e:	bfbe      	ittt	lt
 8003320:	940a      	strlt	r4, [sp, #40]	; 0x28
 8003322:	189b      	addlt	r3, r3, r2
 8003324:	930e      	strlt	r3, [sp, #56]	; 0x38
 8003326:	9b08      	ldr	r3, [sp, #32]
 8003328:	bfb8      	it	lt
 800332a:	2400      	movlt	r4, #0
 800332c:	2b00      	cmp	r3, #0
 800332e:	bfbb      	ittet	lt
 8003330:	9b06      	ldrlt	r3, [sp, #24]
 8003332:	9a08      	ldrlt	r2, [sp, #32]
 8003334:	9f06      	ldrge	r7, [sp, #24]
 8003336:	1a9f      	sublt	r7, r3, r2
 8003338:	bfac      	ite	ge
 800333a:	9b08      	ldrge	r3, [sp, #32]
 800333c:	2300      	movlt	r3, #0
 800333e:	e73f      	b.n	80031c0 <_dtoa_r+0x748>
 8003340:	3fe00000 	.word	0x3fe00000
 8003344:	40240000 	.word	0x40240000
 8003348:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800334a:	9f06      	ldr	r7, [sp, #24]
 800334c:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800334e:	e742      	b.n	80031d6 <_dtoa_r+0x75e>
 8003350:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8003352:	e76b      	b.n	800322c <_dtoa_r+0x7b4>
 8003354:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003356:	2b01      	cmp	r3, #1
 8003358:	dc19      	bgt.n	800338e <_dtoa_r+0x916>
 800335a:	9b04      	ldr	r3, [sp, #16]
 800335c:	b9bb      	cbnz	r3, 800338e <_dtoa_r+0x916>
 800335e:	9b05      	ldr	r3, [sp, #20]
 8003360:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003364:	b99b      	cbnz	r3, 800338e <_dtoa_r+0x916>
 8003366:	9b05      	ldr	r3, [sp, #20]
 8003368:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800336c:	0d1b      	lsrs	r3, r3, #20
 800336e:	051b      	lsls	r3, r3, #20
 8003370:	b183      	cbz	r3, 8003394 <_dtoa_r+0x91c>
 8003372:	f04f 0801 	mov.w	r8, #1
 8003376:	9b06      	ldr	r3, [sp, #24]
 8003378:	3301      	adds	r3, #1
 800337a:	9306      	str	r3, [sp, #24]
 800337c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800337e:	3301      	adds	r3, #1
 8003380:	9309      	str	r3, [sp, #36]	; 0x24
 8003382:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003384:	2b00      	cmp	r3, #0
 8003386:	f47f af6a 	bne.w	800325e <_dtoa_r+0x7e6>
 800338a:	2001      	movs	r0, #1
 800338c:	e76f      	b.n	800326e <_dtoa_r+0x7f6>
 800338e:	f04f 0800 	mov.w	r8, #0
 8003392:	e7f6      	b.n	8003382 <_dtoa_r+0x90a>
 8003394:	4698      	mov	r8, r3
 8003396:	e7f4      	b.n	8003382 <_dtoa_r+0x90a>
 8003398:	f43f af7d 	beq.w	8003296 <_dtoa_r+0x81e>
 800339c:	4618      	mov	r0, r3
 800339e:	301c      	adds	r0, #28
 80033a0:	e772      	b.n	8003288 <_dtoa_r+0x810>
 80033a2:	9b08      	ldr	r3, [sp, #32]
 80033a4:	2b00      	cmp	r3, #0
 80033a6:	dc36      	bgt.n	8003416 <_dtoa_r+0x99e>
 80033a8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80033aa:	2b02      	cmp	r3, #2
 80033ac:	dd33      	ble.n	8003416 <_dtoa_r+0x99e>
 80033ae:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80033b2:	f1b9 0f00 	cmp.w	r9, #0
 80033b6:	d10d      	bne.n	80033d4 <_dtoa_r+0x95c>
 80033b8:	4621      	mov	r1, r4
 80033ba:	464b      	mov	r3, r9
 80033bc:	2205      	movs	r2, #5
 80033be:	4628      	mov	r0, r5
 80033c0:	f000 fbee 	bl	8003ba0 <__multadd>
 80033c4:	4601      	mov	r1, r0
 80033c6:	4604      	mov	r4, r0
 80033c8:	4658      	mov	r0, fp
 80033ca:	f000 fe05 	bl	8003fd8 <__mcmp>
 80033ce:	2800      	cmp	r0, #0
 80033d0:	f73f adb8 	bgt.w	8002f44 <_dtoa_r+0x4cc>
 80033d4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80033d6:	9f03      	ldr	r7, [sp, #12]
 80033d8:	ea6f 0a03 	mvn.w	sl, r3
 80033dc:	f04f 0800 	mov.w	r8, #0
 80033e0:	4621      	mov	r1, r4
 80033e2:	4628      	mov	r0, r5
 80033e4:	f000 fbba 	bl	8003b5c <_Bfree>
 80033e8:	2e00      	cmp	r6, #0
 80033ea:	f43f aea7 	beq.w	800313c <_dtoa_r+0x6c4>
 80033ee:	f1b8 0f00 	cmp.w	r8, #0
 80033f2:	d005      	beq.n	8003400 <_dtoa_r+0x988>
 80033f4:	45b0      	cmp	r8, r6
 80033f6:	d003      	beq.n	8003400 <_dtoa_r+0x988>
 80033f8:	4641      	mov	r1, r8
 80033fa:	4628      	mov	r0, r5
 80033fc:	f000 fbae 	bl	8003b5c <_Bfree>
 8003400:	4631      	mov	r1, r6
 8003402:	4628      	mov	r0, r5
 8003404:	f000 fbaa 	bl	8003b5c <_Bfree>
 8003408:	e698      	b.n	800313c <_dtoa_r+0x6c4>
 800340a:	2400      	movs	r4, #0
 800340c:	4626      	mov	r6, r4
 800340e:	e7e1      	b.n	80033d4 <_dtoa_r+0x95c>
 8003410:	46c2      	mov	sl, r8
 8003412:	4626      	mov	r6, r4
 8003414:	e596      	b.n	8002f44 <_dtoa_r+0x4cc>
 8003416:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003418:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800341c:	2b00      	cmp	r3, #0
 800341e:	f000 80fd 	beq.w	800361c <_dtoa_r+0xba4>
 8003422:	2f00      	cmp	r7, #0
 8003424:	dd05      	ble.n	8003432 <_dtoa_r+0x9ba>
 8003426:	4631      	mov	r1, r6
 8003428:	463a      	mov	r2, r7
 800342a:	4628      	mov	r0, r5
 800342c:	f000 fd64 	bl	8003ef8 <__lshift>
 8003430:	4606      	mov	r6, r0
 8003432:	f1b8 0f00 	cmp.w	r8, #0
 8003436:	d05c      	beq.n	80034f2 <_dtoa_r+0xa7a>
 8003438:	4628      	mov	r0, r5
 800343a:	6871      	ldr	r1, [r6, #4]
 800343c:	f000 fb4e 	bl	8003adc <_Balloc>
 8003440:	4607      	mov	r7, r0
 8003442:	b928      	cbnz	r0, 8003450 <_dtoa_r+0x9d8>
 8003444:	4602      	mov	r2, r0
 8003446:	f240 21ea 	movw	r1, #746	; 0x2ea
 800344a:	4b7f      	ldr	r3, [pc, #508]	; (8003648 <_dtoa_r+0xbd0>)
 800344c:	f7ff bb28 	b.w	8002aa0 <_dtoa_r+0x28>
 8003450:	6932      	ldr	r2, [r6, #16]
 8003452:	f106 010c 	add.w	r1, r6, #12
 8003456:	3202      	adds	r2, #2
 8003458:	0092      	lsls	r2, r2, #2
 800345a:	300c      	adds	r0, #12
 800345c:	f000 fb30 	bl	8003ac0 <memcpy>
 8003460:	2201      	movs	r2, #1
 8003462:	4639      	mov	r1, r7
 8003464:	4628      	mov	r0, r5
 8003466:	f000 fd47 	bl	8003ef8 <__lshift>
 800346a:	46b0      	mov	r8, r6
 800346c:	4606      	mov	r6, r0
 800346e:	9b03      	ldr	r3, [sp, #12]
 8003470:	3301      	adds	r3, #1
 8003472:	9308      	str	r3, [sp, #32]
 8003474:	9b03      	ldr	r3, [sp, #12]
 8003476:	444b      	add	r3, r9
 8003478:	930a      	str	r3, [sp, #40]	; 0x28
 800347a:	9b04      	ldr	r3, [sp, #16]
 800347c:	f003 0301 	and.w	r3, r3, #1
 8003480:	9309      	str	r3, [sp, #36]	; 0x24
 8003482:	9b08      	ldr	r3, [sp, #32]
 8003484:	4621      	mov	r1, r4
 8003486:	3b01      	subs	r3, #1
 8003488:	4658      	mov	r0, fp
 800348a:	9304      	str	r3, [sp, #16]
 800348c:	f7ff fa68 	bl	8002960 <quorem>
 8003490:	4603      	mov	r3, r0
 8003492:	4641      	mov	r1, r8
 8003494:	3330      	adds	r3, #48	; 0x30
 8003496:	9006      	str	r0, [sp, #24]
 8003498:	4658      	mov	r0, fp
 800349a:	930b      	str	r3, [sp, #44]	; 0x2c
 800349c:	f000 fd9c 	bl	8003fd8 <__mcmp>
 80034a0:	4632      	mov	r2, r6
 80034a2:	4681      	mov	r9, r0
 80034a4:	4621      	mov	r1, r4
 80034a6:	4628      	mov	r0, r5
 80034a8:	f000 fdb2 	bl	8004010 <__mdiff>
 80034ac:	68c2      	ldr	r2, [r0, #12]
 80034ae:	4607      	mov	r7, r0
 80034b0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80034b2:	bb02      	cbnz	r2, 80034f6 <_dtoa_r+0xa7e>
 80034b4:	4601      	mov	r1, r0
 80034b6:	4658      	mov	r0, fp
 80034b8:	f000 fd8e 	bl	8003fd8 <__mcmp>
 80034bc:	4602      	mov	r2, r0
 80034be:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80034c0:	4639      	mov	r1, r7
 80034c2:	4628      	mov	r0, r5
 80034c4:	e9cd 320b 	strd	r3, r2, [sp, #44]	; 0x2c
 80034c8:	f000 fb48 	bl	8003b5c <_Bfree>
 80034cc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80034ce:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80034d0:	9f08      	ldr	r7, [sp, #32]
 80034d2:	ea43 0102 	orr.w	r1, r3, r2
 80034d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80034d8:	430b      	orrs	r3, r1
 80034da:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80034dc:	d10d      	bne.n	80034fa <_dtoa_r+0xa82>
 80034de:	2b39      	cmp	r3, #57	; 0x39
 80034e0:	d029      	beq.n	8003536 <_dtoa_r+0xabe>
 80034e2:	f1b9 0f00 	cmp.w	r9, #0
 80034e6:	dd01      	ble.n	80034ec <_dtoa_r+0xa74>
 80034e8:	9b06      	ldr	r3, [sp, #24]
 80034ea:	3331      	adds	r3, #49	; 0x31
 80034ec:	9a04      	ldr	r2, [sp, #16]
 80034ee:	7013      	strb	r3, [r2, #0]
 80034f0:	e776      	b.n	80033e0 <_dtoa_r+0x968>
 80034f2:	4630      	mov	r0, r6
 80034f4:	e7b9      	b.n	800346a <_dtoa_r+0x9f2>
 80034f6:	2201      	movs	r2, #1
 80034f8:	e7e2      	b.n	80034c0 <_dtoa_r+0xa48>
 80034fa:	f1b9 0f00 	cmp.w	r9, #0
 80034fe:	db06      	blt.n	800350e <_dtoa_r+0xa96>
 8003500:	9922      	ldr	r1, [sp, #136]	; 0x88
 8003502:	ea41 0909 	orr.w	r9, r1, r9
 8003506:	9909      	ldr	r1, [sp, #36]	; 0x24
 8003508:	ea59 0101 	orrs.w	r1, r9, r1
 800350c:	d120      	bne.n	8003550 <_dtoa_r+0xad8>
 800350e:	2a00      	cmp	r2, #0
 8003510:	ddec      	ble.n	80034ec <_dtoa_r+0xa74>
 8003512:	4659      	mov	r1, fp
 8003514:	2201      	movs	r2, #1
 8003516:	4628      	mov	r0, r5
 8003518:	9308      	str	r3, [sp, #32]
 800351a:	f000 fced 	bl	8003ef8 <__lshift>
 800351e:	4621      	mov	r1, r4
 8003520:	4683      	mov	fp, r0
 8003522:	f000 fd59 	bl	8003fd8 <__mcmp>
 8003526:	2800      	cmp	r0, #0
 8003528:	9b08      	ldr	r3, [sp, #32]
 800352a:	dc02      	bgt.n	8003532 <_dtoa_r+0xaba>
 800352c:	d1de      	bne.n	80034ec <_dtoa_r+0xa74>
 800352e:	07da      	lsls	r2, r3, #31
 8003530:	d5dc      	bpl.n	80034ec <_dtoa_r+0xa74>
 8003532:	2b39      	cmp	r3, #57	; 0x39
 8003534:	d1d8      	bne.n	80034e8 <_dtoa_r+0xa70>
 8003536:	2339      	movs	r3, #57	; 0x39
 8003538:	9a04      	ldr	r2, [sp, #16]
 800353a:	7013      	strb	r3, [r2, #0]
 800353c:	463b      	mov	r3, r7
 800353e:	461f      	mov	r7, r3
 8003540:	f817 2c01 	ldrb.w	r2, [r7, #-1]
 8003544:	3b01      	subs	r3, #1
 8003546:	2a39      	cmp	r2, #57	; 0x39
 8003548:	d050      	beq.n	80035ec <_dtoa_r+0xb74>
 800354a:	3201      	adds	r2, #1
 800354c:	701a      	strb	r2, [r3, #0]
 800354e:	e747      	b.n	80033e0 <_dtoa_r+0x968>
 8003550:	2a00      	cmp	r2, #0
 8003552:	dd03      	ble.n	800355c <_dtoa_r+0xae4>
 8003554:	2b39      	cmp	r3, #57	; 0x39
 8003556:	d0ee      	beq.n	8003536 <_dtoa_r+0xabe>
 8003558:	3301      	adds	r3, #1
 800355a:	e7c7      	b.n	80034ec <_dtoa_r+0xa74>
 800355c:	9a08      	ldr	r2, [sp, #32]
 800355e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8003560:	f802 3c01 	strb.w	r3, [r2, #-1]
 8003564:	428a      	cmp	r2, r1
 8003566:	d02a      	beq.n	80035be <_dtoa_r+0xb46>
 8003568:	4659      	mov	r1, fp
 800356a:	2300      	movs	r3, #0
 800356c:	220a      	movs	r2, #10
 800356e:	4628      	mov	r0, r5
 8003570:	f000 fb16 	bl	8003ba0 <__multadd>
 8003574:	45b0      	cmp	r8, r6
 8003576:	4683      	mov	fp, r0
 8003578:	f04f 0300 	mov.w	r3, #0
 800357c:	f04f 020a 	mov.w	r2, #10
 8003580:	4641      	mov	r1, r8
 8003582:	4628      	mov	r0, r5
 8003584:	d107      	bne.n	8003596 <_dtoa_r+0xb1e>
 8003586:	f000 fb0b 	bl	8003ba0 <__multadd>
 800358a:	4680      	mov	r8, r0
 800358c:	4606      	mov	r6, r0
 800358e:	9b08      	ldr	r3, [sp, #32]
 8003590:	3301      	adds	r3, #1
 8003592:	9308      	str	r3, [sp, #32]
 8003594:	e775      	b.n	8003482 <_dtoa_r+0xa0a>
 8003596:	f000 fb03 	bl	8003ba0 <__multadd>
 800359a:	4631      	mov	r1, r6
 800359c:	4680      	mov	r8, r0
 800359e:	2300      	movs	r3, #0
 80035a0:	220a      	movs	r2, #10
 80035a2:	4628      	mov	r0, r5
 80035a4:	f000 fafc 	bl	8003ba0 <__multadd>
 80035a8:	4606      	mov	r6, r0
 80035aa:	e7f0      	b.n	800358e <_dtoa_r+0xb16>
 80035ac:	f1b9 0f00 	cmp.w	r9, #0
 80035b0:	bfcc      	ite	gt
 80035b2:	464f      	movgt	r7, r9
 80035b4:	2701      	movle	r7, #1
 80035b6:	f04f 0800 	mov.w	r8, #0
 80035ba:	9a03      	ldr	r2, [sp, #12]
 80035bc:	4417      	add	r7, r2
 80035be:	4659      	mov	r1, fp
 80035c0:	2201      	movs	r2, #1
 80035c2:	4628      	mov	r0, r5
 80035c4:	9308      	str	r3, [sp, #32]
 80035c6:	f000 fc97 	bl	8003ef8 <__lshift>
 80035ca:	4621      	mov	r1, r4
 80035cc:	4683      	mov	fp, r0
 80035ce:	f000 fd03 	bl	8003fd8 <__mcmp>
 80035d2:	2800      	cmp	r0, #0
 80035d4:	dcb2      	bgt.n	800353c <_dtoa_r+0xac4>
 80035d6:	d102      	bne.n	80035de <_dtoa_r+0xb66>
 80035d8:	9b08      	ldr	r3, [sp, #32]
 80035da:	07db      	lsls	r3, r3, #31
 80035dc:	d4ae      	bmi.n	800353c <_dtoa_r+0xac4>
 80035de:	463b      	mov	r3, r7
 80035e0:	461f      	mov	r7, r3
 80035e2:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80035e6:	2a30      	cmp	r2, #48	; 0x30
 80035e8:	d0fa      	beq.n	80035e0 <_dtoa_r+0xb68>
 80035ea:	e6f9      	b.n	80033e0 <_dtoa_r+0x968>
 80035ec:	9a03      	ldr	r2, [sp, #12]
 80035ee:	429a      	cmp	r2, r3
 80035f0:	d1a5      	bne.n	800353e <_dtoa_r+0xac6>
 80035f2:	2331      	movs	r3, #49	; 0x31
 80035f4:	f10a 0a01 	add.w	sl, sl, #1
 80035f8:	e779      	b.n	80034ee <_dtoa_r+0xa76>
 80035fa:	4b14      	ldr	r3, [pc, #80]	; (800364c <_dtoa_r+0xbd4>)
 80035fc:	f7ff baa8 	b.w	8002b50 <_dtoa_r+0xd8>
 8003600:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8003602:	2b00      	cmp	r3, #0
 8003604:	f47f aa81 	bne.w	8002b0a <_dtoa_r+0x92>
 8003608:	4b11      	ldr	r3, [pc, #68]	; (8003650 <_dtoa_r+0xbd8>)
 800360a:	f7ff baa1 	b.w	8002b50 <_dtoa_r+0xd8>
 800360e:	f1b9 0f00 	cmp.w	r9, #0
 8003612:	dc03      	bgt.n	800361c <_dtoa_r+0xba4>
 8003614:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003616:	2b02      	cmp	r3, #2
 8003618:	f73f aecb 	bgt.w	80033b2 <_dtoa_r+0x93a>
 800361c:	9f03      	ldr	r7, [sp, #12]
 800361e:	4621      	mov	r1, r4
 8003620:	4658      	mov	r0, fp
 8003622:	f7ff f99d 	bl	8002960 <quorem>
 8003626:	9a03      	ldr	r2, [sp, #12]
 8003628:	f100 0330 	add.w	r3, r0, #48	; 0x30
 800362c:	f807 3b01 	strb.w	r3, [r7], #1
 8003630:	1aba      	subs	r2, r7, r2
 8003632:	4591      	cmp	r9, r2
 8003634:	ddba      	ble.n	80035ac <_dtoa_r+0xb34>
 8003636:	4659      	mov	r1, fp
 8003638:	2300      	movs	r3, #0
 800363a:	220a      	movs	r2, #10
 800363c:	4628      	mov	r0, r5
 800363e:	f000 faaf 	bl	8003ba0 <__multadd>
 8003642:	4683      	mov	fp, r0
 8003644:	e7eb      	b.n	800361e <_dtoa_r+0xba6>
 8003646:	bf00      	nop
 8003648:	08004dfb 	.word	0x08004dfb
 800364c:	08004d58 	.word	0x08004d58
 8003650:	08004d7c 	.word	0x08004d7c

08003654 <__sflush_r>:
 8003654:	898a      	ldrh	r2, [r1, #12]
 8003656:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003658:	4605      	mov	r5, r0
 800365a:	0710      	lsls	r0, r2, #28
 800365c:	460c      	mov	r4, r1
 800365e:	d457      	bmi.n	8003710 <__sflush_r+0xbc>
 8003660:	684b      	ldr	r3, [r1, #4]
 8003662:	2b00      	cmp	r3, #0
 8003664:	dc04      	bgt.n	8003670 <__sflush_r+0x1c>
 8003666:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8003668:	2b00      	cmp	r3, #0
 800366a:	dc01      	bgt.n	8003670 <__sflush_r+0x1c>
 800366c:	2000      	movs	r0, #0
 800366e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003670:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8003672:	2e00      	cmp	r6, #0
 8003674:	d0fa      	beq.n	800366c <__sflush_r+0x18>
 8003676:	2300      	movs	r3, #0
 8003678:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800367c:	682f      	ldr	r7, [r5, #0]
 800367e:	602b      	str	r3, [r5, #0]
 8003680:	d032      	beq.n	80036e8 <__sflush_r+0x94>
 8003682:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8003684:	89a3      	ldrh	r3, [r4, #12]
 8003686:	075a      	lsls	r2, r3, #29
 8003688:	d505      	bpl.n	8003696 <__sflush_r+0x42>
 800368a:	6863      	ldr	r3, [r4, #4]
 800368c:	1ac0      	subs	r0, r0, r3
 800368e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8003690:	b10b      	cbz	r3, 8003696 <__sflush_r+0x42>
 8003692:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8003694:	1ac0      	subs	r0, r0, r3
 8003696:	2300      	movs	r3, #0
 8003698:	4602      	mov	r2, r0
 800369a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800369c:	4628      	mov	r0, r5
 800369e:	6a21      	ldr	r1, [r4, #32]
 80036a0:	47b0      	blx	r6
 80036a2:	1c43      	adds	r3, r0, #1
 80036a4:	89a3      	ldrh	r3, [r4, #12]
 80036a6:	d106      	bne.n	80036b6 <__sflush_r+0x62>
 80036a8:	6829      	ldr	r1, [r5, #0]
 80036aa:	291d      	cmp	r1, #29
 80036ac:	d82c      	bhi.n	8003708 <__sflush_r+0xb4>
 80036ae:	4a29      	ldr	r2, [pc, #164]	; (8003754 <__sflush_r+0x100>)
 80036b0:	40ca      	lsrs	r2, r1
 80036b2:	07d6      	lsls	r6, r2, #31
 80036b4:	d528      	bpl.n	8003708 <__sflush_r+0xb4>
 80036b6:	2200      	movs	r2, #0
 80036b8:	6062      	str	r2, [r4, #4]
 80036ba:	6922      	ldr	r2, [r4, #16]
 80036bc:	04d9      	lsls	r1, r3, #19
 80036be:	6022      	str	r2, [r4, #0]
 80036c0:	d504      	bpl.n	80036cc <__sflush_r+0x78>
 80036c2:	1c42      	adds	r2, r0, #1
 80036c4:	d101      	bne.n	80036ca <__sflush_r+0x76>
 80036c6:	682b      	ldr	r3, [r5, #0]
 80036c8:	b903      	cbnz	r3, 80036cc <__sflush_r+0x78>
 80036ca:	6560      	str	r0, [r4, #84]	; 0x54
 80036cc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80036ce:	602f      	str	r7, [r5, #0]
 80036d0:	2900      	cmp	r1, #0
 80036d2:	d0cb      	beq.n	800366c <__sflush_r+0x18>
 80036d4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80036d8:	4299      	cmp	r1, r3
 80036da:	d002      	beq.n	80036e2 <__sflush_r+0x8e>
 80036dc:	4628      	mov	r0, r5
 80036de:	f000 fd93 	bl	8004208 <_free_r>
 80036e2:	2000      	movs	r0, #0
 80036e4:	6360      	str	r0, [r4, #52]	; 0x34
 80036e6:	e7c2      	b.n	800366e <__sflush_r+0x1a>
 80036e8:	6a21      	ldr	r1, [r4, #32]
 80036ea:	2301      	movs	r3, #1
 80036ec:	4628      	mov	r0, r5
 80036ee:	47b0      	blx	r6
 80036f0:	1c41      	adds	r1, r0, #1
 80036f2:	d1c7      	bne.n	8003684 <__sflush_r+0x30>
 80036f4:	682b      	ldr	r3, [r5, #0]
 80036f6:	2b00      	cmp	r3, #0
 80036f8:	d0c4      	beq.n	8003684 <__sflush_r+0x30>
 80036fa:	2b1d      	cmp	r3, #29
 80036fc:	d001      	beq.n	8003702 <__sflush_r+0xae>
 80036fe:	2b16      	cmp	r3, #22
 8003700:	d101      	bne.n	8003706 <__sflush_r+0xb2>
 8003702:	602f      	str	r7, [r5, #0]
 8003704:	e7b2      	b.n	800366c <__sflush_r+0x18>
 8003706:	89a3      	ldrh	r3, [r4, #12]
 8003708:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800370c:	81a3      	strh	r3, [r4, #12]
 800370e:	e7ae      	b.n	800366e <__sflush_r+0x1a>
 8003710:	690f      	ldr	r7, [r1, #16]
 8003712:	2f00      	cmp	r7, #0
 8003714:	d0aa      	beq.n	800366c <__sflush_r+0x18>
 8003716:	0793      	lsls	r3, r2, #30
 8003718:	bf18      	it	ne
 800371a:	2300      	movne	r3, #0
 800371c:	680e      	ldr	r6, [r1, #0]
 800371e:	bf08      	it	eq
 8003720:	694b      	ldreq	r3, [r1, #20]
 8003722:	1bf6      	subs	r6, r6, r7
 8003724:	600f      	str	r7, [r1, #0]
 8003726:	608b      	str	r3, [r1, #8]
 8003728:	2e00      	cmp	r6, #0
 800372a:	dd9f      	ble.n	800366c <__sflush_r+0x18>
 800372c:	4633      	mov	r3, r6
 800372e:	463a      	mov	r2, r7
 8003730:	4628      	mov	r0, r5
 8003732:	6a21      	ldr	r1, [r4, #32]
 8003734:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8003738:	47e0      	blx	ip
 800373a:	2800      	cmp	r0, #0
 800373c:	dc06      	bgt.n	800374c <__sflush_r+0xf8>
 800373e:	89a3      	ldrh	r3, [r4, #12]
 8003740:	f04f 30ff 	mov.w	r0, #4294967295
 8003744:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003748:	81a3      	strh	r3, [r4, #12]
 800374a:	e790      	b.n	800366e <__sflush_r+0x1a>
 800374c:	4407      	add	r7, r0
 800374e:	1a36      	subs	r6, r6, r0
 8003750:	e7ea      	b.n	8003728 <__sflush_r+0xd4>
 8003752:	bf00      	nop
 8003754:	20400001 	.word	0x20400001

08003758 <_fflush_r>:
 8003758:	b538      	push	{r3, r4, r5, lr}
 800375a:	690b      	ldr	r3, [r1, #16]
 800375c:	4605      	mov	r5, r0
 800375e:	460c      	mov	r4, r1
 8003760:	b913      	cbnz	r3, 8003768 <_fflush_r+0x10>
 8003762:	2500      	movs	r5, #0
 8003764:	4628      	mov	r0, r5
 8003766:	bd38      	pop	{r3, r4, r5, pc}
 8003768:	b118      	cbz	r0, 8003772 <_fflush_r+0x1a>
 800376a:	6983      	ldr	r3, [r0, #24]
 800376c:	b90b      	cbnz	r3, 8003772 <_fflush_r+0x1a>
 800376e:	f000 f887 	bl	8003880 <__sinit>
 8003772:	4b14      	ldr	r3, [pc, #80]	; (80037c4 <_fflush_r+0x6c>)
 8003774:	429c      	cmp	r4, r3
 8003776:	d11b      	bne.n	80037b0 <_fflush_r+0x58>
 8003778:	686c      	ldr	r4, [r5, #4]
 800377a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800377e:	2b00      	cmp	r3, #0
 8003780:	d0ef      	beq.n	8003762 <_fflush_r+0xa>
 8003782:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8003784:	07d0      	lsls	r0, r2, #31
 8003786:	d404      	bmi.n	8003792 <_fflush_r+0x3a>
 8003788:	0599      	lsls	r1, r3, #22
 800378a:	d402      	bmi.n	8003792 <_fflush_r+0x3a>
 800378c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800378e:	f000 f91a 	bl	80039c6 <__retarget_lock_acquire_recursive>
 8003792:	4628      	mov	r0, r5
 8003794:	4621      	mov	r1, r4
 8003796:	f7ff ff5d 	bl	8003654 <__sflush_r>
 800379a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800379c:	4605      	mov	r5, r0
 800379e:	07da      	lsls	r2, r3, #31
 80037a0:	d4e0      	bmi.n	8003764 <_fflush_r+0xc>
 80037a2:	89a3      	ldrh	r3, [r4, #12]
 80037a4:	059b      	lsls	r3, r3, #22
 80037a6:	d4dd      	bmi.n	8003764 <_fflush_r+0xc>
 80037a8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80037aa:	f000 f90d 	bl	80039c8 <__retarget_lock_release_recursive>
 80037ae:	e7d9      	b.n	8003764 <_fflush_r+0xc>
 80037b0:	4b05      	ldr	r3, [pc, #20]	; (80037c8 <_fflush_r+0x70>)
 80037b2:	429c      	cmp	r4, r3
 80037b4:	d101      	bne.n	80037ba <_fflush_r+0x62>
 80037b6:	68ac      	ldr	r4, [r5, #8]
 80037b8:	e7df      	b.n	800377a <_fflush_r+0x22>
 80037ba:	4b04      	ldr	r3, [pc, #16]	; (80037cc <_fflush_r+0x74>)
 80037bc:	429c      	cmp	r4, r3
 80037be:	bf08      	it	eq
 80037c0:	68ec      	ldreq	r4, [r5, #12]
 80037c2:	e7da      	b.n	800377a <_fflush_r+0x22>
 80037c4:	08004e2c 	.word	0x08004e2c
 80037c8:	08004e4c 	.word	0x08004e4c
 80037cc:	08004e0c 	.word	0x08004e0c

080037d0 <std>:
 80037d0:	2300      	movs	r3, #0
 80037d2:	b510      	push	{r4, lr}
 80037d4:	4604      	mov	r4, r0
 80037d6:	e9c0 3300 	strd	r3, r3, [r0]
 80037da:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80037de:	6083      	str	r3, [r0, #8]
 80037e0:	8181      	strh	r1, [r0, #12]
 80037e2:	6643      	str	r3, [r0, #100]	; 0x64
 80037e4:	81c2      	strh	r2, [r0, #14]
 80037e6:	6183      	str	r3, [r0, #24]
 80037e8:	4619      	mov	r1, r3
 80037ea:	2208      	movs	r2, #8
 80037ec:	305c      	adds	r0, #92	; 0x5c
 80037ee:	f7fe fae1 	bl	8001db4 <memset>
 80037f2:	4b05      	ldr	r3, [pc, #20]	; (8003808 <std+0x38>)
 80037f4:	6224      	str	r4, [r4, #32]
 80037f6:	6263      	str	r3, [r4, #36]	; 0x24
 80037f8:	4b04      	ldr	r3, [pc, #16]	; (800380c <std+0x3c>)
 80037fa:	62a3      	str	r3, [r4, #40]	; 0x28
 80037fc:	4b04      	ldr	r3, [pc, #16]	; (8003810 <std+0x40>)
 80037fe:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003800:	4b04      	ldr	r3, [pc, #16]	; (8003814 <std+0x44>)
 8003802:	6323      	str	r3, [r4, #48]	; 0x30
 8003804:	bd10      	pop	{r4, pc}
 8003806:	bf00      	nop
 8003808:	08004699 	.word	0x08004699
 800380c:	080046bb 	.word	0x080046bb
 8003810:	080046f3 	.word	0x080046f3
 8003814:	08004717 	.word	0x08004717

08003818 <_cleanup_r>:
 8003818:	4901      	ldr	r1, [pc, #4]	; (8003820 <_cleanup_r+0x8>)
 800381a:	f000 b8af 	b.w	800397c <_fwalk_reent>
 800381e:	bf00      	nop
 8003820:	08003759 	.word	0x08003759

08003824 <__sfmoreglue>:
 8003824:	2268      	movs	r2, #104	; 0x68
 8003826:	b570      	push	{r4, r5, r6, lr}
 8003828:	1e4d      	subs	r5, r1, #1
 800382a:	4355      	muls	r5, r2
 800382c:	460e      	mov	r6, r1
 800382e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8003832:	f000 fd51 	bl	80042d8 <_malloc_r>
 8003836:	4604      	mov	r4, r0
 8003838:	b140      	cbz	r0, 800384c <__sfmoreglue+0x28>
 800383a:	2100      	movs	r1, #0
 800383c:	e9c0 1600 	strd	r1, r6, [r0]
 8003840:	300c      	adds	r0, #12
 8003842:	60a0      	str	r0, [r4, #8]
 8003844:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8003848:	f7fe fab4 	bl	8001db4 <memset>
 800384c:	4620      	mov	r0, r4
 800384e:	bd70      	pop	{r4, r5, r6, pc}

08003850 <__sfp_lock_acquire>:
 8003850:	4801      	ldr	r0, [pc, #4]	; (8003858 <__sfp_lock_acquire+0x8>)
 8003852:	f000 b8b8 	b.w	80039c6 <__retarget_lock_acquire_recursive>
 8003856:	bf00      	nop
 8003858:	2000020d 	.word	0x2000020d

0800385c <__sfp_lock_release>:
 800385c:	4801      	ldr	r0, [pc, #4]	; (8003864 <__sfp_lock_release+0x8>)
 800385e:	f000 b8b3 	b.w	80039c8 <__retarget_lock_release_recursive>
 8003862:	bf00      	nop
 8003864:	2000020d 	.word	0x2000020d

08003868 <__sinit_lock_acquire>:
 8003868:	4801      	ldr	r0, [pc, #4]	; (8003870 <__sinit_lock_acquire+0x8>)
 800386a:	f000 b8ac 	b.w	80039c6 <__retarget_lock_acquire_recursive>
 800386e:	bf00      	nop
 8003870:	2000020e 	.word	0x2000020e

08003874 <__sinit_lock_release>:
 8003874:	4801      	ldr	r0, [pc, #4]	; (800387c <__sinit_lock_release+0x8>)
 8003876:	f000 b8a7 	b.w	80039c8 <__retarget_lock_release_recursive>
 800387a:	bf00      	nop
 800387c:	2000020e 	.word	0x2000020e

08003880 <__sinit>:
 8003880:	b510      	push	{r4, lr}
 8003882:	4604      	mov	r4, r0
 8003884:	f7ff fff0 	bl	8003868 <__sinit_lock_acquire>
 8003888:	69a3      	ldr	r3, [r4, #24]
 800388a:	b11b      	cbz	r3, 8003894 <__sinit+0x14>
 800388c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003890:	f7ff bff0 	b.w	8003874 <__sinit_lock_release>
 8003894:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8003898:	6523      	str	r3, [r4, #80]	; 0x50
 800389a:	4b13      	ldr	r3, [pc, #76]	; (80038e8 <__sinit+0x68>)
 800389c:	4a13      	ldr	r2, [pc, #76]	; (80038ec <__sinit+0x6c>)
 800389e:	681b      	ldr	r3, [r3, #0]
 80038a0:	62a2      	str	r2, [r4, #40]	; 0x28
 80038a2:	42a3      	cmp	r3, r4
 80038a4:	bf08      	it	eq
 80038a6:	2301      	moveq	r3, #1
 80038a8:	4620      	mov	r0, r4
 80038aa:	bf08      	it	eq
 80038ac:	61a3      	streq	r3, [r4, #24]
 80038ae:	f000 f81f 	bl	80038f0 <__sfp>
 80038b2:	6060      	str	r0, [r4, #4]
 80038b4:	4620      	mov	r0, r4
 80038b6:	f000 f81b 	bl	80038f0 <__sfp>
 80038ba:	60a0      	str	r0, [r4, #8]
 80038bc:	4620      	mov	r0, r4
 80038be:	f000 f817 	bl	80038f0 <__sfp>
 80038c2:	2200      	movs	r2, #0
 80038c4:	2104      	movs	r1, #4
 80038c6:	60e0      	str	r0, [r4, #12]
 80038c8:	6860      	ldr	r0, [r4, #4]
 80038ca:	f7ff ff81 	bl	80037d0 <std>
 80038ce:	2201      	movs	r2, #1
 80038d0:	2109      	movs	r1, #9
 80038d2:	68a0      	ldr	r0, [r4, #8]
 80038d4:	f7ff ff7c 	bl	80037d0 <std>
 80038d8:	2202      	movs	r2, #2
 80038da:	2112      	movs	r1, #18
 80038dc:	68e0      	ldr	r0, [r4, #12]
 80038de:	f7ff ff77 	bl	80037d0 <std>
 80038e2:	2301      	movs	r3, #1
 80038e4:	61a3      	str	r3, [r4, #24]
 80038e6:	e7d1      	b.n	800388c <__sinit+0xc>
 80038e8:	08004d44 	.word	0x08004d44
 80038ec:	08003819 	.word	0x08003819

080038f0 <__sfp>:
 80038f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80038f2:	4607      	mov	r7, r0
 80038f4:	f7ff ffac 	bl	8003850 <__sfp_lock_acquire>
 80038f8:	4b1e      	ldr	r3, [pc, #120]	; (8003974 <__sfp+0x84>)
 80038fa:	681e      	ldr	r6, [r3, #0]
 80038fc:	69b3      	ldr	r3, [r6, #24]
 80038fe:	b913      	cbnz	r3, 8003906 <__sfp+0x16>
 8003900:	4630      	mov	r0, r6
 8003902:	f7ff ffbd 	bl	8003880 <__sinit>
 8003906:	3648      	adds	r6, #72	; 0x48
 8003908:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800390c:	3b01      	subs	r3, #1
 800390e:	d503      	bpl.n	8003918 <__sfp+0x28>
 8003910:	6833      	ldr	r3, [r6, #0]
 8003912:	b30b      	cbz	r3, 8003958 <__sfp+0x68>
 8003914:	6836      	ldr	r6, [r6, #0]
 8003916:	e7f7      	b.n	8003908 <__sfp+0x18>
 8003918:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800391c:	b9d5      	cbnz	r5, 8003954 <__sfp+0x64>
 800391e:	4b16      	ldr	r3, [pc, #88]	; (8003978 <__sfp+0x88>)
 8003920:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8003924:	60e3      	str	r3, [r4, #12]
 8003926:	6665      	str	r5, [r4, #100]	; 0x64
 8003928:	f000 f84c 	bl	80039c4 <__retarget_lock_init_recursive>
 800392c:	f7ff ff96 	bl	800385c <__sfp_lock_release>
 8003930:	2208      	movs	r2, #8
 8003932:	4629      	mov	r1, r5
 8003934:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8003938:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800393c:	6025      	str	r5, [r4, #0]
 800393e:	61a5      	str	r5, [r4, #24]
 8003940:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8003944:	f7fe fa36 	bl	8001db4 <memset>
 8003948:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800394c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8003950:	4620      	mov	r0, r4
 8003952:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003954:	3468      	adds	r4, #104	; 0x68
 8003956:	e7d9      	b.n	800390c <__sfp+0x1c>
 8003958:	2104      	movs	r1, #4
 800395a:	4638      	mov	r0, r7
 800395c:	f7ff ff62 	bl	8003824 <__sfmoreglue>
 8003960:	4604      	mov	r4, r0
 8003962:	6030      	str	r0, [r6, #0]
 8003964:	2800      	cmp	r0, #0
 8003966:	d1d5      	bne.n	8003914 <__sfp+0x24>
 8003968:	f7ff ff78 	bl	800385c <__sfp_lock_release>
 800396c:	230c      	movs	r3, #12
 800396e:	603b      	str	r3, [r7, #0]
 8003970:	e7ee      	b.n	8003950 <__sfp+0x60>
 8003972:	bf00      	nop
 8003974:	08004d44 	.word	0x08004d44
 8003978:	ffff0001 	.word	0xffff0001

0800397c <_fwalk_reent>:
 800397c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003980:	4606      	mov	r6, r0
 8003982:	4688      	mov	r8, r1
 8003984:	2700      	movs	r7, #0
 8003986:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800398a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800398e:	f1b9 0901 	subs.w	r9, r9, #1
 8003992:	d505      	bpl.n	80039a0 <_fwalk_reent+0x24>
 8003994:	6824      	ldr	r4, [r4, #0]
 8003996:	2c00      	cmp	r4, #0
 8003998:	d1f7      	bne.n	800398a <_fwalk_reent+0xe>
 800399a:	4638      	mov	r0, r7
 800399c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80039a0:	89ab      	ldrh	r3, [r5, #12]
 80039a2:	2b01      	cmp	r3, #1
 80039a4:	d907      	bls.n	80039b6 <_fwalk_reent+0x3a>
 80039a6:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80039aa:	3301      	adds	r3, #1
 80039ac:	d003      	beq.n	80039b6 <_fwalk_reent+0x3a>
 80039ae:	4629      	mov	r1, r5
 80039b0:	4630      	mov	r0, r6
 80039b2:	47c0      	blx	r8
 80039b4:	4307      	orrs	r7, r0
 80039b6:	3568      	adds	r5, #104	; 0x68
 80039b8:	e7e9      	b.n	800398e <_fwalk_reent+0x12>
	...

080039bc <_localeconv_r>:
 80039bc:	4800      	ldr	r0, [pc, #0]	; (80039c0 <_localeconv_r+0x4>)
 80039be:	4770      	bx	lr
 80039c0:	20000160 	.word	0x20000160

080039c4 <__retarget_lock_init_recursive>:
 80039c4:	4770      	bx	lr

080039c6 <__retarget_lock_acquire_recursive>:
 80039c6:	4770      	bx	lr

080039c8 <__retarget_lock_release_recursive>:
 80039c8:	4770      	bx	lr

080039ca <__swhatbuf_r>:
 80039ca:	b570      	push	{r4, r5, r6, lr}
 80039cc:	460e      	mov	r6, r1
 80039ce:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80039d2:	4614      	mov	r4, r2
 80039d4:	2900      	cmp	r1, #0
 80039d6:	461d      	mov	r5, r3
 80039d8:	b096      	sub	sp, #88	; 0x58
 80039da:	da08      	bge.n	80039ee <__swhatbuf_r+0x24>
 80039dc:	2200      	movs	r2, #0
 80039de:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 80039e2:	602a      	str	r2, [r5, #0]
 80039e4:	061a      	lsls	r2, r3, #24
 80039e6:	d410      	bmi.n	8003a0a <__swhatbuf_r+0x40>
 80039e8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80039ec:	e00e      	b.n	8003a0c <__swhatbuf_r+0x42>
 80039ee:	466a      	mov	r2, sp
 80039f0:	f000 fee8 	bl	80047c4 <_fstat_r>
 80039f4:	2800      	cmp	r0, #0
 80039f6:	dbf1      	blt.n	80039dc <__swhatbuf_r+0x12>
 80039f8:	9a01      	ldr	r2, [sp, #4]
 80039fa:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80039fe:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8003a02:	425a      	negs	r2, r3
 8003a04:	415a      	adcs	r2, r3
 8003a06:	602a      	str	r2, [r5, #0]
 8003a08:	e7ee      	b.n	80039e8 <__swhatbuf_r+0x1e>
 8003a0a:	2340      	movs	r3, #64	; 0x40
 8003a0c:	2000      	movs	r0, #0
 8003a0e:	6023      	str	r3, [r4, #0]
 8003a10:	b016      	add	sp, #88	; 0x58
 8003a12:	bd70      	pop	{r4, r5, r6, pc}

08003a14 <__smakebuf_r>:
 8003a14:	898b      	ldrh	r3, [r1, #12]
 8003a16:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003a18:	079d      	lsls	r5, r3, #30
 8003a1a:	4606      	mov	r6, r0
 8003a1c:	460c      	mov	r4, r1
 8003a1e:	d507      	bpl.n	8003a30 <__smakebuf_r+0x1c>
 8003a20:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8003a24:	6023      	str	r3, [r4, #0]
 8003a26:	6123      	str	r3, [r4, #16]
 8003a28:	2301      	movs	r3, #1
 8003a2a:	6163      	str	r3, [r4, #20]
 8003a2c:	b002      	add	sp, #8
 8003a2e:	bd70      	pop	{r4, r5, r6, pc}
 8003a30:	466a      	mov	r2, sp
 8003a32:	ab01      	add	r3, sp, #4
 8003a34:	f7ff ffc9 	bl	80039ca <__swhatbuf_r>
 8003a38:	9900      	ldr	r1, [sp, #0]
 8003a3a:	4605      	mov	r5, r0
 8003a3c:	4630      	mov	r0, r6
 8003a3e:	f000 fc4b 	bl	80042d8 <_malloc_r>
 8003a42:	b948      	cbnz	r0, 8003a58 <__smakebuf_r+0x44>
 8003a44:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003a48:	059a      	lsls	r2, r3, #22
 8003a4a:	d4ef      	bmi.n	8003a2c <__smakebuf_r+0x18>
 8003a4c:	f023 0303 	bic.w	r3, r3, #3
 8003a50:	f043 0302 	orr.w	r3, r3, #2
 8003a54:	81a3      	strh	r3, [r4, #12]
 8003a56:	e7e3      	b.n	8003a20 <__smakebuf_r+0xc>
 8003a58:	4b0d      	ldr	r3, [pc, #52]	; (8003a90 <__smakebuf_r+0x7c>)
 8003a5a:	62b3      	str	r3, [r6, #40]	; 0x28
 8003a5c:	89a3      	ldrh	r3, [r4, #12]
 8003a5e:	6020      	str	r0, [r4, #0]
 8003a60:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003a64:	81a3      	strh	r3, [r4, #12]
 8003a66:	9b00      	ldr	r3, [sp, #0]
 8003a68:	6120      	str	r0, [r4, #16]
 8003a6a:	6163      	str	r3, [r4, #20]
 8003a6c:	9b01      	ldr	r3, [sp, #4]
 8003a6e:	b15b      	cbz	r3, 8003a88 <__smakebuf_r+0x74>
 8003a70:	4630      	mov	r0, r6
 8003a72:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003a76:	f000 feb7 	bl	80047e8 <_isatty_r>
 8003a7a:	b128      	cbz	r0, 8003a88 <__smakebuf_r+0x74>
 8003a7c:	89a3      	ldrh	r3, [r4, #12]
 8003a7e:	f023 0303 	bic.w	r3, r3, #3
 8003a82:	f043 0301 	orr.w	r3, r3, #1
 8003a86:	81a3      	strh	r3, [r4, #12]
 8003a88:	89a0      	ldrh	r0, [r4, #12]
 8003a8a:	4305      	orrs	r5, r0
 8003a8c:	81a5      	strh	r5, [r4, #12]
 8003a8e:	e7cd      	b.n	8003a2c <__smakebuf_r+0x18>
 8003a90:	08003819 	.word	0x08003819

08003a94 <malloc>:
 8003a94:	4b02      	ldr	r3, [pc, #8]	; (8003aa0 <malloc+0xc>)
 8003a96:	4601      	mov	r1, r0
 8003a98:	6818      	ldr	r0, [r3, #0]
 8003a9a:	f000 bc1d 	b.w	80042d8 <_malloc_r>
 8003a9e:	bf00      	nop
 8003aa0:	2000000c 	.word	0x2000000c

08003aa4 <memchr>:
 8003aa4:	4603      	mov	r3, r0
 8003aa6:	b510      	push	{r4, lr}
 8003aa8:	b2c9      	uxtb	r1, r1
 8003aaa:	4402      	add	r2, r0
 8003aac:	4293      	cmp	r3, r2
 8003aae:	4618      	mov	r0, r3
 8003ab0:	d101      	bne.n	8003ab6 <memchr+0x12>
 8003ab2:	2000      	movs	r0, #0
 8003ab4:	e003      	b.n	8003abe <memchr+0x1a>
 8003ab6:	7804      	ldrb	r4, [r0, #0]
 8003ab8:	3301      	adds	r3, #1
 8003aba:	428c      	cmp	r4, r1
 8003abc:	d1f6      	bne.n	8003aac <memchr+0x8>
 8003abe:	bd10      	pop	{r4, pc}

08003ac0 <memcpy>:
 8003ac0:	440a      	add	r2, r1
 8003ac2:	4291      	cmp	r1, r2
 8003ac4:	f100 33ff 	add.w	r3, r0, #4294967295
 8003ac8:	d100      	bne.n	8003acc <memcpy+0xc>
 8003aca:	4770      	bx	lr
 8003acc:	b510      	push	{r4, lr}
 8003ace:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003ad2:	4291      	cmp	r1, r2
 8003ad4:	f803 4f01 	strb.w	r4, [r3, #1]!
 8003ad8:	d1f9      	bne.n	8003ace <memcpy+0xe>
 8003ada:	bd10      	pop	{r4, pc}

08003adc <_Balloc>:
 8003adc:	b570      	push	{r4, r5, r6, lr}
 8003ade:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8003ae0:	4604      	mov	r4, r0
 8003ae2:	460d      	mov	r5, r1
 8003ae4:	b976      	cbnz	r6, 8003b04 <_Balloc+0x28>
 8003ae6:	2010      	movs	r0, #16
 8003ae8:	f7ff ffd4 	bl	8003a94 <malloc>
 8003aec:	4602      	mov	r2, r0
 8003aee:	6260      	str	r0, [r4, #36]	; 0x24
 8003af0:	b920      	cbnz	r0, 8003afc <_Balloc+0x20>
 8003af2:	2166      	movs	r1, #102	; 0x66
 8003af4:	4b17      	ldr	r3, [pc, #92]	; (8003b54 <_Balloc+0x78>)
 8003af6:	4818      	ldr	r0, [pc, #96]	; (8003b58 <_Balloc+0x7c>)
 8003af8:	f000 fe24 	bl	8004744 <__assert_func>
 8003afc:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003b00:	6006      	str	r6, [r0, #0]
 8003b02:	60c6      	str	r6, [r0, #12]
 8003b04:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8003b06:	68f3      	ldr	r3, [r6, #12]
 8003b08:	b183      	cbz	r3, 8003b2c <_Balloc+0x50>
 8003b0a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003b0c:	68db      	ldr	r3, [r3, #12]
 8003b0e:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8003b12:	b9b8      	cbnz	r0, 8003b44 <_Balloc+0x68>
 8003b14:	2101      	movs	r1, #1
 8003b16:	fa01 f605 	lsl.w	r6, r1, r5
 8003b1a:	1d72      	adds	r2, r6, #5
 8003b1c:	4620      	mov	r0, r4
 8003b1e:	0092      	lsls	r2, r2, #2
 8003b20:	f000 fb5e 	bl	80041e0 <_calloc_r>
 8003b24:	b160      	cbz	r0, 8003b40 <_Balloc+0x64>
 8003b26:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8003b2a:	e00e      	b.n	8003b4a <_Balloc+0x6e>
 8003b2c:	2221      	movs	r2, #33	; 0x21
 8003b2e:	2104      	movs	r1, #4
 8003b30:	4620      	mov	r0, r4
 8003b32:	f000 fb55 	bl	80041e0 <_calloc_r>
 8003b36:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003b38:	60f0      	str	r0, [r6, #12]
 8003b3a:	68db      	ldr	r3, [r3, #12]
 8003b3c:	2b00      	cmp	r3, #0
 8003b3e:	d1e4      	bne.n	8003b0a <_Balloc+0x2e>
 8003b40:	2000      	movs	r0, #0
 8003b42:	bd70      	pop	{r4, r5, r6, pc}
 8003b44:	6802      	ldr	r2, [r0, #0]
 8003b46:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8003b4a:	2300      	movs	r3, #0
 8003b4c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003b50:	e7f7      	b.n	8003b42 <_Balloc+0x66>
 8003b52:	bf00      	nop
 8003b54:	08004d89 	.word	0x08004d89
 8003b58:	08004e6c 	.word	0x08004e6c

08003b5c <_Bfree>:
 8003b5c:	b570      	push	{r4, r5, r6, lr}
 8003b5e:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8003b60:	4605      	mov	r5, r0
 8003b62:	460c      	mov	r4, r1
 8003b64:	b976      	cbnz	r6, 8003b84 <_Bfree+0x28>
 8003b66:	2010      	movs	r0, #16
 8003b68:	f7ff ff94 	bl	8003a94 <malloc>
 8003b6c:	4602      	mov	r2, r0
 8003b6e:	6268      	str	r0, [r5, #36]	; 0x24
 8003b70:	b920      	cbnz	r0, 8003b7c <_Bfree+0x20>
 8003b72:	218a      	movs	r1, #138	; 0x8a
 8003b74:	4b08      	ldr	r3, [pc, #32]	; (8003b98 <_Bfree+0x3c>)
 8003b76:	4809      	ldr	r0, [pc, #36]	; (8003b9c <_Bfree+0x40>)
 8003b78:	f000 fde4 	bl	8004744 <__assert_func>
 8003b7c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003b80:	6006      	str	r6, [r0, #0]
 8003b82:	60c6      	str	r6, [r0, #12]
 8003b84:	b13c      	cbz	r4, 8003b96 <_Bfree+0x3a>
 8003b86:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8003b88:	6862      	ldr	r2, [r4, #4]
 8003b8a:	68db      	ldr	r3, [r3, #12]
 8003b8c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003b90:	6021      	str	r1, [r4, #0]
 8003b92:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8003b96:	bd70      	pop	{r4, r5, r6, pc}
 8003b98:	08004d89 	.word	0x08004d89
 8003b9c:	08004e6c 	.word	0x08004e6c

08003ba0 <__multadd>:
 8003ba0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003ba4:	4607      	mov	r7, r0
 8003ba6:	460c      	mov	r4, r1
 8003ba8:	461e      	mov	r6, r3
 8003baa:	2000      	movs	r0, #0
 8003bac:	690d      	ldr	r5, [r1, #16]
 8003bae:	f101 0c14 	add.w	ip, r1, #20
 8003bb2:	f8dc 3000 	ldr.w	r3, [ip]
 8003bb6:	3001      	adds	r0, #1
 8003bb8:	b299      	uxth	r1, r3
 8003bba:	fb02 6101 	mla	r1, r2, r1, r6
 8003bbe:	0c1e      	lsrs	r6, r3, #16
 8003bc0:	0c0b      	lsrs	r3, r1, #16
 8003bc2:	fb02 3306 	mla	r3, r2, r6, r3
 8003bc6:	b289      	uxth	r1, r1
 8003bc8:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8003bcc:	4285      	cmp	r5, r0
 8003bce:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8003bd2:	f84c 1b04 	str.w	r1, [ip], #4
 8003bd6:	dcec      	bgt.n	8003bb2 <__multadd+0x12>
 8003bd8:	b30e      	cbz	r6, 8003c1e <__multadd+0x7e>
 8003bda:	68a3      	ldr	r3, [r4, #8]
 8003bdc:	42ab      	cmp	r3, r5
 8003bde:	dc19      	bgt.n	8003c14 <__multadd+0x74>
 8003be0:	6861      	ldr	r1, [r4, #4]
 8003be2:	4638      	mov	r0, r7
 8003be4:	3101      	adds	r1, #1
 8003be6:	f7ff ff79 	bl	8003adc <_Balloc>
 8003bea:	4680      	mov	r8, r0
 8003bec:	b928      	cbnz	r0, 8003bfa <__multadd+0x5a>
 8003bee:	4602      	mov	r2, r0
 8003bf0:	21b5      	movs	r1, #181	; 0xb5
 8003bf2:	4b0c      	ldr	r3, [pc, #48]	; (8003c24 <__multadd+0x84>)
 8003bf4:	480c      	ldr	r0, [pc, #48]	; (8003c28 <__multadd+0x88>)
 8003bf6:	f000 fda5 	bl	8004744 <__assert_func>
 8003bfa:	6922      	ldr	r2, [r4, #16]
 8003bfc:	f104 010c 	add.w	r1, r4, #12
 8003c00:	3202      	adds	r2, #2
 8003c02:	0092      	lsls	r2, r2, #2
 8003c04:	300c      	adds	r0, #12
 8003c06:	f7ff ff5b 	bl	8003ac0 <memcpy>
 8003c0a:	4621      	mov	r1, r4
 8003c0c:	4638      	mov	r0, r7
 8003c0e:	f7ff ffa5 	bl	8003b5c <_Bfree>
 8003c12:	4644      	mov	r4, r8
 8003c14:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8003c18:	3501      	adds	r5, #1
 8003c1a:	615e      	str	r6, [r3, #20]
 8003c1c:	6125      	str	r5, [r4, #16]
 8003c1e:	4620      	mov	r0, r4
 8003c20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003c24:	08004dfb 	.word	0x08004dfb
 8003c28:	08004e6c 	.word	0x08004e6c

08003c2c <__hi0bits>:
 8003c2c:	0c02      	lsrs	r2, r0, #16
 8003c2e:	0412      	lsls	r2, r2, #16
 8003c30:	4603      	mov	r3, r0
 8003c32:	b9ca      	cbnz	r2, 8003c68 <__hi0bits+0x3c>
 8003c34:	0403      	lsls	r3, r0, #16
 8003c36:	2010      	movs	r0, #16
 8003c38:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8003c3c:	bf04      	itt	eq
 8003c3e:	021b      	lsleq	r3, r3, #8
 8003c40:	3008      	addeq	r0, #8
 8003c42:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8003c46:	bf04      	itt	eq
 8003c48:	011b      	lsleq	r3, r3, #4
 8003c4a:	3004      	addeq	r0, #4
 8003c4c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8003c50:	bf04      	itt	eq
 8003c52:	009b      	lsleq	r3, r3, #2
 8003c54:	3002      	addeq	r0, #2
 8003c56:	2b00      	cmp	r3, #0
 8003c58:	db05      	blt.n	8003c66 <__hi0bits+0x3a>
 8003c5a:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 8003c5e:	f100 0001 	add.w	r0, r0, #1
 8003c62:	bf08      	it	eq
 8003c64:	2020      	moveq	r0, #32
 8003c66:	4770      	bx	lr
 8003c68:	2000      	movs	r0, #0
 8003c6a:	e7e5      	b.n	8003c38 <__hi0bits+0xc>

08003c6c <__lo0bits>:
 8003c6c:	6803      	ldr	r3, [r0, #0]
 8003c6e:	4602      	mov	r2, r0
 8003c70:	f013 0007 	ands.w	r0, r3, #7
 8003c74:	d00b      	beq.n	8003c8e <__lo0bits+0x22>
 8003c76:	07d9      	lsls	r1, r3, #31
 8003c78:	d421      	bmi.n	8003cbe <__lo0bits+0x52>
 8003c7a:	0798      	lsls	r0, r3, #30
 8003c7c:	bf49      	itett	mi
 8003c7e:	085b      	lsrmi	r3, r3, #1
 8003c80:	089b      	lsrpl	r3, r3, #2
 8003c82:	2001      	movmi	r0, #1
 8003c84:	6013      	strmi	r3, [r2, #0]
 8003c86:	bf5c      	itt	pl
 8003c88:	2002      	movpl	r0, #2
 8003c8a:	6013      	strpl	r3, [r2, #0]
 8003c8c:	4770      	bx	lr
 8003c8e:	b299      	uxth	r1, r3
 8003c90:	b909      	cbnz	r1, 8003c96 <__lo0bits+0x2a>
 8003c92:	2010      	movs	r0, #16
 8003c94:	0c1b      	lsrs	r3, r3, #16
 8003c96:	b2d9      	uxtb	r1, r3
 8003c98:	b909      	cbnz	r1, 8003c9e <__lo0bits+0x32>
 8003c9a:	3008      	adds	r0, #8
 8003c9c:	0a1b      	lsrs	r3, r3, #8
 8003c9e:	0719      	lsls	r1, r3, #28
 8003ca0:	bf04      	itt	eq
 8003ca2:	091b      	lsreq	r3, r3, #4
 8003ca4:	3004      	addeq	r0, #4
 8003ca6:	0799      	lsls	r1, r3, #30
 8003ca8:	bf04      	itt	eq
 8003caa:	089b      	lsreq	r3, r3, #2
 8003cac:	3002      	addeq	r0, #2
 8003cae:	07d9      	lsls	r1, r3, #31
 8003cb0:	d403      	bmi.n	8003cba <__lo0bits+0x4e>
 8003cb2:	085b      	lsrs	r3, r3, #1
 8003cb4:	f100 0001 	add.w	r0, r0, #1
 8003cb8:	d003      	beq.n	8003cc2 <__lo0bits+0x56>
 8003cba:	6013      	str	r3, [r2, #0]
 8003cbc:	4770      	bx	lr
 8003cbe:	2000      	movs	r0, #0
 8003cc0:	4770      	bx	lr
 8003cc2:	2020      	movs	r0, #32
 8003cc4:	4770      	bx	lr
	...

08003cc8 <__i2b>:
 8003cc8:	b510      	push	{r4, lr}
 8003cca:	460c      	mov	r4, r1
 8003ccc:	2101      	movs	r1, #1
 8003cce:	f7ff ff05 	bl	8003adc <_Balloc>
 8003cd2:	4602      	mov	r2, r0
 8003cd4:	b928      	cbnz	r0, 8003ce2 <__i2b+0x1a>
 8003cd6:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8003cda:	4b04      	ldr	r3, [pc, #16]	; (8003cec <__i2b+0x24>)
 8003cdc:	4804      	ldr	r0, [pc, #16]	; (8003cf0 <__i2b+0x28>)
 8003cde:	f000 fd31 	bl	8004744 <__assert_func>
 8003ce2:	2301      	movs	r3, #1
 8003ce4:	6144      	str	r4, [r0, #20]
 8003ce6:	6103      	str	r3, [r0, #16]
 8003ce8:	bd10      	pop	{r4, pc}
 8003cea:	bf00      	nop
 8003cec:	08004dfb 	.word	0x08004dfb
 8003cf0:	08004e6c 	.word	0x08004e6c

08003cf4 <__multiply>:
 8003cf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003cf8:	4691      	mov	r9, r2
 8003cfa:	690a      	ldr	r2, [r1, #16]
 8003cfc:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8003d00:	460c      	mov	r4, r1
 8003d02:	429a      	cmp	r2, r3
 8003d04:	bfbe      	ittt	lt
 8003d06:	460b      	movlt	r3, r1
 8003d08:	464c      	movlt	r4, r9
 8003d0a:	4699      	movlt	r9, r3
 8003d0c:	6927      	ldr	r7, [r4, #16]
 8003d0e:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8003d12:	68a3      	ldr	r3, [r4, #8]
 8003d14:	6861      	ldr	r1, [r4, #4]
 8003d16:	eb07 060a 	add.w	r6, r7, sl
 8003d1a:	42b3      	cmp	r3, r6
 8003d1c:	b085      	sub	sp, #20
 8003d1e:	bfb8      	it	lt
 8003d20:	3101      	addlt	r1, #1
 8003d22:	f7ff fedb 	bl	8003adc <_Balloc>
 8003d26:	b930      	cbnz	r0, 8003d36 <__multiply+0x42>
 8003d28:	4602      	mov	r2, r0
 8003d2a:	f240 115d 	movw	r1, #349	; 0x15d
 8003d2e:	4b43      	ldr	r3, [pc, #268]	; (8003e3c <__multiply+0x148>)
 8003d30:	4843      	ldr	r0, [pc, #268]	; (8003e40 <__multiply+0x14c>)
 8003d32:	f000 fd07 	bl	8004744 <__assert_func>
 8003d36:	f100 0514 	add.w	r5, r0, #20
 8003d3a:	462b      	mov	r3, r5
 8003d3c:	2200      	movs	r2, #0
 8003d3e:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8003d42:	4543      	cmp	r3, r8
 8003d44:	d321      	bcc.n	8003d8a <__multiply+0x96>
 8003d46:	f104 0314 	add.w	r3, r4, #20
 8003d4a:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8003d4e:	f109 0314 	add.w	r3, r9, #20
 8003d52:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 8003d56:	9202      	str	r2, [sp, #8]
 8003d58:	1b3a      	subs	r2, r7, r4
 8003d5a:	3a15      	subs	r2, #21
 8003d5c:	f022 0203 	bic.w	r2, r2, #3
 8003d60:	3204      	adds	r2, #4
 8003d62:	f104 0115 	add.w	r1, r4, #21
 8003d66:	428f      	cmp	r7, r1
 8003d68:	bf38      	it	cc
 8003d6a:	2204      	movcc	r2, #4
 8003d6c:	9201      	str	r2, [sp, #4]
 8003d6e:	9a02      	ldr	r2, [sp, #8]
 8003d70:	9303      	str	r3, [sp, #12]
 8003d72:	429a      	cmp	r2, r3
 8003d74:	d80c      	bhi.n	8003d90 <__multiply+0x9c>
 8003d76:	2e00      	cmp	r6, #0
 8003d78:	dd03      	ble.n	8003d82 <__multiply+0x8e>
 8003d7a:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8003d7e:	2b00      	cmp	r3, #0
 8003d80:	d059      	beq.n	8003e36 <__multiply+0x142>
 8003d82:	6106      	str	r6, [r0, #16]
 8003d84:	b005      	add	sp, #20
 8003d86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003d8a:	f843 2b04 	str.w	r2, [r3], #4
 8003d8e:	e7d8      	b.n	8003d42 <__multiply+0x4e>
 8003d90:	f8b3 a000 	ldrh.w	sl, [r3]
 8003d94:	f1ba 0f00 	cmp.w	sl, #0
 8003d98:	d023      	beq.n	8003de2 <__multiply+0xee>
 8003d9a:	46a9      	mov	r9, r5
 8003d9c:	f04f 0c00 	mov.w	ip, #0
 8003da0:	f104 0e14 	add.w	lr, r4, #20
 8003da4:	f85e 2b04 	ldr.w	r2, [lr], #4
 8003da8:	f8d9 1000 	ldr.w	r1, [r9]
 8003dac:	fa1f fb82 	uxth.w	fp, r2
 8003db0:	b289      	uxth	r1, r1
 8003db2:	fb0a 110b 	mla	r1, sl, fp, r1
 8003db6:	4461      	add	r1, ip
 8003db8:	f8d9 c000 	ldr.w	ip, [r9]
 8003dbc:	0c12      	lsrs	r2, r2, #16
 8003dbe:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8003dc2:	fb0a c202 	mla	r2, sl, r2, ip
 8003dc6:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8003dca:	b289      	uxth	r1, r1
 8003dcc:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8003dd0:	4577      	cmp	r7, lr
 8003dd2:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8003dd6:	f849 1b04 	str.w	r1, [r9], #4
 8003dda:	d8e3      	bhi.n	8003da4 <__multiply+0xb0>
 8003ddc:	9a01      	ldr	r2, [sp, #4]
 8003dde:	f845 c002 	str.w	ip, [r5, r2]
 8003de2:	9a03      	ldr	r2, [sp, #12]
 8003de4:	3304      	adds	r3, #4
 8003de6:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8003dea:	f1b9 0f00 	cmp.w	r9, #0
 8003dee:	d020      	beq.n	8003e32 <__multiply+0x13e>
 8003df0:	46ae      	mov	lr, r5
 8003df2:	f04f 0a00 	mov.w	sl, #0
 8003df6:	6829      	ldr	r1, [r5, #0]
 8003df8:	f104 0c14 	add.w	ip, r4, #20
 8003dfc:	f8bc b000 	ldrh.w	fp, [ip]
 8003e00:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8003e04:	b289      	uxth	r1, r1
 8003e06:	fb09 220b 	mla	r2, r9, fp, r2
 8003e0a:	4492      	add	sl, r2
 8003e0c:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 8003e10:	f84e 1b04 	str.w	r1, [lr], #4
 8003e14:	f85c 2b04 	ldr.w	r2, [ip], #4
 8003e18:	f8be 1000 	ldrh.w	r1, [lr]
 8003e1c:	0c12      	lsrs	r2, r2, #16
 8003e1e:	fb09 1102 	mla	r1, r9, r2, r1
 8003e22:	4567      	cmp	r7, ip
 8003e24:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 8003e28:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8003e2c:	d8e6      	bhi.n	8003dfc <__multiply+0x108>
 8003e2e:	9a01      	ldr	r2, [sp, #4]
 8003e30:	50a9      	str	r1, [r5, r2]
 8003e32:	3504      	adds	r5, #4
 8003e34:	e79b      	b.n	8003d6e <__multiply+0x7a>
 8003e36:	3e01      	subs	r6, #1
 8003e38:	e79d      	b.n	8003d76 <__multiply+0x82>
 8003e3a:	bf00      	nop
 8003e3c:	08004dfb 	.word	0x08004dfb
 8003e40:	08004e6c 	.word	0x08004e6c

08003e44 <__pow5mult>:
 8003e44:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003e48:	4615      	mov	r5, r2
 8003e4a:	f012 0203 	ands.w	r2, r2, #3
 8003e4e:	4606      	mov	r6, r0
 8003e50:	460f      	mov	r7, r1
 8003e52:	d007      	beq.n	8003e64 <__pow5mult+0x20>
 8003e54:	4c25      	ldr	r4, [pc, #148]	; (8003eec <__pow5mult+0xa8>)
 8003e56:	3a01      	subs	r2, #1
 8003e58:	2300      	movs	r3, #0
 8003e5a:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8003e5e:	f7ff fe9f 	bl	8003ba0 <__multadd>
 8003e62:	4607      	mov	r7, r0
 8003e64:	10ad      	asrs	r5, r5, #2
 8003e66:	d03d      	beq.n	8003ee4 <__pow5mult+0xa0>
 8003e68:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8003e6a:	b97c      	cbnz	r4, 8003e8c <__pow5mult+0x48>
 8003e6c:	2010      	movs	r0, #16
 8003e6e:	f7ff fe11 	bl	8003a94 <malloc>
 8003e72:	4602      	mov	r2, r0
 8003e74:	6270      	str	r0, [r6, #36]	; 0x24
 8003e76:	b928      	cbnz	r0, 8003e84 <__pow5mult+0x40>
 8003e78:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 8003e7c:	4b1c      	ldr	r3, [pc, #112]	; (8003ef0 <__pow5mult+0xac>)
 8003e7e:	481d      	ldr	r0, [pc, #116]	; (8003ef4 <__pow5mult+0xb0>)
 8003e80:	f000 fc60 	bl	8004744 <__assert_func>
 8003e84:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8003e88:	6004      	str	r4, [r0, #0]
 8003e8a:	60c4      	str	r4, [r0, #12]
 8003e8c:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8003e90:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8003e94:	b94c      	cbnz	r4, 8003eaa <__pow5mult+0x66>
 8003e96:	f240 2171 	movw	r1, #625	; 0x271
 8003e9a:	4630      	mov	r0, r6
 8003e9c:	f7ff ff14 	bl	8003cc8 <__i2b>
 8003ea0:	2300      	movs	r3, #0
 8003ea2:	4604      	mov	r4, r0
 8003ea4:	f8c8 0008 	str.w	r0, [r8, #8]
 8003ea8:	6003      	str	r3, [r0, #0]
 8003eaa:	f04f 0900 	mov.w	r9, #0
 8003eae:	07eb      	lsls	r3, r5, #31
 8003eb0:	d50a      	bpl.n	8003ec8 <__pow5mult+0x84>
 8003eb2:	4639      	mov	r1, r7
 8003eb4:	4622      	mov	r2, r4
 8003eb6:	4630      	mov	r0, r6
 8003eb8:	f7ff ff1c 	bl	8003cf4 <__multiply>
 8003ebc:	4680      	mov	r8, r0
 8003ebe:	4639      	mov	r1, r7
 8003ec0:	4630      	mov	r0, r6
 8003ec2:	f7ff fe4b 	bl	8003b5c <_Bfree>
 8003ec6:	4647      	mov	r7, r8
 8003ec8:	106d      	asrs	r5, r5, #1
 8003eca:	d00b      	beq.n	8003ee4 <__pow5mult+0xa0>
 8003ecc:	6820      	ldr	r0, [r4, #0]
 8003ece:	b938      	cbnz	r0, 8003ee0 <__pow5mult+0x9c>
 8003ed0:	4622      	mov	r2, r4
 8003ed2:	4621      	mov	r1, r4
 8003ed4:	4630      	mov	r0, r6
 8003ed6:	f7ff ff0d 	bl	8003cf4 <__multiply>
 8003eda:	6020      	str	r0, [r4, #0]
 8003edc:	f8c0 9000 	str.w	r9, [r0]
 8003ee0:	4604      	mov	r4, r0
 8003ee2:	e7e4      	b.n	8003eae <__pow5mult+0x6a>
 8003ee4:	4638      	mov	r0, r7
 8003ee6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003eea:	bf00      	nop
 8003eec:	08004fb8 	.word	0x08004fb8
 8003ef0:	08004d89 	.word	0x08004d89
 8003ef4:	08004e6c 	.word	0x08004e6c

08003ef8 <__lshift>:
 8003ef8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003efc:	460c      	mov	r4, r1
 8003efe:	4607      	mov	r7, r0
 8003f00:	4691      	mov	r9, r2
 8003f02:	6923      	ldr	r3, [r4, #16]
 8003f04:	6849      	ldr	r1, [r1, #4]
 8003f06:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8003f0a:	68a3      	ldr	r3, [r4, #8]
 8003f0c:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8003f10:	f108 0601 	add.w	r6, r8, #1
 8003f14:	42b3      	cmp	r3, r6
 8003f16:	db0b      	blt.n	8003f30 <__lshift+0x38>
 8003f18:	4638      	mov	r0, r7
 8003f1a:	f7ff fddf 	bl	8003adc <_Balloc>
 8003f1e:	4605      	mov	r5, r0
 8003f20:	b948      	cbnz	r0, 8003f36 <__lshift+0x3e>
 8003f22:	4602      	mov	r2, r0
 8003f24:	f240 11d9 	movw	r1, #473	; 0x1d9
 8003f28:	4b29      	ldr	r3, [pc, #164]	; (8003fd0 <__lshift+0xd8>)
 8003f2a:	482a      	ldr	r0, [pc, #168]	; (8003fd4 <__lshift+0xdc>)
 8003f2c:	f000 fc0a 	bl	8004744 <__assert_func>
 8003f30:	3101      	adds	r1, #1
 8003f32:	005b      	lsls	r3, r3, #1
 8003f34:	e7ee      	b.n	8003f14 <__lshift+0x1c>
 8003f36:	2300      	movs	r3, #0
 8003f38:	f100 0114 	add.w	r1, r0, #20
 8003f3c:	f100 0210 	add.w	r2, r0, #16
 8003f40:	4618      	mov	r0, r3
 8003f42:	4553      	cmp	r3, sl
 8003f44:	db37      	blt.n	8003fb6 <__lshift+0xbe>
 8003f46:	6920      	ldr	r0, [r4, #16]
 8003f48:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8003f4c:	f104 0314 	add.w	r3, r4, #20
 8003f50:	f019 091f 	ands.w	r9, r9, #31
 8003f54:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8003f58:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8003f5c:	d02f      	beq.n	8003fbe <__lshift+0xc6>
 8003f5e:	468a      	mov	sl, r1
 8003f60:	f04f 0c00 	mov.w	ip, #0
 8003f64:	f1c9 0e20 	rsb	lr, r9, #32
 8003f68:	681a      	ldr	r2, [r3, #0]
 8003f6a:	fa02 f209 	lsl.w	r2, r2, r9
 8003f6e:	ea42 020c 	orr.w	r2, r2, ip
 8003f72:	f84a 2b04 	str.w	r2, [sl], #4
 8003f76:	f853 2b04 	ldr.w	r2, [r3], #4
 8003f7a:	4298      	cmp	r0, r3
 8003f7c:	fa22 fc0e 	lsr.w	ip, r2, lr
 8003f80:	d8f2      	bhi.n	8003f68 <__lshift+0x70>
 8003f82:	1b03      	subs	r3, r0, r4
 8003f84:	3b15      	subs	r3, #21
 8003f86:	f023 0303 	bic.w	r3, r3, #3
 8003f8a:	3304      	adds	r3, #4
 8003f8c:	f104 0215 	add.w	r2, r4, #21
 8003f90:	4290      	cmp	r0, r2
 8003f92:	bf38      	it	cc
 8003f94:	2304      	movcc	r3, #4
 8003f96:	f841 c003 	str.w	ip, [r1, r3]
 8003f9a:	f1bc 0f00 	cmp.w	ip, #0
 8003f9e:	d001      	beq.n	8003fa4 <__lshift+0xac>
 8003fa0:	f108 0602 	add.w	r6, r8, #2
 8003fa4:	3e01      	subs	r6, #1
 8003fa6:	4638      	mov	r0, r7
 8003fa8:	4621      	mov	r1, r4
 8003faa:	612e      	str	r6, [r5, #16]
 8003fac:	f7ff fdd6 	bl	8003b5c <_Bfree>
 8003fb0:	4628      	mov	r0, r5
 8003fb2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003fb6:	f842 0f04 	str.w	r0, [r2, #4]!
 8003fba:	3301      	adds	r3, #1
 8003fbc:	e7c1      	b.n	8003f42 <__lshift+0x4a>
 8003fbe:	3904      	subs	r1, #4
 8003fc0:	f853 2b04 	ldr.w	r2, [r3], #4
 8003fc4:	4298      	cmp	r0, r3
 8003fc6:	f841 2f04 	str.w	r2, [r1, #4]!
 8003fca:	d8f9      	bhi.n	8003fc0 <__lshift+0xc8>
 8003fcc:	e7ea      	b.n	8003fa4 <__lshift+0xac>
 8003fce:	bf00      	nop
 8003fd0:	08004dfb 	.word	0x08004dfb
 8003fd4:	08004e6c 	.word	0x08004e6c

08003fd8 <__mcmp>:
 8003fd8:	4603      	mov	r3, r0
 8003fda:	690a      	ldr	r2, [r1, #16]
 8003fdc:	6900      	ldr	r0, [r0, #16]
 8003fde:	b530      	push	{r4, r5, lr}
 8003fe0:	1a80      	subs	r0, r0, r2
 8003fe2:	d10d      	bne.n	8004000 <__mcmp+0x28>
 8003fe4:	3314      	adds	r3, #20
 8003fe6:	3114      	adds	r1, #20
 8003fe8:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8003fec:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8003ff0:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8003ff4:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8003ff8:	4295      	cmp	r5, r2
 8003ffa:	d002      	beq.n	8004002 <__mcmp+0x2a>
 8003ffc:	d304      	bcc.n	8004008 <__mcmp+0x30>
 8003ffe:	2001      	movs	r0, #1
 8004000:	bd30      	pop	{r4, r5, pc}
 8004002:	42a3      	cmp	r3, r4
 8004004:	d3f4      	bcc.n	8003ff0 <__mcmp+0x18>
 8004006:	e7fb      	b.n	8004000 <__mcmp+0x28>
 8004008:	f04f 30ff 	mov.w	r0, #4294967295
 800400c:	e7f8      	b.n	8004000 <__mcmp+0x28>
	...

08004010 <__mdiff>:
 8004010:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004014:	460d      	mov	r5, r1
 8004016:	4607      	mov	r7, r0
 8004018:	4611      	mov	r1, r2
 800401a:	4628      	mov	r0, r5
 800401c:	4614      	mov	r4, r2
 800401e:	f7ff ffdb 	bl	8003fd8 <__mcmp>
 8004022:	1e06      	subs	r6, r0, #0
 8004024:	d111      	bne.n	800404a <__mdiff+0x3a>
 8004026:	4631      	mov	r1, r6
 8004028:	4638      	mov	r0, r7
 800402a:	f7ff fd57 	bl	8003adc <_Balloc>
 800402e:	4602      	mov	r2, r0
 8004030:	b928      	cbnz	r0, 800403e <__mdiff+0x2e>
 8004032:	f240 2132 	movw	r1, #562	; 0x232
 8004036:	4b3a      	ldr	r3, [pc, #232]	; (8004120 <__mdiff+0x110>)
 8004038:	483a      	ldr	r0, [pc, #232]	; (8004124 <__mdiff+0x114>)
 800403a:	f000 fb83 	bl	8004744 <__assert_func>
 800403e:	2301      	movs	r3, #1
 8004040:	e9c0 3604 	strd	r3, r6, [r0, #16]
 8004044:	4610      	mov	r0, r2
 8004046:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800404a:	bfa4      	itt	ge
 800404c:	4623      	movge	r3, r4
 800404e:	462c      	movge	r4, r5
 8004050:	4638      	mov	r0, r7
 8004052:	6861      	ldr	r1, [r4, #4]
 8004054:	bfa6      	itte	ge
 8004056:	461d      	movge	r5, r3
 8004058:	2600      	movge	r6, #0
 800405a:	2601      	movlt	r6, #1
 800405c:	f7ff fd3e 	bl	8003adc <_Balloc>
 8004060:	4602      	mov	r2, r0
 8004062:	b918      	cbnz	r0, 800406c <__mdiff+0x5c>
 8004064:	f44f 7110 	mov.w	r1, #576	; 0x240
 8004068:	4b2d      	ldr	r3, [pc, #180]	; (8004120 <__mdiff+0x110>)
 800406a:	e7e5      	b.n	8004038 <__mdiff+0x28>
 800406c:	f102 0814 	add.w	r8, r2, #20
 8004070:	46c2      	mov	sl, r8
 8004072:	f04f 0c00 	mov.w	ip, #0
 8004076:	6927      	ldr	r7, [r4, #16]
 8004078:	60c6      	str	r6, [r0, #12]
 800407a:	692e      	ldr	r6, [r5, #16]
 800407c:	f104 0014 	add.w	r0, r4, #20
 8004080:	f105 0914 	add.w	r9, r5, #20
 8004084:	eb00 0e87 	add.w	lr, r0, r7, lsl #2
 8004088:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 800408c:	3410      	adds	r4, #16
 800408e:	f854 bf04 	ldr.w	fp, [r4, #4]!
 8004092:	f859 3b04 	ldr.w	r3, [r9], #4
 8004096:	fa1f f18b 	uxth.w	r1, fp
 800409a:	448c      	add	ip, r1
 800409c:	b299      	uxth	r1, r3
 800409e:	0c1b      	lsrs	r3, r3, #16
 80040a0:	ebac 0101 	sub.w	r1, ip, r1
 80040a4:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 80040a8:	eb03 4321 	add.w	r3, r3, r1, asr #16
 80040ac:	b289      	uxth	r1, r1
 80040ae:	ea4f 4c23 	mov.w	ip, r3, asr #16
 80040b2:	454e      	cmp	r6, r9
 80040b4:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 80040b8:	f84a 3b04 	str.w	r3, [sl], #4
 80040bc:	d8e7      	bhi.n	800408e <__mdiff+0x7e>
 80040be:	1b73      	subs	r3, r6, r5
 80040c0:	3b15      	subs	r3, #21
 80040c2:	f023 0303 	bic.w	r3, r3, #3
 80040c6:	3515      	adds	r5, #21
 80040c8:	3304      	adds	r3, #4
 80040ca:	42ae      	cmp	r6, r5
 80040cc:	bf38      	it	cc
 80040ce:	2304      	movcc	r3, #4
 80040d0:	4418      	add	r0, r3
 80040d2:	4443      	add	r3, r8
 80040d4:	461e      	mov	r6, r3
 80040d6:	4605      	mov	r5, r0
 80040d8:	4575      	cmp	r5, lr
 80040da:	d30e      	bcc.n	80040fa <__mdiff+0xea>
 80040dc:	f10e 0103 	add.w	r1, lr, #3
 80040e0:	1a09      	subs	r1, r1, r0
 80040e2:	f021 0103 	bic.w	r1, r1, #3
 80040e6:	3803      	subs	r0, #3
 80040e8:	4586      	cmp	lr, r0
 80040ea:	bf38      	it	cc
 80040ec:	2100      	movcc	r1, #0
 80040ee:	4419      	add	r1, r3
 80040f0:	f851 3d04 	ldr.w	r3, [r1, #-4]!
 80040f4:	b18b      	cbz	r3, 800411a <__mdiff+0x10a>
 80040f6:	6117      	str	r7, [r2, #16]
 80040f8:	e7a4      	b.n	8004044 <__mdiff+0x34>
 80040fa:	f855 8b04 	ldr.w	r8, [r5], #4
 80040fe:	fa1f f188 	uxth.w	r1, r8
 8004102:	4461      	add	r1, ip
 8004104:	140c      	asrs	r4, r1, #16
 8004106:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 800410a:	b289      	uxth	r1, r1
 800410c:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8004110:	ea4f 4c24 	mov.w	ip, r4, asr #16
 8004114:	f846 1b04 	str.w	r1, [r6], #4
 8004118:	e7de      	b.n	80040d8 <__mdiff+0xc8>
 800411a:	3f01      	subs	r7, #1
 800411c:	e7e8      	b.n	80040f0 <__mdiff+0xe0>
 800411e:	bf00      	nop
 8004120:	08004dfb 	.word	0x08004dfb
 8004124:	08004e6c 	.word	0x08004e6c

08004128 <__d2b>:
 8004128:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800412c:	2101      	movs	r1, #1
 800412e:	e9dd 7608 	ldrd	r7, r6, [sp, #32]
 8004132:	4690      	mov	r8, r2
 8004134:	461d      	mov	r5, r3
 8004136:	f7ff fcd1 	bl	8003adc <_Balloc>
 800413a:	4604      	mov	r4, r0
 800413c:	b930      	cbnz	r0, 800414c <__d2b+0x24>
 800413e:	4602      	mov	r2, r0
 8004140:	f240 310a 	movw	r1, #778	; 0x30a
 8004144:	4b24      	ldr	r3, [pc, #144]	; (80041d8 <__d2b+0xb0>)
 8004146:	4825      	ldr	r0, [pc, #148]	; (80041dc <__d2b+0xb4>)
 8004148:	f000 fafc 	bl	8004744 <__assert_func>
 800414c:	f3c5 0313 	ubfx	r3, r5, #0, #20
 8004150:	f3c5 550a 	ubfx	r5, r5, #20, #11
 8004154:	bb2d      	cbnz	r5, 80041a2 <__d2b+0x7a>
 8004156:	9301      	str	r3, [sp, #4]
 8004158:	f1b8 0300 	subs.w	r3, r8, #0
 800415c:	d026      	beq.n	80041ac <__d2b+0x84>
 800415e:	4668      	mov	r0, sp
 8004160:	9300      	str	r3, [sp, #0]
 8004162:	f7ff fd83 	bl	8003c6c <__lo0bits>
 8004166:	9900      	ldr	r1, [sp, #0]
 8004168:	b1f0      	cbz	r0, 80041a8 <__d2b+0x80>
 800416a:	9a01      	ldr	r2, [sp, #4]
 800416c:	f1c0 0320 	rsb	r3, r0, #32
 8004170:	fa02 f303 	lsl.w	r3, r2, r3
 8004174:	430b      	orrs	r3, r1
 8004176:	40c2      	lsrs	r2, r0
 8004178:	6163      	str	r3, [r4, #20]
 800417a:	9201      	str	r2, [sp, #4]
 800417c:	9b01      	ldr	r3, [sp, #4]
 800417e:	2b00      	cmp	r3, #0
 8004180:	bf14      	ite	ne
 8004182:	2102      	movne	r1, #2
 8004184:	2101      	moveq	r1, #1
 8004186:	61a3      	str	r3, [r4, #24]
 8004188:	6121      	str	r1, [r4, #16]
 800418a:	b1c5      	cbz	r5, 80041be <__d2b+0x96>
 800418c:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8004190:	4405      	add	r5, r0
 8004192:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8004196:	603d      	str	r5, [r7, #0]
 8004198:	6030      	str	r0, [r6, #0]
 800419a:	4620      	mov	r0, r4
 800419c:	b002      	add	sp, #8
 800419e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80041a2:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80041a6:	e7d6      	b.n	8004156 <__d2b+0x2e>
 80041a8:	6161      	str	r1, [r4, #20]
 80041aa:	e7e7      	b.n	800417c <__d2b+0x54>
 80041ac:	a801      	add	r0, sp, #4
 80041ae:	f7ff fd5d 	bl	8003c6c <__lo0bits>
 80041b2:	2101      	movs	r1, #1
 80041b4:	9b01      	ldr	r3, [sp, #4]
 80041b6:	6121      	str	r1, [r4, #16]
 80041b8:	6163      	str	r3, [r4, #20]
 80041ba:	3020      	adds	r0, #32
 80041bc:	e7e5      	b.n	800418a <__d2b+0x62>
 80041be:	eb04 0381 	add.w	r3, r4, r1, lsl #2
 80041c2:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 80041c6:	6038      	str	r0, [r7, #0]
 80041c8:	6918      	ldr	r0, [r3, #16]
 80041ca:	f7ff fd2f 	bl	8003c2c <__hi0bits>
 80041ce:	ebc0 1141 	rsb	r1, r0, r1, lsl #5
 80041d2:	6031      	str	r1, [r6, #0]
 80041d4:	e7e1      	b.n	800419a <__d2b+0x72>
 80041d6:	bf00      	nop
 80041d8:	08004dfb 	.word	0x08004dfb
 80041dc:	08004e6c 	.word	0x08004e6c

080041e0 <_calloc_r>:
 80041e0:	b570      	push	{r4, r5, r6, lr}
 80041e2:	fba1 5402 	umull	r5, r4, r1, r2
 80041e6:	b934      	cbnz	r4, 80041f6 <_calloc_r+0x16>
 80041e8:	4629      	mov	r1, r5
 80041ea:	f000 f875 	bl	80042d8 <_malloc_r>
 80041ee:	4606      	mov	r6, r0
 80041f0:	b928      	cbnz	r0, 80041fe <_calloc_r+0x1e>
 80041f2:	4630      	mov	r0, r6
 80041f4:	bd70      	pop	{r4, r5, r6, pc}
 80041f6:	220c      	movs	r2, #12
 80041f8:	2600      	movs	r6, #0
 80041fa:	6002      	str	r2, [r0, #0]
 80041fc:	e7f9      	b.n	80041f2 <_calloc_r+0x12>
 80041fe:	462a      	mov	r2, r5
 8004200:	4621      	mov	r1, r4
 8004202:	f7fd fdd7 	bl	8001db4 <memset>
 8004206:	e7f4      	b.n	80041f2 <_calloc_r+0x12>

08004208 <_free_r>:
 8004208:	b538      	push	{r3, r4, r5, lr}
 800420a:	4605      	mov	r5, r0
 800420c:	2900      	cmp	r1, #0
 800420e:	d040      	beq.n	8004292 <_free_r+0x8a>
 8004210:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004214:	1f0c      	subs	r4, r1, #4
 8004216:	2b00      	cmp	r3, #0
 8004218:	bfb8      	it	lt
 800421a:	18e4      	addlt	r4, r4, r3
 800421c:	f000 fb32 	bl	8004884 <__malloc_lock>
 8004220:	4a1c      	ldr	r2, [pc, #112]	; (8004294 <_free_r+0x8c>)
 8004222:	6813      	ldr	r3, [r2, #0]
 8004224:	b933      	cbnz	r3, 8004234 <_free_r+0x2c>
 8004226:	6063      	str	r3, [r4, #4]
 8004228:	6014      	str	r4, [r2, #0]
 800422a:	4628      	mov	r0, r5
 800422c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004230:	f000 bb2e 	b.w	8004890 <__malloc_unlock>
 8004234:	42a3      	cmp	r3, r4
 8004236:	d908      	bls.n	800424a <_free_r+0x42>
 8004238:	6820      	ldr	r0, [r4, #0]
 800423a:	1821      	adds	r1, r4, r0
 800423c:	428b      	cmp	r3, r1
 800423e:	bf01      	itttt	eq
 8004240:	6819      	ldreq	r1, [r3, #0]
 8004242:	685b      	ldreq	r3, [r3, #4]
 8004244:	1809      	addeq	r1, r1, r0
 8004246:	6021      	streq	r1, [r4, #0]
 8004248:	e7ed      	b.n	8004226 <_free_r+0x1e>
 800424a:	461a      	mov	r2, r3
 800424c:	685b      	ldr	r3, [r3, #4]
 800424e:	b10b      	cbz	r3, 8004254 <_free_r+0x4c>
 8004250:	42a3      	cmp	r3, r4
 8004252:	d9fa      	bls.n	800424a <_free_r+0x42>
 8004254:	6811      	ldr	r1, [r2, #0]
 8004256:	1850      	adds	r0, r2, r1
 8004258:	42a0      	cmp	r0, r4
 800425a:	d10b      	bne.n	8004274 <_free_r+0x6c>
 800425c:	6820      	ldr	r0, [r4, #0]
 800425e:	4401      	add	r1, r0
 8004260:	1850      	adds	r0, r2, r1
 8004262:	4283      	cmp	r3, r0
 8004264:	6011      	str	r1, [r2, #0]
 8004266:	d1e0      	bne.n	800422a <_free_r+0x22>
 8004268:	6818      	ldr	r0, [r3, #0]
 800426a:	685b      	ldr	r3, [r3, #4]
 800426c:	4401      	add	r1, r0
 800426e:	6011      	str	r1, [r2, #0]
 8004270:	6053      	str	r3, [r2, #4]
 8004272:	e7da      	b.n	800422a <_free_r+0x22>
 8004274:	d902      	bls.n	800427c <_free_r+0x74>
 8004276:	230c      	movs	r3, #12
 8004278:	602b      	str	r3, [r5, #0]
 800427a:	e7d6      	b.n	800422a <_free_r+0x22>
 800427c:	6820      	ldr	r0, [r4, #0]
 800427e:	1821      	adds	r1, r4, r0
 8004280:	428b      	cmp	r3, r1
 8004282:	bf01      	itttt	eq
 8004284:	6819      	ldreq	r1, [r3, #0]
 8004286:	685b      	ldreq	r3, [r3, #4]
 8004288:	1809      	addeq	r1, r1, r0
 800428a:	6021      	streq	r1, [r4, #0]
 800428c:	6063      	str	r3, [r4, #4]
 800428e:	6054      	str	r4, [r2, #4]
 8004290:	e7cb      	b.n	800422a <_free_r+0x22>
 8004292:	bd38      	pop	{r3, r4, r5, pc}
 8004294:	20000210 	.word	0x20000210

08004298 <sbrk_aligned>:
 8004298:	b570      	push	{r4, r5, r6, lr}
 800429a:	4e0e      	ldr	r6, [pc, #56]	; (80042d4 <sbrk_aligned+0x3c>)
 800429c:	460c      	mov	r4, r1
 800429e:	6831      	ldr	r1, [r6, #0]
 80042a0:	4605      	mov	r5, r0
 80042a2:	b911      	cbnz	r1, 80042aa <sbrk_aligned+0x12>
 80042a4:	f000 f9e8 	bl	8004678 <_sbrk_r>
 80042a8:	6030      	str	r0, [r6, #0]
 80042aa:	4621      	mov	r1, r4
 80042ac:	4628      	mov	r0, r5
 80042ae:	f000 f9e3 	bl	8004678 <_sbrk_r>
 80042b2:	1c43      	adds	r3, r0, #1
 80042b4:	d00a      	beq.n	80042cc <sbrk_aligned+0x34>
 80042b6:	1cc4      	adds	r4, r0, #3
 80042b8:	f024 0403 	bic.w	r4, r4, #3
 80042bc:	42a0      	cmp	r0, r4
 80042be:	d007      	beq.n	80042d0 <sbrk_aligned+0x38>
 80042c0:	1a21      	subs	r1, r4, r0
 80042c2:	4628      	mov	r0, r5
 80042c4:	f000 f9d8 	bl	8004678 <_sbrk_r>
 80042c8:	3001      	adds	r0, #1
 80042ca:	d101      	bne.n	80042d0 <sbrk_aligned+0x38>
 80042cc:	f04f 34ff 	mov.w	r4, #4294967295
 80042d0:	4620      	mov	r0, r4
 80042d2:	bd70      	pop	{r4, r5, r6, pc}
 80042d4:	20000214 	.word	0x20000214

080042d8 <_malloc_r>:
 80042d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80042dc:	1ccd      	adds	r5, r1, #3
 80042de:	f025 0503 	bic.w	r5, r5, #3
 80042e2:	3508      	adds	r5, #8
 80042e4:	2d0c      	cmp	r5, #12
 80042e6:	bf38      	it	cc
 80042e8:	250c      	movcc	r5, #12
 80042ea:	2d00      	cmp	r5, #0
 80042ec:	4607      	mov	r7, r0
 80042ee:	db01      	blt.n	80042f4 <_malloc_r+0x1c>
 80042f0:	42a9      	cmp	r1, r5
 80042f2:	d905      	bls.n	8004300 <_malloc_r+0x28>
 80042f4:	230c      	movs	r3, #12
 80042f6:	2600      	movs	r6, #0
 80042f8:	603b      	str	r3, [r7, #0]
 80042fa:	4630      	mov	r0, r6
 80042fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004300:	4e2e      	ldr	r6, [pc, #184]	; (80043bc <_malloc_r+0xe4>)
 8004302:	f000 fabf 	bl	8004884 <__malloc_lock>
 8004306:	6833      	ldr	r3, [r6, #0]
 8004308:	461c      	mov	r4, r3
 800430a:	bb34      	cbnz	r4, 800435a <_malloc_r+0x82>
 800430c:	4629      	mov	r1, r5
 800430e:	4638      	mov	r0, r7
 8004310:	f7ff ffc2 	bl	8004298 <sbrk_aligned>
 8004314:	1c43      	adds	r3, r0, #1
 8004316:	4604      	mov	r4, r0
 8004318:	d14d      	bne.n	80043b6 <_malloc_r+0xde>
 800431a:	6834      	ldr	r4, [r6, #0]
 800431c:	4626      	mov	r6, r4
 800431e:	2e00      	cmp	r6, #0
 8004320:	d140      	bne.n	80043a4 <_malloc_r+0xcc>
 8004322:	6823      	ldr	r3, [r4, #0]
 8004324:	4631      	mov	r1, r6
 8004326:	4638      	mov	r0, r7
 8004328:	eb04 0803 	add.w	r8, r4, r3
 800432c:	f000 f9a4 	bl	8004678 <_sbrk_r>
 8004330:	4580      	cmp	r8, r0
 8004332:	d13a      	bne.n	80043aa <_malloc_r+0xd2>
 8004334:	6821      	ldr	r1, [r4, #0]
 8004336:	3503      	adds	r5, #3
 8004338:	1a6d      	subs	r5, r5, r1
 800433a:	f025 0503 	bic.w	r5, r5, #3
 800433e:	3508      	adds	r5, #8
 8004340:	2d0c      	cmp	r5, #12
 8004342:	bf38      	it	cc
 8004344:	250c      	movcc	r5, #12
 8004346:	4638      	mov	r0, r7
 8004348:	4629      	mov	r1, r5
 800434a:	f7ff ffa5 	bl	8004298 <sbrk_aligned>
 800434e:	3001      	adds	r0, #1
 8004350:	d02b      	beq.n	80043aa <_malloc_r+0xd2>
 8004352:	6823      	ldr	r3, [r4, #0]
 8004354:	442b      	add	r3, r5
 8004356:	6023      	str	r3, [r4, #0]
 8004358:	e00e      	b.n	8004378 <_malloc_r+0xa0>
 800435a:	6822      	ldr	r2, [r4, #0]
 800435c:	1b52      	subs	r2, r2, r5
 800435e:	d41e      	bmi.n	800439e <_malloc_r+0xc6>
 8004360:	2a0b      	cmp	r2, #11
 8004362:	d916      	bls.n	8004392 <_malloc_r+0xba>
 8004364:	1961      	adds	r1, r4, r5
 8004366:	42a3      	cmp	r3, r4
 8004368:	6025      	str	r5, [r4, #0]
 800436a:	bf18      	it	ne
 800436c:	6059      	strne	r1, [r3, #4]
 800436e:	6863      	ldr	r3, [r4, #4]
 8004370:	bf08      	it	eq
 8004372:	6031      	streq	r1, [r6, #0]
 8004374:	5162      	str	r2, [r4, r5]
 8004376:	604b      	str	r3, [r1, #4]
 8004378:	4638      	mov	r0, r7
 800437a:	f104 060b 	add.w	r6, r4, #11
 800437e:	f000 fa87 	bl	8004890 <__malloc_unlock>
 8004382:	f026 0607 	bic.w	r6, r6, #7
 8004386:	1d23      	adds	r3, r4, #4
 8004388:	1af2      	subs	r2, r6, r3
 800438a:	d0b6      	beq.n	80042fa <_malloc_r+0x22>
 800438c:	1b9b      	subs	r3, r3, r6
 800438e:	50a3      	str	r3, [r4, r2]
 8004390:	e7b3      	b.n	80042fa <_malloc_r+0x22>
 8004392:	6862      	ldr	r2, [r4, #4]
 8004394:	42a3      	cmp	r3, r4
 8004396:	bf0c      	ite	eq
 8004398:	6032      	streq	r2, [r6, #0]
 800439a:	605a      	strne	r2, [r3, #4]
 800439c:	e7ec      	b.n	8004378 <_malloc_r+0xa0>
 800439e:	4623      	mov	r3, r4
 80043a0:	6864      	ldr	r4, [r4, #4]
 80043a2:	e7b2      	b.n	800430a <_malloc_r+0x32>
 80043a4:	4634      	mov	r4, r6
 80043a6:	6876      	ldr	r6, [r6, #4]
 80043a8:	e7b9      	b.n	800431e <_malloc_r+0x46>
 80043aa:	230c      	movs	r3, #12
 80043ac:	4638      	mov	r0, r7
 80043ae:	603b      	str	r3, [r7, #0]
 80043b0:	f000 fa6e 	bl	8004890 <__malloc_unlock>
 80043b4:	e7a1      	b.n	80042fa <_malloc_r+0x22>
 80043b6:	6025      	str	r5, [r4, #0]
 80043b8:	e7de      	b.n	8004378 <_malloc_r+0xa0>
 80043ba:	bf00      	nop
 80043bc:	20000210 	.word	0x20000210

080043c0 <__ssputs_r>:
 80043c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80043c4:	688e      	ldr	r6, [r1, #8]
 80043c6:	4682      	mov	sl, r0
 80043c8:	429e      	cmp	r6, r3
 80043ca:	460c      	mov	r4, r1
 80043cc:	4690      	mov	r8, r2
 80043ce:	461f      	mov	r7, r3
 80043d0:	d838      	bhi.n	8004444 <__ssputs_r+0x84>
 80043d2:	898a      	ldrh	r2, [r1, #12]
 80043d4:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80043d8:	d032      	beq.n	8004440 <__ssputs_r+0x80>
 80043da:	6825      	ldr	r5, [r4, #0]
 80043dc:	6909      	ldr	r1, [r1, #16]
 80043de:	3301      	adds	r3, #1
 80043e0:	eba5 0901 	sub.w	r9, r5, r1
 80043e4:	6965      	ldr	r5, [r4, #20]
 80043e6:	444b      	add	r3, r9
 80043e8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80043ec:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80043f0:	106d      	asrs	r5, r5, #1
 80043f2:	429d      	cmp	r5, r3
 80043f4:	bf38      	it	cc
 80043f6:	461d      	movcc	r5, r3
 80043f8:	0553      	lsls	r3, r2, #21
 80043fa:	d531      	bpl.n	8004460 <__ssputs_r+0xa0>
 80043fc:	4629      	mov	r1, r5
 80043fe:	f7ff ff6b 	bl	80042d8 <_malloc_r>
 8004402:	4606      	mov	r6, r0
 8004404:	b950      	cbnz	r0, 800441c <__ssputs_r+0x5c>
 8004406:	230c      	movs	r3, #12
 8004408:	f04f 30ff 	mov.w	r0, #4294967295
 800440c:	f8ca 3000 	str.w	r3, [sl]
 8004410:	89a3      	ldrh	r3, [r4, #12]
 8004412:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004416:	81a3      	strh	r3, [r4, #12]
 8004418:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800441c:	464a      	mov	r2, r9
 800441e:	6921      	ldr	r1, [r4, #16]
 8004420:	f7ff fb4e 	bl	8003ac0 <memcpy>
 8004424:	89a3      	ldrh	r3, [r4, #12]
 8004426:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800442a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800442e:	81a3      	strh	r3, [r4, #12]
 8004430:	6126      	str	r6, [r4, #16]
 8004432:	444e      	add	r6, r9
 8004434:	6026      	str	r6, [r4, #0]
 8004436:	463e      	mov	r6, r7
 8004438:	6165      	str	r5, [r4, #20]
 800443a:	eba5 0509 	sub.w	r5, r5, r9
 800443e:	60a5      	str	r5, [r4, #8]
 8004440:	42be      	cmp	r6, r7
 8004442:	d900      	bls.n	8004446 <__ssputs_r+0x86>
 8004444:	463e      	mov	r6, r7
 8004446:	4632      	mov	r2, r6
 8004448:	4641      	mov	r1, r8
 800444a:	6820      	ldr	r0, [r4, #0]
 800444c:	f000 fa00 	bl	8004850 <memmove>
 8004450:	68a3      	ldr	r3, [r4, #8]
 8004452:	2000      	movs	r0, #0
 8004454:	1b9b      	subs	r3, r3, r6
 8004456:	60a3      	str	r3, [r4, #8]
 8004458:	6823      	ldr	r3, [r4, #0]
 800445a:	4433      	add	r3, r6
 800445c:	6023      	str	r3, [r4, #0]
 800445e:	e7db      	b.n	8004418 <__ssputs_r+0x58>
 8004460:	462a      	mov	r2, r5
 8004462:	f000 fa1b 	bl	800489c <_realloc_r>
 8004466:	4606      	mov	r6, r0
 8004468:	2800      	cmp	r0, #0
 800446a:	d1e1      	bne.n	8004430 <__ssputs_r+0x70>
 800446c:	4650      	mov	r0, sl
 800446e:	6921      	ldr	r1, [r4, #16]
 8004470:	f7ff feca 	bl	8004208 <_free_r>
 8004474:	e7c7      	b.n	8004406 <__ssputs_r+0x46>
	...

08004478 <_svfiprintf_r>:
 8004478:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800447c:	4698      	mov	r8, r3
 800447e:	898b      	ldrh	r3, [r1, #12]
 8004480:	4607      	mov	r7, r0
 8004482:	061b      	lsls	r3, r3, #24
 8004484:	460d      	mov	r5, r1
 8004486:	4614      	mov	r4, r2
 8004488:	b09d      	sub	sp, #116	; 0x74
 800448a:	d50e      	bpl.n	80044aa <_svfiprintf_r+0x32>
 800448c:	690b      	ldr	r3, [r1, #16]
 800448e:	b963      	cbnz	r3, 80044aa <_svfiprintf_r+0x32>
 8004490:	2140      	movs	r1, #64	; 0x40
 8004492:	f7ff ff21 	bl	80042d8 <_malloc_r>
 8004496:	6028      	str	r0, [r5, #0]
 8004498:	6128      	str	r0, [r5, #16]
 800449a:	b920      	cbnz	r0, 80044a6 <_svfiprintf_r+0x2e>
 800449c:	230c      	movs	r3, #12
 800449e:	603b      	str	r3, [r7, #0]
 80044a0:	f04f 30ff 	mov.w	r0, #4294967295
 80044a4:	e0d1      	b.n	800464a <_svfiprintf_r+0x1d2>
 80044a6:	2340      	movs	r3, #64	; 0x40
 80044a8:	616b      	str	r3, [r5, #20]
 80044aa:	2300      	movs	r3, #0
 80044ac:	9309      	str	r3, [sp, #36]	; 0x24
 80044ae:	2320      	movs	r3, #32
 80044b0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80044b4:	2330      	movs	r3, #48	; 0x30
 80044b6:	f04f 0901 	mov.w	r9, #1
 80044ba:	f8cd 800c 	str.w	r8, [sp, #12]
 80044be:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8004664 <_svfiprintf_r+0x1ec>
 80044c2:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80044c6:	4623      	mov	r3, r4
 80044c8:	469a      	mov	sl, r3
 80044ca:	f813 2b01 	ldrb.w	r2, [r3], #1
 80044ce:	b10a      	cbz	r2, 80044d4 <_svfiprintf_r+0x5c>
 80044d0:	2a25      	cmp	r2, #37	; 0x25
 80044d2:	d1f9      	bne.n	80044c8 <_svfiprintf_r+0x50>
 80044d4:	ebba 0b04 	subs.w	fp, sl, r4
 80044d8:	d00b      	beq.n	80044f2 <_svfiprintf_r+0x7a>
 80044da:	465b      	mov	r3, fp
 80044dc:	4622      	mov	r2, r4
 80044de:	4629      	mov	r1, r5
 80044e0:	4638      	mov	r0, r7
 80044e2:	f7ff ff6d 	bl	80043c0 <__ssputs_r>
 80044e6:	3001      	adds	r0, #1
 80044e8:	f000 80aa 	beq.w	8004640 <_svfiprintf_r+0x1c8>
 80044ec:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80044ee:	445a      	add	r2, fp
 80044f0:	9209      	str	r2, [sp, #36]	; 0x24
 80044f2:	f89a 3000 	ldrb.w	r3, [sl]
 80044f6:	2b00      	cmp	r3, #0
 80044f8:	f000 80a2 	beq.w	8004640 <_svfiprintf_r+0x1c8>
 80044fc:	2300      	movs	r3, #0
 80044fe:	f04f 32ff 	mov.w	r2, #4294967295
 8004502:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004506:	f10a 0a01 	add.w	sl, sl, #1
 800450a:	9304      	str	r3, [sp, #16]
 800450c:	9307      	str	r3, [sp, #28]
 800450e:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8004512:	931a      	str	r3, [sp, #104]	; 0x68
 8004514:	4654      	mov	r4, sl
 8004516:	2205      	movs	r2, #5
 8004518:	f814 1b01 	ldrb.w	r1, [r4], #1
 800451c:	4851      	ldr	r0, [pc, #324]	; (8004664 <_svfiprintf_r+0x1ec>)
 800451e:	f7ff fac1 	bl	8003aa4 <memchr>
 8004522:	9a04      	ldr	r2, [sp, #16]
 8004524:	b9d8      	cbnz	r0, 800455e <_svfiprintf_r+0xe6>
 8004526:	06d0      	lsls	r0, r2, #27
 8004528:	bf44      	itt	mi
 800452a:	2320      	movmi	r3, #32
 800452c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8004530:	0711      	lsls	r1, r2, #28
 8004532:	bf44      	itt	mi
 8004534:	232b      	movmi	r3, #43	; 0x2b
 8004536:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800453a:	f89a 3000 	ldrb.w	r3, [sl]
 800453e:	2b2a      	cmp	r3, #42	; 0x2a
 8004540:	d015      	beq.n	800456e <_svfiprintf_r+0xf6>
 8004542:	4654      	mov	r4, sl
 8004544:	2000      	movs	r0, #0
 8004546:	f04f 0c0a 	mov.w	ip, #10
 800454a:	9a07      	ldr	r2, [sp, #28]
 800454c:	4621      	mov	r1, r4
 800454e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004552:	3b30      	subs	r3, #48	; 0x30
 8004554:	2b09      	cmp	r3, #9
 8004556:	d94e      	bls.n	80045f6 <_svfiprintf_r+0x17e>
 8004558:	b1b0      	cbz	r0, 8004588 <_svfiprintf_r+0x110>
 800455a:	9207      	str	r2, [sp, #28]
 800455c:	e014      	b.n	8004588 <_svfiprintf_r+0x110>
 800455e:	eba0 0308 	sub.w	r3, r0, r8
 8004562:	fa09 f303 	lsl.w	r3, r9, r3
 8004566:	4313      	orrs	r3, r2
 8004568:	46a2      	mov	sl, r4
 800456a:	9304      	str	r3, [sp, #16]
 800456c:	e7d2      	b.n	8004514 <_svfiprintf_r+0x9c>
 800456e:	9b03      	ldr	r3, [sp, #12]
 8004570:	1d19      	adds	r1, r3, #4
 8004572:	681b      	ldr	r3, [r3, #0]
 8004574:	9103      	str	r1, [sp, #12]
 8004576:	2b00      	cmp	r3, #0
 8004578:	bfbb      	ittet	lt
 800457a:	425b      	neglt	r3, r3
 800457c:	f042 0202 	orrlt.w	r2, r2, #2
 8004580:	9307      	strge	r3, [sp, #28]
 8004582:	9307      	strlt	r3, [sp, #28]
 8004584:	bfb8      	it	lt
 8004586:	9204      	strlt	r2, [sp, #16]
 8004588:	7823      	ldrb	r3, [r4, #0]
 800458a:	2b2e      	cmp	r3, #46	; 0x2e
 800458c:	d10c      	bne.n	80045a8 <_svfiprintf_r+0x130>
 800458e:	7863      	ldrb	r3, [r4, #1]
 8004590:	2b2a      	cmp	r3, #42	; 0x2a
 8004592:	d135      	bne.n	8004600 <_svfiprintf_r+0x188>
 8004594:	9b03      	ldr	r3, [sp, #12]
 8004596:	3402      	adds	r4, #2
 8004598:	1d1a      	adds	r2, r3, #4
 800459a:	681b      	ldr	r3, [r3, #0]
 800459c:	9203      	str	r2, [sp, #12]
 800459e:	2b00      	cmp	r3, #0
 80045a0:	bfb8      	it	lt
 80045a2:	f04f 33ff 	movlt.w	r3, #4294967295
 80045a6:	9305      	str	r3, [sp, #20]
 80045a8:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 8004668 <_svfiprintf_r+0x1f0>
 80045ac:	2203      	movs	r2, #3
 80045ae:	4650      	mov	r0, sl
 80045b0:	7821      	ldrb	r1, [r4, #0]
 80045b2:	f7ff fa77 	bl	8003aa4 <memchr>
 80045b6:	b140      	cbz	r0, 80045ca <_svfiprintf_r+0x152>
 80045b8:	2340      	movs	r3, #64	; 0x40
 80045ba:	eba0 000a 	sub.w	r0, r0, sl
 80045be:	fa03 f000 	lsl.w	r0, r3, r0
 80045c2:	9b04      	ldr	r3, [sp, #16]
 80045c4:	3401      	adds	r4, #1
 80045c6:	4303      	orrs	r3, r0
 80045c8:	9304      	str	r3, [sp, #16]
 80045ca:	f814 1b01 	ldrb.w	r1, [r4], #1
 80045ce:	2206      	movs	r2, #6
 80045d0:	4826      	ldr	r0, [pc, #152]	; (800466c <_svfiprintf_r+0x1f4>)
 80045d2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80045d6:	f7ff fa65 	bl	8003aa4 <memchr>
 80045da:	2800      	cmp	r0, #0
 80045dc:	d038      	beq.n	8004650 <_svfiprintf_r+0x1d8>
 80045de:	4b24      	ldr	r3, [pc, #144]	; (8004670 <_svfiprintf_r+0x1f8>)
 80045e0:	bb1b      	cbnz	r3, 800462a <_svfiprintf_r+0x1b2>
 80045e2:	9b03      	ldr	r3, [sp, #12]
 80045e4:	3307      	adds	r3, #7
 80045e6:	f023 0307 	bic.w	r3, r3, #7
 80045ea:	3308      	adds	r3, #8
 80045ec:	9303      	str	r3, [sp, #12]
 80045ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80045f0:	4433      	add	r3, r6
 80045f2:	9309      	str	r3, [sp, #36]	; 0x24
 80045f4:	e767      	b.n	80044c6 <_svfiprintf_r+0x4e>
 80045f6:	460c      	mov	r4, r1
 80045f8:	2001      	movs	r0, #1
 80045fa:	fb0c 3202 	mla	r2, ip, r2, r3
 80045fe:	e7a5      	b.n	800454c <_svfiprintf_r+0xd4>
 8004600:	2300      	movs	r3, #0
 8004602:	f04f 0c0a 	mov.w	ip, #10
 8004606:	4619      	mov	r1, r3
 8004608:	3401      	adds	r4, #1
 800460a:	9305      	str	r3, [sp, #20]
 800460c:	4620      	mov	r0, r4
 800460e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004612:	3a30      	subs	r2, #48	; 0x30
 8004614:	2a09      	cmp	r2, #9
 8004616:	d903      	bls.n	8004620 <_svfiprintf_r+0x1a8>
 8004618:	2b00      	cmp	r3, #0
 800461a:	d0c5      	beq.n	80045a8 <_svfiprintf_r+0x130>
 800461c:	9105      	str	r1, [sp, #20]
 800461e:	e7c3      	b.n	80045a8 <_svfiprintf_r+0x130>
 8004620:	4604      	mov	r4, r0
 8004622:	2301      	movs	r3, #1
 8004624:	fb0c 2101 	mla	r1, ip, r1, r2
 8004628:	e7f0      	b.n	800460c <_svfiprintf_r+0x194>
 800462a:	ab03      	add	r3, sp, #12
 800462c:	9300      	str	r3, [sp, #0]
 800462e:	462a      	mov	r2, r5
 8004630:	4638      	mov	r0, r7
 8004632:	4b10      	ldr	r3, [pc, #64]	; (8004674 <_svfiprintf_r+0x1fc>)
 8004634:	a904      	add	r1, sp, #16
 8004636:	f7fd fc63 	bl	8001f00 <_printf_float>
 800463a:	1c42      	adds	r2, r0, #1
 800463c:	4606      	mov	r6, r0
 800463e:	d1d6      	bne.n	80045ee <_svfiprintf_r+0x176>
 8004640:	89ab      	ldrh	r3, [r5, #12]
 8004642:	065b      	lsls	r3, r3, #25
 8004644:	f53f af2c 	bmi.w	80044a0 <_svfiprintf_r+0x28>
 8004648:	9809      	ldr	r0, [sp, #36]	; 0x24
 800464a:	b01d      	add	sp, #116	; 0x74
 800464c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004650:	ab03      	add	r3, sp, #12
 8004652:	9300      	str	r3, [sp, #0]
 8004654:	462a      	mov	r2, r5
 8004656:	4638      	mov	r0, r7
 8004658:	4b06      	ldr	r3, [pc, #24]	; (8004674 <_svfiprintf_r+0x1fc>)
 800465a:	a904      	add	r1, sp, #16
 800465c:	f7fd feec 	bl	8002438 <_printf_i>
 8004660:	e7eb      	b.n	800463a <_svfiprintf_r+0x1c2>
 8004662:	bf00      	nop
 8004664:	08004fc4 	.word	0x08004fc4
 8004668:	08004fca 	.word	0x08004fca
 800466c:	08004fce 	.word	0x08004fce
 8004670:	08001f01 	.word	0x08001f01
 8004674:	080043c1 	.word	0x080043c1

08004678 <_sbrk_r>:
 8004678:	b538      	push	{r3, r4, r5, lr}
 800467a:	2300      	movs	r3, #0
 800467c:	4d05      	ldr	r5, [pc, #20]	; (8004694 <_sbrk_r+0x1c>)
 800467e:	4604      	mov	r4, r0
 8004680:	4608      	mov	r0, r1
 8004682:	602b      	str	r3, [r5, #0]
 8004684:	f000 fb3a 	bl	8004cfc <_sbrk>
 8004688:	1c43      	adds	r3, r0, #1
 800468a:	d102      	bne.n	8004692 <_sbrk_r+0x1a>
 800468c:	682b      	ldr	r3, [r5, #0]
 800468e:	b103      	cbz	r3, 8004692 <_sbrk_r+0x1a>
 8004690:	6023      	str	r3, [r4, #0]
 8004692:	bd38      	pop	{r3, r4, r5, pc}
 8004694:	20000218 	.word	0x20000218

08004698 <__sread>:
 8004698:	b510      	push	{r4, lr}
 800469a:	460c      	mov	r4, r1
 800469c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80046a0:	f000 fa82 	bl	8004ba8 <_read_r>
 80046a4:	2800      	cmp	r0, #0
 80046a6:	bfab      	itete	ge
 80046a8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80046aa:	89a3      	ldrhlt	r3, [r4, #12]
 80046ac:	181b      	addge	r3, r3, r0
 80046ae:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80046b2:	bfac      	ite	ge
 80046b4:	6563      	strge	r3, [r4, #84]	; 0x54
 80046b6:	81a3      	strhlt	r3, [r4, #12]
 80046b8:	bd10      	pop	{r4, pc}

080046ba <__swrite>:
 80046ba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80046be:	461f      	mov	r7, r3
 80046c0:	898b      	ldrh	r3, [r1, #12]
 80046c2:	4605      	mov	r5, r0
 80046c4:	05db      	lsls	r3, r3, #23
 80046c6:	460c      	mov	r4, r1
 80046c8:	4616      	mov	r6, r2
 80046ca:	d505      	bpl.n	80046d8 <__swrite+0x1e>
 80046cc:	2302      	movs	r3, #2
 80046ce:	2200      	movs	r2, #0
 80046d0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80046d4:	f000 f898 	bl	8004808 <_lseek_r>
 80046d8:	89a3      	ldrh	r3, [r4, #12]
 80046da:	4632      	mov	r2, r6
 80046dc:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80046e0:	81a3      	strh	r3, [r4, #12]
 80046e2:	4628      	mov	r0, r5
 80046e4:	463b      	mov	r3, r7
 80046e6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80046ea:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80046ee:	f000 b817 	b.w	8004720 <_write_r>

080046f2 <__sseek>:
 80046f2:	b510      	push	{r4, lr}
 80046f4:	460c      	mov	r4, r1
 80046f6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80046fa:	f000 f885 	bl	8004808 <_lseek_r>
 80046fe:	1c43      	adds	r3, r0, #1
 8004700:	89a3      	ldrh	r3, [r4, #12]
 8004702:	bf15      	itete	ne
 8004704:	6560      	strne	r0, [r4, #84]	; 0x54
 8004706:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800470a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800470e:	81a3      	strheq	r3, [r4, #12]
 8004710:	bf18      	it	ne
 8004712:	81a3      	strhne	r3, [r4, #12]
 8004714:	bd10      	pop	{r4, pc}

08004716 <__sclose>:
 8004716:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800471a:	f000 b831 	b.w	8004780 <_close_r>
	...

08004720 <_write_r>:
 8004720:	b538      	push	{r3, r4, r5, lr}
 8004722:	4604      	mov	r4, r0
 8004724:	4608      	mov	r0, r1
 8004726:	4611      	mov	r1, r2
 8004728:	2200      	movs	r2, #0
 800472a:	4d05      	ldr	r5, [pc, #20]	; (8004740 <_write_r+0x20>)
 800472c:	602a      	str	r2, [r5, #0]
 800472e:	461a      	mov	r2, r3
 8004730:	f7fc fd63 	bl	80011fa <_write>
 8004734:	1c43      	adds	r3, r0, #1
 8004736:	d102      	bne.n	800473e <_write_r+0x1e>
 8004738:	682b      	ldr	r3, [r5, #0]
 800473a:	b103      	cbz	r3, 800473e <_write_r+0x1e>
 800473c:	6023      	str	r3, [r4, #0]
 800473e:	bd38      	pop	{r3, r4, r5, pc}
 8004740:	20000218 	.word	0x20000218

08004744 <__assert_func>:
 8004744:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8004746:	4614      	mov	r4, r2
 8004748:	461a      	mov	r2, r3
 800474a:	4b09      	ldr	r3, [pc, #36]	; (8004770 <__assert_func+0x2c>)
 800474c:	4605      	mov	r5, r0
 800474e:	681b      	ldr	r3, [r3, #0]
 8004750:	68d8      	ldr	r0, [r3, #12]
 8004752:	b14c      	cbz	r4, 8004768 <__assert_func+0x24>
 8004754:	4b07      	ldr	r3, [pc, #28]	; (8004774 <__assert_func+0x30>)
 8004756:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800475a:	9100      	str	r1, [sp, #0]
 800475c:	462b      	mov	r3, r5
 800475e:	4906      	ldr	r1, [pc, #24]	; (8004778 <__assert_func+0x34>)
 8004760:	f000 f81e 	bl	80047a0 <fiprintf>
 8004764:	f000 fa3f 	bl	8004be6 <abort>
 8004768:	4b04      	ldr	r3, [pc, #16]	; (800477c <__assert_func+0x38>)
 800476a:	461c      	mov	r4, r3
 800476c:	e7f3      	b.n	8004756 <__assert_func+0x12>
 800476e:	bf00      	nop
 8004770:	2000000c 	.word	0x2000000c
 8004774:	08004fd5 	.word	0x08004fd5
 8004778:	08004fe2 	.word	0x08004fe2
 800477c:	08005010 	.word	0x08005010

08004780 <_close_r>:
 8004780:	b538      	push	{r3, r4, r5, lr}
 8004782:	2300      	movs	r3, #0
 8004784:	4d05      	ldr	r5, [pc, #20]	; (800479c <_close_r+0x1c>)
 8004786:	4604      	mov	r4, r0
 8004788:	4608      	mov	r0, r1
 800478a:	602b      	str	r3, [r5, #0]
 800478c:	f000 fa7e 	bl	8004c8c <_close>
 8004790:	1c43      	adds	r3, r0, #1
 8004792:	d102      	bne.n	800479a <_close_r+0x1a>
 8004794:	682b      	ldr	r3, [r5, #0]
 8004796:	b103      	cbz	r3, 800479a <_close_r+0x1a>
 8004798:	6023      	str	r3, [r4, #0]
 800479a:	bd38      	pop	{r3, r4, r5, pc}
 800479c:	20000218 	.word	0x20000218

080047a0 <fiprintf>:
 80047a0:	b40e      	push	{r1, r2, r3}
 80047a2:	b503      	push	{r0, r1, lr}
 80047a4:	4601      	mov	r1, r0
 80047a6:	ab03      	add	r3, sp, #12
 80047a8:	4805      	ldr	r0, [pc, #20]	; (80047c0 <fiprintf+0x20>)
 80047aa:	f853 2b04 	ldr.w	r2, [r3], #4
 80047ae:	6800      	ldr	r0, [r0, #0]
 80047b0:	9301      	str	r3, [sp, #4]
 80047b2:	f000 f8c9 	bl	8004948 <_vfiprintf_r>
 80047b6:	b002      	add	sp, #8
 80047b8:	f85d eb04 	ldr.w	lr, [sp], #4
 80047bc:	b003      	add	sp, #12
 80047be:	4770      	bx	lr
 80047c0:	2000000c 	.word	0x2000000c

080047c4 <_fstat_r>:
 80047c4:	b538      	push	{r3, r4, r5, lr}
 80047c6:	2300      	movs	r3, #0
 80047c8:	4d06      	ldr	r5, [pc, #24]	; (80047e4 <_fstat_r+0x20>)
 80047ca:	4604      	mov	r4, r0
 80047cc:	4608      	mov	r0, r1
 80047ce:	4611      	mov	r1, r2
 80047d0:	602b      	str	r3, [r5, #0]
 80047d2:	f000 fa63 	bl	8004c9c <_fstat>
 80047d6:	1c43      	adds	r3, r0, #1
 80047d8:	d102      	bne.n	80047e0 <_fstat_r+0x1c>
 80047da:	682b      	ldr	r3, [r5, #0]
 80047dc:	b103      	cbz	r3, 80047e0 <_fstat_r+0x1c>
 80047de:	6023      	str	r3, [r4, #0]
 80047e0:	bd38      	pop	{r3, r4, r5, pc}
 80047e2:	bf00      	nop
 80047e4:	20000218 	.word	0x20000218

080047e8 <_isatty_r>:
 80047e8:	b538      	push	{r3, r4, r5, lr}
 80047ea:	2300      	movs	r3, #0
 80047ec:	4d05      	ldr	r5, [pc, #20]	; (8004804 <_isatty_r+0x1c>)
 80047ee:	4604      	mov	r4, r0
 80047f0:	4608      	mov	r0, r1
 80047f2:	602b      	str	r3, [r5, #0]
 80047f4:	f000 fa62 	bl	8004cbc <_isatty>
 80047f8:	1c43      	adds	r3, r0, #1
 80047fa:	d102      	bne.n	8004802 <_isatty_r+0x1a>
 80047fc:	682b      	ldr	r3, [r5, #0]
 80047fe:	b103      	cbz	r3, 8004802 <_isatty_r+0x1a>
 8004800:	6023      	str	r3, [r4, #0]
 8004802:	bd38      	pop	{r3, r4, r5, pc}
 8004804:	20000218 	.word	0x20000218

08004808 <_lseek_r>:
 8004808:	b538      	push	{r3, r4, r5, lr}
 800480a:	4604      	mov	r4, r0
 800480c:	4608      	mov	r0, r1
 800480e:	4611      	mov	r1, r2
 8004810:	2200      	movs	r2, #0
 8004812:	4d05      	ldr	r5, [pc, #20]	; (8004828 <_lseek_r+0x20>)
 8004814:	602a      	str	r2, [r5, #0]
 8004816:	461a      	mov	r2, r3
 8004818:	f000 fa60 	bl	8004cdc <_lseek>
 800481c:	1c43      	adds	r3, r0, #1
 800481e:	d102      	bne.n	8004826 <_lseek_r+0x1e>
 8004820:	682b      	ldr	r3, [r5, #0]
 8004822:	b103      	cbz	r3, 8004826 <_lseek_r+0x1e>
 8004824:	6023      	str	r3, [r4, #0]
 8004826:	bd38      	pop	{r3, r4, r5, pc}
 8004828:	20000218 	.word	0x20000218

0800482c <__ascii_mbtowc>:
 800482c:	b082      	sub	sp, #8
 800482e:	b901      	cbnz	r1, 8004832 <__ascii_mbtowc+0x6>
 8004830:	a901      	add	r1, sp, #4
 8004832:	b142      	cbz	r2, 8004846 <__ascii_mbtowc+0x1a>
 8004834:	b14b      	cbz	r3, 800484a <__ascii_mbtowc+0x1e>
 8004836:	7813      	ldrb	r3, [r2, #0]
 8004838:	600b      	str	r3, [r1, #0]
 800483a:	7812      	ldrb	r2, [r2, #0]
 800483c:	1e10      	subs	r0, r2, #0
 800483e:	bf18      	it	ne
 8004840:	2001      	movne	r0, #1
 8004842:	b002      	add	sp, #8
 8004844:	4770      	bx	lr
 8004846:	4610      	mov	r0, r2
 8004848:	e7fb      	b.n	8004842 <__ascii_mbtowc+0x16>
 800484a:	f06f 0001 	mvn.w	r0, #1
 800484e:	e7f8      	b.n	8004842 <__ascii_mbtowc+0x16>

08004850 <memmove>:
 8004850:	4288      	cmp	r0, r1
 8004852:	b510      	push	{r4, lr}
 8004854:	eb01 0402 	add.w	r4, r1, r2
 8004858:	d902      	bls.n	8004860 <memmove+0x10>
 800485a:	4284      	cmp	r4, r0
 800485c:	4623      	mov	r3, r4
 800485e:	d807      	bhi.n	8004870 <memmove+0x20>
 8004860:	1e43      	subs	r3, r0, #1
 8004862:	42a1      	cmp	r1, r4
 8004864:	d008      	beq.n	8004878 <memmove+0x28>
 8004866:	f811 2b01 	ldrb.w	r2, [r1], #1
 800486a:	f803 2f01 	strb.w	r2, [r3, #1]!
 800486e:	e7f8      	b.n	8004862 <memmove+0x12>
 8004870:	4601      	mov	r1, r0
 8004872:	4402      	add	r2, r0
 8004874:	428a      	cmp	r2, r1
 8004876:	d100      	bne.n	800487a <memmove+0x2a>
 8004878:	bd10      	pop	{r4, pc}
 800487a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800487e:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8004882:	e7f7      	b.n	8004874 <memmove+0x24>

08004884 <__malloc_lock>:
 8004884:	4801      	ldr	r0, [pc, #4]	; (800488c <__malloc_lock+0x8>)
 8004886:	f7ff b89e 	b.w	80039c6 <__retarget_lock_acquire_recursive>
 800488a:	bf00      	nop
 800488c:	2000020c 	.word	0x2000020c

08004890 <__malloc_unlock>:
 8004890:	4801      	ldr	r0, [pc, #4]	; (8004898 <__malloc_unlock+0x8>)
 8004892:	f7ff b899 	b.w	80039c8 <__retarget_lock_release_recursive>
 8004896:	bf00      	nop
 8004898:	2000020c 	.word	0x2000020c

0800489c <_realloc_r>:
 800489c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80048a0:	4680      	mov	r8, r0
 80048a2:	4614      	mov	r4, r2
 80048a4:	460e      	mov	r6, r1
 80048a6:	b921      	cbnz	r1, 80048b2 <_realloc_r+0x16>
 80048a8:	4611      	mov	r1, r2
 80048aa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80048ae:	f7ff bd13 	b.w	80042d8 <_malloc_r>
 80048b2:	b92a      	cbnz	r2, 80048c0 <_realloc_r+0x24>
 80048b4:	f7ff fca8 	bl	8004208 <_free_r>
 80048b8:	4625      	mov	r5, r4
 80048ba:	4628      	mov	r0, r5
 80048bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80048c0:	f000 f998 	bl	8004bf4 <_malloc_usable_size_r>
 80048c4:	4284      	cmp	r4, r0
 80048c6:	4607      	mov	r7, r0
 80048c8:	d802      	bhi.n	80048d0 <_realloc_r+0x34>
 80048ca:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 80048ce:	d812      	bhi.n	80048f6 <_realloc_r+0x5a>
 80048d0:	4621      	mov	r1, r4
 80048d2:	4640      	mov	r0, r8
 80048d4:	f7ff fd00 	bl	80042d8 <_malloc_r>
 80048d8:	4605      	mov	r5, r0
 80048da:	2800      	cmp	r0, #0
 80048dc:	d0ed      	beq.n	80048ba <_realloc_r+0x1e>
 80048de:	42bc      	cmp	r4, r7
 80048e0:	4622      	mov	r2, r4
 80048e2:	4631      	mov	r1, r6
 80048e4:	bf28      	it	cs
 80048e6:	463a      	movcs	r2, r7
 80048e8:	f7ff f8ea 	bl	8003ac0 <memcpy>
 80048ec:	4631      	mov	r1, r6
 80048ee:	4640      	mov	r0, r8
 80048f0:	f7ff fc8a 	bl	8004208 <_free_r>
 80048f4:	e7e1      	b.n	80048ba <_realloc_r+0x1e>
 80048f6:	4635      	mov	r5, r6
 80048f8:	e7df      	b.n	80048ba <_realloc_r+0x1e>

080048fa <__sfputc_r>:
 80048fa:	6893      	ldr	r3, [r2, #8]
 80048fc:	b410      	push	{r4}
 80048fe:	3b01      	subs	r3, #1
 8004900:	2b00      	cmp	r3, #0
 8004902:	6093      	str	r3, [r2, #8]
 8004904:	da07      	bge.n	8004916 <__sfputc_r+0x1c>
 8004906:	6994      	ldr	r4, [r2, #24]
 8004908:	42a3      	cmp	r3, r4
 800490a:	db01      	blt.n	8004910 <__sfputc_r+0x16>
 800490c:	290a      	cmp	r1, #10
 800490e:	d102      	bne.n	8004916 <__sfputc_r+0x1c>
 8004910:	bc10      	pop	{r4}
 8004912:	f7fd bf65 	b.w	80027e0 <__swbuf_r>
 8004916:	6813      	ldr	r3, [r2, #0]
 8004918:	1c58      	adds	r0, r3, #1
 800491a:	6010      	str	r0, [r2, #0]
 800491c:	7019      	strb	r1, [r3, #0]
 800491e:	4608      	mov	r0, r1
 8004920:	bc10      	pop	{r4}
 8004922:	4770      	bx	lr

08004924 <__sfputs_r>:
 8004924:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004926:	4606      	mov	r6, r0
 8004928:	460f      	mov	r7, r1
 800492a:	4614      	mov	r4, r2
 800492c:	18d5      	adds	r5, r2, r3
 800492e:	42ac      	cmp	r4, r5
 8004930:	d101      	bne.n	8004936 <__sfputs_r+0x12>
 8004932:	2000      	movs	r0, #0
 8004934:	e007      	b.n	8004946 <__sfputs_r+0x22>
 8004936:	463a      	mov	r2, r7
 8004938:	4630      	mov	r0, r6
 800493a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800493e:	f7ff ffdc 	bl	80048fa <__sfputc_r>
 8004942:	1c43      	adds	r3, r0, #1
 8004944:	d1f3      	bne.n	800492e <__sfputs_r+0xa>
 8004946:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08004948 <_vfiprintf_r>:
 8004948:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800494c:	460d      	mov	r5, r1
 800494e:	4614      	mov	r4, r2
 8004950:	4698      	mov	r8, r3
 8004952:	4606      	mov	r6, r0
 8004954:	b09d      	sub	sp, #116	; 0x74
 8004956:	b118      	cbz	r0, 8004960 <_vfiprintf_r+0x18>
 8004958:	6983      	ldr	r3, [r0, #24]
 800495a:	b90b      	cbnz	r3, 8004960 <_vfiprintf_r+0x18>
 800495c:	f7fe ff90 	bl	8003880 <__sinit>
 8004960:	4b89      	ldr	r3, [pc, #548]	; (8004b88 <_vfiprintf_r+0x240>)
 8004962:	429d      	cmp	r5, r3
 8004964:	d11b      	bne.n	800499e <_vfiprintf_r+0x56>
 8004966:	6875      	ldr	r5, [r6, #4]
 8004968:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800496a:	07d9      	lsls	r1, r3, #31
 800496c:	d405      	bmi.n	800497a <_vfiprintf_r+0x32>
 800496e:	89ab      	ldrh	r3, [r5, #12]
 8004970:	059a      	lsls	r2, r3, #22
 8004972:	d402      	bmi.n	800497a <_vfiprintf_r+0x32>
 8004974:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8004976:	f7ff f826 	bl	80039c6 <__retarget_lock_acquire_recursive>
 800497a:	89ab      	ldrh	r3, [r5, #12]
 800497c:	071b      	lsls	r3, r3, #28
 800497e:	d501      	bpl.n	8004984 <_vfiprintf_r+0x3c>
 8004980:	692b      	ldr	r3, [r5, #16]
 8004982:	b9eb      	cbnz	r3, 80049c0 <_vfiprintf_r+0x78>
 8004984:	4629      	mov	r1, r5
 8004986:	4630      	mov	r0, r6
 8004988:	f7fd ff7c 	bl	8002884 <__swsetup_r>
 800498c:	b1c0      	cbz	r0, 80049c0 <_vfiprintf_r+0x78>
 800498e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8004990:	07dc      	lsls	r4, r3, #31
 8004992:	d50e      	bpl.n	80049b2 <_vfiprintf_r+0x6a>
 8004994:	f04f 30ff 	mov.w	r0, #4294967295
 8004998:	b01d      	add	sp, #116	; 0x74
 800499a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800499e:	4b7b      	ldr	r3, [pc, #492]	; (8004b8c <_vfiprintf_r+0x244>)
 80049a0:	429d      	cmp	r5, r3
 80049a2:	d101      	bne.n	80049a8 <_vfiprintf_r+0x60>
 80049a4:	68b5      	ldr	r5, [r6, #8]
 80049a6:	e7df      	b.n	8004968 <_vfiprintf_r+0x20>
 80049a8:	4b79      	ldr	r3, [pc, #484]	; (8004b90 <_vfiprintf_r+0x248>)
 80049aa:	429d      	cmp	r5, r3
 80049ac:	bf08      	it	eq
 80049ae:	68f5      	ldreq	r5, [r6, #12]
 80049b0:	e7da      	b.n	8004968 <_vfiprintf_r+0x20>
 80049b2:	89ab      	ldrh	r3, [r5, #12]
 80049b4:	0598      	lsls	r0, r3, #22
 80049b6:	d4ed      	bmi.n	8004994 <_vfiprintf_r+0x4c>
 80049b8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80049ba:	f7ff f805 	bl	80039c8 <__retarget_lock_release_recursive>
 80049be:	e7e9      	b.n	8004994 <_vfiprintf_r+0x4c>
 80049c0:	2300      	movs	r3, #0
 80049c2:	9309      	str	r3, [sp, #36]	; 0x24
 80049c4:	2320      	movs	r3, #32
 80049c6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80049ca:	2330      	movs	r3, #48	; 0x30
 80049cc:	f04f 0901 	mov.w	r9, #1
 80049d0:	f8cd 800c 	str.w	r8, [sp, #12]
 80049d4:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 8004b94 <_vfiprintf_r+0x24c>
 80049d8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80049dc:	4623      	mov	r3, r4
 80049de:	469a      	mov	sl, r3
 80049e0:	f813 2b01 	ldrb.w	r2, [r3], #1
 80049e4:	b10a      	cbz	r2, 80049ea <_vfiprintf_r+0xa2>
 80049e6:	2a25      	cmp	r2, #37	; 0x25
 80049e8:	d1f9      	bne.n	80049de <_vfiprintf_r+0x96>
 80049ea:	ebba 0b04 	subs.w	fp, sl, r4
 80049ee:	d00b      	beq.n	8004a08 <_vfiprintf_r+0xc0>
 80049f0:	465b      	mov	r3, fp
 80049f2:	4622      	mov	r2, r4
 80049f4:	4629      	mov	r1, r5
 80049f6:	4630      	mov	r0, r6
 80049f8:	f7ff ff94 	bl	8004924 <__sfputs_r>
 80049fc:	3001      	adds	r0, #1
 80049fe:	f000 80aa 	beq.w	8004b56 <_vfiprintf_r+0x20e>
 8004a02:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004a04:	445a      	add	r2, fp
 8004a06:	9209      	str	r2, [sp, #36]	; 0x24
 8004a08:	f89a 3000 	ldrb.w	r3, [sl]
 8004a0c:	2b00      	cmp	r3, #0
 8004a0e:	f000 80a2 	beq.w	8004b56 <_vfiprintf_r+0x20e>
 8004a12:	2300      	movs	r3, #0
 8004a14:	f04f 32ff 	mov.w	r2, #4294967295
 8004a18:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004a1c:	f10a 0a01 	add.w	sl, sl, #1
 8004a20:	9304      	str	r3, [sp, #16]
 8004a22:	9307      	str	r3, [sp, #28]
 8004a24:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8004a28:	931a      	str	r3, [sp, #104]	; 0x68
 8004a2a:	4654      	mov	r4, sl
 8004a2c:	2205      	movs	r2, #5
 8004a2e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004a32:	4858      	ldr	r0, [pc, #352]	; (8004b94 <_vfiprintf_r+0x24c>)
 8004a34:	f7ff f836 	bl	8003aa4 <memchr>
 8004a38:	9a04      	ldr	r2, [sp, #16]
 8004a3a:	b9d8      	cbnz	r0, 8004a74 <_vfiprintf_r+0x12c>
 8004a3c:	06d1      	lsls	r1, r2, #27
 8004a3e:	bf44      	itt	mi
 8004a40:	2320      	movmi	r3, #32
 8004a42:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8004a46:	0713      	lsls	r3, r2, #28
 8004a48:	bf44      	itt	mi
 8004a4a:	232b      	movmi	r3, #43	; 0x2b
 8004a4c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8004a50:	f89a 3000 	ldrb.w	r3, [sl]
 8004a54:	2b2a      	cmp	r3, #42	; 0x2a
 8004a56:	d015      	beq.n	8004a84 <_vfiprintf_r+0x13c>
 8004a58:	4654      	mov	r4, sl
 8004a5a:	2000      	movs	r0, #0
 8004a5c:	f04f 0c0a 	mov.w	ip, #10
 8004a60:	9a07      	ldr	r2, [sp, #28]
 8004a62:	4621      	mov	r1, r4
 8004a64:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004a68:	3b30      	subs	r3, #48	; 0x30
 8004a6a:	2b09      	cmp	r3, #9
 8004a6c:	d94e      	bls.n	8004b0c <_vfiprintf_r+0x1c4>
 8004a6e:	b1b0      	cbz	r0, 8004a9e <_vfiprintf_r+0x156>
 8004a70:	9207      	str	r2, [sp, #28]
 8004a72:	e014      	b.n	8004a9e <_vfiprintf_r+0x156>
 8004a74:	eba0 0308 	sub.w	r3, r0, r8
 8004a78:	fa09 f303 	lsl.w	r3, r9, r3
 8004a7c:	4313      	orrs	r3, r2
 8004a7e:	46a2      	mov	sl, r4
 8004a80:	9304      	str	r3, [sp, #16]
 8004a82:	e7d2      	b.n	8004a2a <_vfiprintf_r+0xe2>
 8004a84:	9b03      	ldr	r3, [sp, #12]
 8004a86:	1d19      	adds	r1, r3, #4
 8004a88:	681b      	ldr	r3, [r3, #0]
 8004a8a:	9103      	str	r1, [sp, #12]
 8004a8c:	2b00      	cmp	r3, #0
 8004a8e:	bfbb      	ittet	lt
 8004a90:	425b      	neglt	r3, r3
 8004a92:	f042 0202 	orrlt.w	r2, r2, #2
 8004a96:	9307      	strge	r3, [sp, #28]
 8004a98:	9307      	strlt	r3, [sp, #28]
 8004a9a:	bfb8      	it	lt
 8004a9c:	9204      	strlt	r2, [sp, #16]
 8004a9e:	7823      	ldrb	r3, [r4, #0]
 8004aa0:	2b2e      	cmp	r3, #46	; 0x2e
 8004aa2:	d10c      	bne.n	8004abe <_vfiprintf_r+0x176>
 8004aa4:	7863      	ldrb	r3, [r4, #1]
 8004aa6:	2b2a      	cmp	r3, #42	; 0x2a
 8004aa8:	d135      	bne.n	8004b16 <_vfiprintf_r+0x1ce>
 8004aaa:	9b03      	ldr	r3, [sp, #12]
 8004aac:	3402      	adds	r4, #2
 8004aae:	1d1a      	adds	r2, r3, #4
 8004ab0:	681b      	ldr	r3, [r3, #0]
 8004ab2:	9203      	str	r2, [sp, #12]
 8004ab4:	2b00      	cmp	r3, #0
 8004ab6:	bfb8      	it	lt
 8004ab8:	f04f 33ff 	movlt.w	r3, #4294967295
 8004abc:	9305      	str	r3, [sp, #20]
 8004abe:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 8004b98 <_vfiprintf_r+0x250>
 8004ac2:	2203      	movs	r2, #3
 8004ac4:	4650      	mov	r0, sl
 8004ac6:	7821      	ldrb	r1, [r4, #0]
 8004ac8:	f7fe ffec 	bl	8003aa4 <memchr>
 8004acc:	b140      	cbz	r0, 8004ae0 <_vfiprintf_r+0x198>
 8004ace:	2340      	movs	r3, #64	; 0x40
 8004ad0:	eba0 000a 	sub.w	r0, r0, sl
 8004ad4:	fa03 f000 	lsl.w	r0, r3, r0
 8004ad8:	9b04      	ldr	r3, [sp, #16]
 8004ada:	3401      	adds	r4, #1
 8004adc:	4303      	orrs	r3, r0
 8004ade:	9304      	str	r3, [sp, #16]
 8004ae0:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004ae4:	2206      	movs	r2, #6
 8004ae6:	482d      	ldr	r0, [pc, #180]	; (8004b9c <_vfiprintf_r+0x254>)
 8004ae8:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8004aec:	f7fe ffda 	bl	8003aa4 <memchr>
 8004af0:	2800      	cmp	r0, #0
 8004af2:	d03f      	beq.n	8004b74 <_vfiprintf_r+0x22c>
 8004af4:	4b2a      	ldr	r3, [pc, #168]	; (8004ba0 <_vfiprintf_r+0x258>)
 8004af6:	bb1b      	cbnz	r3, 8004b40 <_vfiprintf_r+0x1f8>
 8004af8:	9b03      	ldr	r3, [sp, #12]
 8004afa:	3307      	adds	r3, #7
 8004afc:	f023 0307 	bic.w	r3, r3, #7
 8004b00:	3308      	adds	r3, #8
 8004b02:	9303      	str	r3, [sp, #12]
 8004b04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004b06:	443b      	add	r3, r7
 8004b08:	9309      	str	r3, [sp, #36]	; 0x24
 8004b0a:	e767      	b.n	80049dc <_vfiprintf_r+0x94>
 8004b0c:	460c      	mov	r4, r1
 8004b0e:	2001      	movs	r0, #1
 8004b10:	fb0c 3202 	mla	r2, ip, r2, r3
 8004b14:	e7a5      	b.n	8004a62 <_vfiprintf_r+0x11a>
 8004b16:	2300      	movs	r3, #0
 8004b18:	f04f 0c0a 	mov.w	ip, #10
 8004b1c:	4619      	mov	r1, r3
 8004b1e:	3401      	adds	r4, #1
 8004b20:	9305      	str	r3, [sp, #20]
 8004b22:	4620      	mov	r0, r4
 8004b24:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004b28:	3a30      	subs	r2, #48	; 0x30
 8004b2a:	2a09      	cmp	r2, #9
 8004b2c:	d903      	bls.n	8004b36 <_vfiprintf_r+0x1ee>
 8004b2e:	2b00      	cmp	r3, #0
 8004b30:	d0c5      	beq.n	8004abe <_vfiprintf_r+0x176>
 8004b32:	9105      	str	r1, [sp, #20]
 8004b34:	e7c3      	b.n	8004abe <_vfiprintf_r+0x176>
 8004b36:	4604      	mov	r4, r0
 8004b38:	2301      	movs	r3, #1
 8004b3a:	fb0c 2101 	mla	r1, ip, r1, r2
 8004b3e:	e7f0      	b.n	8004b22 <_vfiprintf_r+0x1da>
 8004b40:	ab03      	add	r3, sp, #12
 8004b42:	9300      	str	r3, [sp, #0]
 8004b44:	462a      	mov	r2, r5
 8004b46:	4630      	mov	r0, r6
 8004b48:	4b16      	ldr	r3, [pc, #88]	; (8004ba4 <_vfiprintf_r+0x25c>)
 8004b4a:	a904      	add	r1, sp, #16
 8004b4c:	f7fd f9d8 	bl	8001f00 <_printf_float>
 8004b50:	4607      	mov	r7, r0
 8004b52:	1c78      	adds	r0, r7, #1
 8004b54:	d1d6      	bne.n	8004b04 <_vfiprintf_r+0x1bc>
 8004b56:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8004b58:	07d9      	lsls	r1, r3, #31
 8004b5a:	d405      	bmi.n	8004b68 <_vfiprintf_r+0x220>
 8004b5c:	89ab      	ldrh	r3, [r5, #12]
 8004b5e:	059a      	lsls	r2, r3, #22
 8004b60:	d402      	bmi.n	8004b68 <_vfiprintf_r+0x220>
 8004b62:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8004b64:	f7fe ff30 	bl	80039c8 <__retarget_lock_release_recursive>
 8004b68:	89ab      	ldrh	r3, [r5, #12]
 8004b6a:	065b      	lsls	r3, r3, #25
 8004b6c:	f53f af12 	bmi.w	8004994 <_vfiprintf_r+0x4c>
 8004b70:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004b72:	e711      	b.n	8004998 <_vfiprintf_r+0x50>
 8004b74:	ab03      	add	r3, sp, #12
 8004b76:	9300      	str	r3, [sp, #0]
 8004b78:	462a      	mov	r2, r5
 8004b7a:	4630      	mov	r0, r6
 8004b7c:	4b09      	ldr	r3, [pc, #36]	; (8004ba4 <_vfiprintf_r+0x25c>)
 8004b7e:	a904      	add	r1, sp, #16
 8004b80:	f7fd fc5a 	bl	8002438 <_printf_i>
 8004b84:	e7e4      	b.n	8004b50 <_vfiprintf_r+0x208>
 8004b86:	bf00      	nop
 8004b88:	08004e2c 	.word	0x08004e2c
 8004b8c:	08004e4c 	.word	0x08004e4c
 8004b90:	08004e0c 	.word	0x08004e0c
 8004b94:	08004fc4 	.word	0x08004fc4
 8004b98:	08004fca 	.word	0x08004fca
 8004b9c:	08004fce 	.word	0x08004fce
 8004ba0:	08001f01 	.word	0x08001f01
 8004ba4:	08004925 	.word	0x08004925

08004ba8 <_read_r>:
 8004ba8:	b538      	push	{r3, r4, r5, lr}
 8004baa:	4604      	mov	r4, r0
 8004bac:	4608      	mov	r0, r1
 8004bae:	4611      	mov	r1, r2
 8004bb0:	2200      	movs	r2, #0
 8004bb2:	4d05      	ldr	r5, [pc, #20]	; (8004bc8 <_read_r+0x20>)
 8004bb4:	602a      	str	r2, [r5, #0]
 8004bb6:	461a      	mov	r2, r3
 8004bb8:	f000 f898 	bl	8004cec <_read>
 8004bbc:	1c43      	adds	r3, r0, #1
 8004bbe:	d102      	bne.n	8004bc6 <_read_r+0x1e>
 8004bc0:	682b      	ldr	r3, [r5, #0]
 8004bc2:	b103      	cbz	r3, 8004bc6 <_read_r+0x1e>
 8004bc4:	6023      	str	r3, [r4, #0]
 8004bc6:	bd38      	pop	{r3, r4, r5, pc}
 8004bc8:	20000218 	.word	0x20000218

08004bcc <__ascii_wctomb>:
 8004bcc:	4603      	mov	r3, r0
 8004bce:	4608      	mov	r0, r1
 8004bd0:	b141      	cbz	r1, 8004be4 <__ascii_wctomb+0x18>
 8004bd2:	2aff      	cmp	r2, #255	; 0xff
 8004bd4:	d904      	bls.n	8004be0 <__ascii_wctomb+0x14>
 8004bd6:	228a      	movs	r2, #138	; 0x8a
 8004bd8:	f04f 30ff 	mov.w	r0, #4294967295
 8004bdc:	601a      	str	r2, [r3, #0]
 8004bde:	4770      	bx	lr
 8004be0:	2001      	movs	r0, #1
 8004be2:	700a      	strb	r2, [r1, #0]
 8004be4:	4770      	bx	lr

08004be6 <abort>:
 8004be6:	2006      	movs	r0, #6
 8004be8:	b508      	push	{r3, lr}
 8004bea:	f000 f833 	bl	8004c54 <raise>
 8004bee:	2001      	movs	r0, #1
 8004bf0:	f000 f892 	bl	8004d18 <_exit>

08004bf4 <_malloc_usable_size_r>:
 8004bf4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004bf8:	1f18      	subs	r0, r3, #4
 8004bfa:	2b00      	cmp	r3, #0
 8004bfc:	bfbc      	itt	lt
 8004bfe:	580b      	ldrlt	r3, [r1, r0]
 8004c00:	18c0      	addlt	r0, r0, r3
 8004c02:	4770      	bx	lr

08004c04 <_raise_r>:
 8004c04:	291f      	cmp	r1, #31
 8004c06:	b538      	push	{r3, r4, r5, lr}
 8004c08:	4604      	mov	r4, r0
 8004c0a:	460d      	mov	r5, r1
 8004c0c:	d904      	bls.n	8004c18 <_raise_r+0x14>
 8004c0e:	2316      	movs	r3, #22
 8004c10:	6003      	str	r3, [r0, #0]
 8004c12:	f04f 30ff 	mov.w	r0, #4294967295
 8004c16:	bd38      	pop	{r3, r4, r5, pc}
 8004c18:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8004c1a:	b112      	cbz	r2, 8004c22 <_raise_r+0x1e>
 8004c1c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8004c20:	b94b      	cbnz	r3, 8004c36 <_raise_r+0x32>
 8004c22:	4620      	mov	r0, r4
 8004c24:	f000 f830 	bl	8004c88 <_getpid_r>
 8004c28:	462a      	mov	r2, r5
 8004c2a:	4601      	mov	r1, r0
 8004c2c:	4620      	mov	r0, r4
 8004c2e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004c32:	f000 b817 	b.w	8004c64 <_kill_r>
 8004c36:	2b01      	cmp	r3, #1
 8004c38:	d00a      	beq.n	8004c50 <_raise_r+0x4c>
 8004c3a:	1c59      	adds	r1, r3, #1
 8004c3c:	d103      	bne.n	8004c46 <_raise_r+0x42>
 8004c3e:	2316      	movs	r3, #22
 8004c40:	6003      	str	r3, [r0, #0]
 8004c42:	2001      	movs	r0, #1
 8004c44:	e7e7      	b.n	8004c16 <_raise_r+0x12>
 8004c46:	2400      	movs	r4, #0
 8004c48:	4628      	mov	r0, r5
 8004c4a:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8004c4e:	4798      	blx	r3
 8004c50:	2000      	movs	r0, #0
 8004c52:	e7e0      	b.n	8004c16 <_raise_r+0x12>

08004c54 <raise>:
 8004c54:	4b02      	ldr	r3, [pc, #8]	; (8004c60 <raise+0xc>)
 8004c56:	4601      	mov	r1, r0
 8004c58:	6818      	ldr	r0, [r3, #0]
 8004c5a:	f7ff bfd3 	b.w	8004c04 <_raise_r>
 8004c5e:	bf00      	nop
 8004c60:	2000000c 	.word	0x2000000c

08004c64 <_kill_r>:
 8004c64:	b538      	push	{r3, r4, r5, lr}
 8004c66:	2300      	movs	r3, #0
 8004c68:	4d06      	ldr	r5, [pc, #24]	; (8004c84 <_kill_r+0x20>)
 8004c6a:	4604      	mov	r4, r0
 8004c6c:	4608      	mov	r0, r1
 8004c6e:	4611      	mov	r1, r2
 8004c70:	602b      	str	r3, [r5, #0]
 8004c72:	f000 f82b 	bl	8004ccc <_kill>
 8004c76:	1c43      	adds	r3, r0, #1
 8004c78:	d102      	bne.n	8004c80 <_kill_r+0x1c>
 8004c7a:	682b      	ldr	r3, [r5, #0]
 8004c7c:	b103      	cbz	r3, 8004c80 <_kill_r+0x1c>
 8004c7e:	6023      	str	r3, [r4, #0]
 8004c80:	bd38      	pop	{r3, r4, r5, pc}
 8004c82:	bf00      	nop
 8004c84:	20000218 	.word	0x20000218

08004c88 <_getpid_r>:
 8004c88:	f000 b810 	b.w	8004cac <_getpid>

08004c8c <_close>:
 8004c8c:	2258      	movs	r2, #88	; 0x58
 8004c8e:	4b02      	ldr	r3, [pc, #8]	; (8004c98 <_close+0xc>)
 8004c90:	f04f 30ff 	mov.w	r0, #4294967295
 8004c94:	601a      	str	r2, [r3, #0]
 8004c96:	4770      	bx	lr
 8004c98:	20000218 	.word	0x20000218

08004c9c <_fstat>:
 8004c9c:	2258      	movs	r2, #88	; 0x58
 8004c9e:	4b02      	ldr	r3, [pc, #8]	; (8004ca8 <_fstat+0xc>)
 8004ca0:	f04f 30ff 	mov.w	r0, #4294967295
 8004ca4:	601a      	str	r2, [r3, #0]
 8004ca6:	4770      	bx	lr
 8004ca8:	20000218 	.word	0x20000218

08004cac <_getpid>:
 8004cac:	2258      	movs	r2, #88	; 0x58
 8004cae:	4b02      	ldr	r3, [pc, #8]	; (8004cb8 <_getpid+0xc>)
 8004cb0:	f04f 30ff 	mov.w	r0, #4294967295
 8004cb4:	601a      	str	r2, [r3, #0]
 8004cb6:	4770      	bx	lr
 8004cb8:	20000218 	.word	0x20000218

08004cbc <_isatty>:
 8004cbc:	2258      	movs	r2, #88	; 0x58
 8004cbe:	4b02      	ldr	r3, [pc, #8]	; (8004cc8 <_isatty+0xc>)
 8004cc0:	2000      	movs	r0, #0
 8004cc2:	601a      	str	r2, [r3, #0]
 8004cc4:	4770      	bx	lr
 8004cc6:	bf00      	nop
 8004cc8:	20000218 	.word	0x20000218

08004ccc <_kill>:
 8004ccc:	2258      	movs	r2, #88	; 0x58
 8004cce:	4b02      	ldr	r3, [pc, #8]	; (8004cd8 <_kill+0xc>)
 8004cd0:	f04f 30ff 	mov.w	r0, #4294967295
 8004cd4:	601a      	str	r2, [r3, #0]
 8004cd6:	4770      	bx	lr
 8004cd8:	20000218 	.word	0x20000218

08004cdc <_lseek>:
 8004cdc:	2258      	movs	r2, #88	; 0x58
 8004cde:	4b02      	ldr	r3, [pc, #8]	; (8004ce8 <_lseek+0xc>)
 8004ce0:	f04f 30ff 	mov.w	r0, #4294967295
 8004ce4:	601a      	str	r2, [r3, #0]
 8004ce6:	4770      	bx	lr
 8004ce8:	20000218 	.word	0x20000218

08004cec <_read>:
 8004cec:	2258      	movs	r2, #88	; 0x58
 8004cee:	4b02      	ldr	r3, [pc, #8]	; (8004cf8 <_read+0xc>)
 8004cf0:	f04f 30ff 	mov.w	r0, #4294967295
 8004cf4:	601a      	str	r2, [r3, #0]
 8004cf6:	4770      	bx	lr
 8004cf8:	20000218 	.word	0x20000218

08004cfc <_sbrk>:
 8004cfc:	4a04      	ldr	r2, [pc, #16]	; (8004d10 <_sbrk+0x14>)
 8004cfe:	4603      	mov	r3, r0
 8004d00:	6811      	ldr	r1, [r2, #0]
 8004d02:	b909      	cbnz	r1, 8004d08 <_sbrk+0xc>
 8004d04:	4903      	ldr	r1, [pc, #12]	; (8004d14 <_sbrk+0x18>)
 8004d06:	6011      	str	r1, [r2, #0]
 8004d08:	6810      	ldr	r0, [r2, #0]
 8004d0a:	4403      	add	r3, r0
 8004d0c:	6013      	str	r3, [r2, #0]
 8004d0e:	4770      	bx	lr
 8004d10:	2000021c 	.word	0x2000021c
 8004d14:	20000220 	.word	0x20000220

08004d18 <_exit>:
 8004d18:	e7fe      	b.n	8004d18 <_exit>
	...

08004d1c <_init>:
 8004d1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004d1e:	bf00      	nop
 8004d20:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004d22:	bc08      	pop	{r3}
 8004d24:	469e      	mov	lr, r3
 8004d26:	4770      	bx	lr

08004d28 <_fini>:
 8004d28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004d2a:	bf00      	nop
 8004d2c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004d2e:	bc08      	pop	{r3}
 8004d30:	469e      	mov	lr, r3
 8004d32:	4770      	bx	lr
